<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1286" onload="init(evt)" viewBox="0 0 1200 1286" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1286" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1269.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1269.00"> </text><svg id="frames" x="10" width="1180" total_samples="4317799159"><g><title>[[stack]] (876,188 samples, 0.02%)</title><rect x="0.0000%" y="1205" width="0.0203%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="876188"/><text x="0.2500%" y="1215.50"></text></g><g><title>[ld-linux-x86-64.so.2] (876,188 samples, 0.02%)</title><rect x="0.0000%" y="1189" width="0.0203%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="876188"/><text x="0.2500%" y="1199.50"></text></g><g><title>emi_web (5,542,426 samples, 0.13%)</title><rect x="0.0000%" y="1221" width="0.1284%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="5542426"/><text x="0.2500%" y="1231.50"></text></g><g><title>_start (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="1205" width="0.1061%" height="15" fill="rgb(248,212,6)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="1215.50"></text></g><g><title>__libc_start_main (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="1189" width="0.1061%" height="15" fill="rgb(208,68,35)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="1199.50"></text></g><g><title>[libc.so.6] (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="1173" width="0.1061%" height="15" fill="rgb(232,128,0)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="1183.50"></text></g><g><title>main (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="1157" width="0.1061%" height="15" fill="rgb(207,160,47)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="1167.50"></text></g><g><title>std::rt::lang_start_internal (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="1141" width="0.1061%" height="15" fill="rgb(228,23,34)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="1151.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="1125" width="0.1061%" height="15" fill="rgb(218,30,26)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="1135.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="1109" width="0.1061%" height="15" fill="rgb(220,122,19)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="1093" width="0.1061%" height="15" fill="rgb(250,228,42)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="1103.50"></text></g><g><title>emi_web::main (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="1077" width="0.1061%" height="15" fill="rgb(240,193,28)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="1087.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="1061" width="0.1061%" height="15" fill="rgb(216,20,37)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="1071.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on_inner (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="1045" width="0.1061%" height="15" fill="rgb(206,188,39)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="1029" width="0.1061%" height="15" fill="rgb(217,207,13)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="1039.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="1013" width="0.1061%" height="15" fill="rgb(231,73,38)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on::_{{closure}} (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="997" width="0.1061%" height="15" fill="rgb(225,20,46)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="1007.50"></text></g><g><title>tokio::runtime::context::blocking::BlockingRegionGuard::block_on (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="981" width="0.1061%" height="15" fill="rgb(210,31,41)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="991.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="965" width="0.1061%" height="15" fill="rgb(221,200,47)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="975.50"></text></g><g><title>tokio::runtime::coop::budget (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="949" width="0.1061%" height="15" fill="rgb(226,26,5)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="959.50"></text></g><g><title>tokio::runtime::coop::with_budget (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="933" width="0.1061%" height="15" fill="rgb(249,33,26)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="943.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on::_{{closure}} (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="917" width="0.1061%" height="15" fill="rgb(235,183,28)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="927.50"></text></g><g><title>emi_web::main::_{{closure}} (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="901" width="0.1061%" height="15" fill="rgb(221,5,38)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="911.50"></text></g><g><title>axum::routing::Router&lt;S&gt;::new (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="885" width="0.1061%" height="15" fill="rgb(247,18,42)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="895.50"></text></g><g><title>axum::routing::path_router::PathRouter&lt;S,_&gt;::new_fallback (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="869" width="0.1061%" height="15" fill="rgb(241,131,45)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="879.50"></text></g><g><title>axum::routing::path_router::PathRouter&lt;S,_&gt;::set_fallback (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="853" width="0.1061%" height="15" fill="rgb(249,31,29)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="863.50"></text></g><g><title>axum::routing::path_router::PathRouter&lt;S,_&gt;::replace_endpoint (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="837" width="0.1061%" height="15" fill="rgb(225,111,53)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="847.50"></text></g><g><title>axum::routing::path_router::PathRouter&lt;S,_&gt;::route_endpoint (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="821" width="0.1061%" height="15" fill="rgb(238,160,17)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="805" width="0.1061%" height="15" fill="rgb(214,148,48)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="789" width="0.1061%" height="15" fill="rgb(232,36,49)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="799.50"></text></g><g><title>[libc.so.6] (4,582,862 samples, 0.11%)</title><rect x="0.0222%" y="773" width="0.1061%" height="15" fill="rgb(209,103,24)" fg:x="959564" fg:w="4582862"/><text x="0.2722%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4,645,293 samples, 0.11%)</title><rect x="0.1284%" y="1205" width="0.1076%" height="15" fill="rgb(229,88,8)" fg:x="5542426" fg:w="4645293"/><text x="0.3784%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,636,710 samples, 0.08%)</title><rect x="0.2359%" y="1205" width="0.0842%" height="15" fill="rgb(213,181,19)" fg:x="10187719" fg:w="3636710"/><text x="0.4859%" y="1215.50"></text></g><g><title>&lt;hyper::server::conn::http1::UpgradeableConnection&lt;I,S&gt; as core::future::future::Future&gt;::poll (944,796 samples, 0.02%)</title><rect x="0.3295%" y="1205" width="0.0219%" height="15" fill="rgb(254,191,54)" fg:x="14225117" fg:w="944796"/><text x="0.5795%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (1,841,731 samples, 0.04%)</title><rect x="0.3513%" y="1189" width="0.0427%" height="15" fill="rgb(241,83,37)" fg:x="15169913" fg:w="1841731"/><text x="0.6013%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,841,731 samples, 0.04%)</title><rect x="0.3513%" y="1173" width="0.0427%" height="15" fill="rgb(233,36,39)" fg:x="15169913" fg:w="1841731"/><text x="0.6013%" y="1183.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1,841,731 samples, 0.04%)</title><rect x="0.3513%" y="1157" width="0.0427%" height="15" fill="rgb(226,3,54)" fg:x="15169913" fg:w="1841731"/><text x="0.6013%" y="1167.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1,841,731 samples, 0.04%)</title><rect x="0.3513%" y="1141" width="0.0427%" height="15" fill="rgb(245,192,40)" fg:x="15169913" fg:w="1841731"/><text x="0.6013%" y="1151.50"></text></g><g><title>[[heap]] (3,683,462 samples, 0.09%)</title><rect x="0.3513%" y="1205" width="0.0853%" height="15" fill="rgb(238,167,29)" fg:x="15169913" fg:w="3683462"/><text x="0.6013%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (1,841,731 samples, 0.04%)</title><rect x="0.3940%" y="1189" width="0.0427%" height="15" fill="rgb(232,182,51)" fg:x="17011644" fg:w="1841731"/><text x="0.6440%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,841,731 samples, 0.04%)</title><rect x="0.3940%" y="1173" width="0.0427%" height="15" fill="rgb(231,60,39)" fg:x="17011644" fg:w="1841731"/><text x="0.6440%" y="1183.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1,841,731 samples, 0.04%)</title><rect x="0.3940%" y="1157" width="0.0427%" height="15" fill="rgb(208,69,12)" fg:x="17011644" fg:w="1841731"/><text x="0.6440%" y="1167.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1,841,731 samples, 0.04%)</title><rect x="0.3940%" y="1141" width="0.0427%" height="15" fill="rgb(235,93,37)" fg:x="17011644" fg:w="1841731"/><text x="0.6440%" y="1151.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4,932,358 samples, 0.11%)</title><rect x="0.4366%" y="1189" width="0.1142%" height="15" fill="rgb(213,116,39)" fg:x="18853375" fg:w="4932358"/><text x="0.6866%" y="1199.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2,572,578 samples, 0.06%)</title><rect x="0.5509%" y="1189" width="0.0596%" height="15" fill="rgb(222,207,29)" fg:x="23785733" fg:w="2572578"/><text x="0.8009%" y="1199.50"></text></g><g><title>emi_web::realtime_websocket_stream::_{{closure}}::_{{closure}} (2,572,578 samples, 0.06%)</title><rect x="0.5509%" y="1173" width="0.0596%" height="15" fill="rgb(206,96,30)" fg:x="23785733" fg:w="2572578"/><text x="0.8009%" y="1183.50"></text></g><g><title>axum::extract::ws::WebSocket::recv::_{{closure}} (2,572,578 samples, 0.06%)</title><rect x="0.5509%" y="1157" width="0.0596%" height="15" fill="rgb(218,138,4)" fg:x="23785733" fg:w="2572578"/><text x="0.8009%" y="1167.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (2,572,578 samples, 0.06%)</title><rect x="0.5509%" y="1141" width="0.0596%" height="15" fill="rgb(250,191,14)" fg:x="23785733" fg:w="2572578"/><text x="0.8009%" y="1151.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (2,572,578 samples, 0.06%)</title><rect x="0.5509%" y="1125" width="0.0596%" height="15" fill="rgb(239,60,40)" fg:x="23785733" fg:w="2572578"/><text x="0.8009%" y="1135.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (2,162,985 samples, 0.05%)</title><rect x="0.6105%" y="1189" width="0.0501%" height="15" fill="rgb(206,27,48)" fg:x="26358311" fg:w="2162985"/><text x="0.8605%" y="1199.50"></text></g><g><title>hyper::rt::io::ReadBufCursor::as_mut (2,162,985 samples, 0.05%)</title><rect x="0.6105%" y="1173" width="0.0501%" height="15" fill="rgb(225,35,8)" fg:x="26358311" fg:w="2162985"/><text x="0.8605%" y="1183.50"></text></g><g><title>&lt;ratatui::buffer::buffer::Buffer as core::fmt::Debug&gt;::fmt (36,833,345 samples, 0.85%)</title><rect x="0.6606%" y="1189" width="0.8531%" height="15" fill="rgb(250,213,24)" fg:x="28521296" fg:w="36833345"/><text x="0.9106%" y="1199.50"></text></g><g><title>&lt;str as unicode_width::UnicodeWidthStr&gt;::width (10,664,685 samples, 0.25%)</title><rect x="1.2666%" y="1173" width="0.2470%" height="15" fill="rgb(247,123,22)" fg:x="54689956" fg:w="10664685"/><text x="1.5166%" y="1183.50"></text></g><g><title>unicode_width::tables::str_width (10,664,685 samples, 0.25%)</title><rect x="1.2666%" y="1157" width="0.2470%" height="15" fill="rgb(231,138,38)" fg:x="54689956" fg:w="10664685"/><text x="1.5166%" y="1167.50"></text></g><g><title>&lt;ratatui::style::color::Color as core::fmt::Debug&gt;::fmt (1,767,647 samples, 0.04%)</title><rect x="1.5136%" y="1189" width="0.0409%" height="15" fill="rgb(231,145,46)" fg:x="65354641" fg:w="1767647"/><text x="1.7636%" y="1199.50"></text></g><g><title>&lt;ratatui::widgets::reflow::LineTruncator&lt;O,I&gt; as ratatui::widgets::reflow::LineComposer&gt;::next_line (1,665,496 samples, 0.04%)</title><rect x="1.5545%" y="1189" width="0.0386%" height="15" fill="rgb(251,118,11)" fg:x="67122288" fg:w="1665496"/><text x="1.8045%" y="1199.50"></text></g><g><title>&lt;tokio_tungstenite::WebSocketStream&lt;T&gt; as futures_sink::Sink&lt;tungstenite::protocol::message::Message&gt;&gt;::start_send (661,321 samples, 0.02%)</title><rect x="1.5931%" y="1189" width="0.0153%" height="15" fill="rgb(217,147,25)" fg:x="68787784" fg:w="661321"/><text x="1.8431%" y="1199.50"></text></g><g><title>&lt;unicode_segmentation::grapheme::Graphemes as core::iter::traits::iterator::Iterator&gt;::next (2,071,943 samples, 0.05%)</title><rect x="1.6084%" y="1189" width="0.0480%" height="15" fill="rgb(247,81,37)" fg:x="69449105" fg:w="2071943"/><text x="1.8584%" y="1199.50"></text></g><g><title>unicode_segmentation::grapheme::GraphemeCursor::cur_cursor (2,071,943 samples, 0.05%)</title><rect x="1.6084%" y="1173" width="0.0480%" height="15" fill="rgb(209,12,38)" fg:x="69449105" fg:w="2071943"/><text x="1.8584%" y="1183.50"></text></g><g><title>&lt;core::option::Option&lt;W&gt; as ratatui::widgets::WidgetRef&gt;::render_ref (1,763,159 samples, 0.04%)</title><rect x="1.6564%" y="1157" width="0.0408%" height="15" fill="rgb(227,1,9)" fg:x="71521048" fg:w="1763159"/><text x="1.9064%" y="1167.50"></text></g><g><title>&lt;ratatui::widgets::paragraph::Paragraph as ratatui::widgets::WidgetRef&gt;::render_ref (9,083,385 samples, 0.21%)</title><rect x="1.6564%" y="1173" width="0.2104%" height="15" fill="rgb(248,47,43)" fg:x="71521048" fg:w="9083385"/><text x="1.9064%" y="1183.50"></text></g><g><title>&lt;core::option::Option&lt;ratatui::widgets::block::Block&gt; as ratatui::widgets::block::BlockExt&gt;::inner_if_some (7,320,226 samples, 0.17%)</title><rect x="1.6973%" y="1157" width="0.1695%" height="15" fill="rgb(221,10,30)" fg:x="73284207" fg:w="7320226"/><text x="1.9473%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (7,320,226 samples, 0.17%)</title><rect x="1.6973%" y="1141" width="0.1695%" height="15" fill="rgb(210,229,1)" fg:x="73284207" fg:w="7320226"/><text x="1.9473%" y="1151.50"></text></g><g><title>&lt;core::option::Option&lt;ratatui::widgets::block::Block&gt; as ratatui::widgets::block::BlockExt&gt;::inner_if_some::_{{closure}} (7,320,226 samples, 0.17%)</title><rect x="1.6973%" y="1125" width="0.1695%" height="15" fill="rgb(222,148,37)" fg:x="73284207" fg:w="7320226"/><text x="1.9473%" y="1135.50"></text></g><g><title>&lt;str as unicode_width::UnicodeWidthStr&gt;::width (1,767,678 samples, 0.04%)</title><rect x="1.8668%" y="1157" width="0.0409%" height="15" fill="rgb(234,67,33)" fg:x="80604433" fg:w="1767678"/><text x="2.1168%" y="1167.50"></text></g><g><title>unicode_width::tables::str_width (1,767,678 samples, 0.04%)</title><rect x="1.8668%" y="1141" width="0.0409%" height="15" fill="rgb(247,98,35)" fg:x="80604433" fg:w="1767678"/><text x="2.1168%" y="1151.50"></text></g><g><title>[emi_web] (19,092,021 samples, 0.44%)</title><rect x="1.6564%" y="1189" width="0.4422%" height="15" fill="rgb(247,138,52)" fg:x="71521048" fg:w="19092021"/><text x="1.9064%" y="1199.50"></text></g><g><title>ratatui::buffer::buffer::Buffer::diff (10,008,636 samples, 0.23%)</title><rect x="1.8668%" y="1173" width="0.2318%" height="15" fill="rgb(213,79,30)" fg:x="80604433" fg:w="10008636"/><text x="2.1168%" y="1183.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (8,240,958 samples, 0.19%)</title><rect x="1.9077%" y="1157" width="0.1909%" height="15" fill="rgb(246,177,23)" fg:x="82372111" fg:w="8240958"/><text x="2.1577%" y="1167.50"></text></g><g><title>core::cmp::PartialEq::ne (8,240,958 samples, 0.19%)</title><rect x="1.9077%" y="1141" width="0.1909%" height="15" fill="rgb(230,62,27)" fg:x="82372111" fg:w="8240958"/><text x="2.1577%" y="1151.50"></text></g><g><title>&lt;ratatui::buffer::cell::Cell as core::cmp::PartialEq&gt;::eq (8,240,958 samples, 0.19%)</title><rect x="1.9077%" y="1125" width="0.1909%" height="15" fill="rgb(216,154,8)" fg:x="82372111" fg:w="8240958"/><text x="2.1577%" y="1135.50"></text></g><g><title>&lt;compact_str::CompactString as core::cmp::PartialEq&lt;T&gt;&gt;::eq (8,240,958 samples, 0.19%)</title><rect x="1.9077%" y="1109" width="0.1909%" height="15" fill="rgb(244,35,45)" fg:x="82372111" fg:w="8240958"/><text x="2.1577%" y="1119.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8,240,958 samples, 0.19%)</title><rect x="1.9077%" y="1093" width="0.1909%" height="15" fill="rgb(251,115,12)" fg:x="82372111" fg:w="8240958"/><text x="2.1577%" y="1103.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (8,240,958 samples, 0.19%)</title><rect x="1.9077%" y="1077" width="0.1909%" height="15" fill="rgb(240,54,50)" fg:x="82372111" fg:w="8240958"/><text x="2.1577%" y="1087.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8,240,958 samples, 0.19%)</title><rect x="1.9077%" y="1061" width="0.1909%" height="15" fill="rgb(233,84,52)" fg:x="82372111" fg:w="8240958"/><text x="2.1577%" y="1071.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (8,240,958 samples, 0.19%)</title><rect x="1.9077%" y="1045" width="0.1909%" height="15" fill="rgb(207,117,47)" fg:x="82372111" fg:w="8240958"/><text x="2.1577%" y="1055.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (8,240,958 samples, 0.19%)</title><rect x="1.9077%" y="1029" width="0.1909%" height="15" fill="rgb(249,43,39)" fg:x="82372111" fg:w="8240958"/><text x="2.1577%" y="1039.50"></text></g><g><title>[libc.so.6] (8,293,606 samples, 0.19%)</title><rect x="2.0986%" y="1189" width="0.1921%" height="15" fill="rgb(209,38,44)" fg:x="90613069" fg:w="8293606"/><text x="2.3486%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2,542,070 samples, 0.06%)</title><rect x="2.2907%" y="1189" width="0.0589%" height="15" fill="rgb(236,212,23)" fg:x="98906675" fg:w="2542070"/><text x="2.5407%" y="1199.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1,727,865 samples, 0.04%)</title><rect x="2.3495%" y="1189" width="0.0400%" height="15" fill="rgb(242,79,21)" fg:x="101448745" fg:w="1727865"/><text x="2.5995%" y="1199.50"></text></g><g><title>core::fmt::Formatter::write_str (8,069,328 samples, 0.19%)</title><rect x="2.3896%" y="1189" width="0.1869%" height="15" fill="rgb(211,96,35)" fg:x="103176610" fg:w="8069328"/><text x="2.6396%" y="1199.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u16&gt;::fmt (1,701,725 samples, 0.04%)</title><rect x="2.5765%" y="1189" width="0.0394%" height="15" fill="rgb(253,215,40)" fg:x="111245938" fg:w="1701725"/><text x="2.8265%" y="1199.50"></text></g><g><title>core::fmt::write (3,859,442 samples, 0.09%)</title><rect x="2.6159%" y="1189" width="0.0894%" height="15" fill="rgb(211,81,21)" fg:x="112947663" fg:w="3859442"/><text x="2.8659%" y="1199.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (215,747,269 samples, 5.00%)</title><rect x="2.7052%" y="1189" width="4.9967%" height="15" fill="rgb(208,190,38)" fg:x="116807105" fg:w="215747269"/><text x="2.9552%" y="1199.50">core::..</text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (12,843,786 samples, 0.30%)</title><rect x="7.4045%" y="1173" width="0.2975%" height="15" fill="rgb(235,213,38)" fg:x="319710588" fg:w="12843786"/><text x="7.6545%" y="1183.50"></text></g><g><title>core::str::validations::next_code_point_reverse (12,843,786 samples, 0.30%)</title><rect x="7.4045%" y="1157" width="0.2975%" height="15" fill="rgb(237,122,38)" fg:x="319710588" fg:w="12843786"/><text x="7.6545%" y="1167.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (12,843,786 samples, 0.30%)</title><rect x="7.4045%" y="1141" width="0.2975%" height="15" fill="rgb(244,218,35)" fg:x="319710588" fg:w="12843786"/><text x="7.6545%" y="1151.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (12,843,786 samples, 0.30%)</title><rect x="7.4045%" y="1125" width="0.2975%" height="15" fill="rgb(240,68,47)" fg:x="319710588" fg:w="12843786"/><text x="7.6545%" y="1135.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (4,122,547 samples, 0.10%)</title><rect x="7.7019%" y="1189" width="0.0955%" height="15" fill="rgb(210,16,53)" fg:x="332554374" fg:w="4122547"/><text x="7.9519%" y="1199.50"></text></g><g><title>core::str::converts::from_utf8 (664,112 samples, 0.02%)</title><rect x="7.7974%" y="1189" width="0.0154%" height="15" fill="rgb(235,124,12)" fg:x="336676921" fg:w="664112"/><text x="8.0474%" y="1199.50"></text></g><g><title>emi_web::log_from_socket (3,620,506 samples, 0.08%)</title><rect x="7.8128%" y="1189" width="0.0839%" height="15" fill="rgb(224,169,11)" fg:x="337341033" fg:w="3620506"/><text x="8.0628%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,620,506 samples, 0.08%)</title><rect x="7.8128%" y="1173" width="0.0839%" height="15" fill="rgb(250,166,2)" fg:x="337341033" fg:w="3620506"/><text x="8.0628%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,620,506 samples, 0.08%)</title><rect x="7.8128%" y="1157" width="0.0839%" height="15" fill="rgb(242,216,29)" fg:x="337341033" fg:w="3620506"/><text x="8.0628%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,620,506 samples, 0.08%)</title><rect x="7.8128%" y="1141" width="0.0839%" height="15" fill="rgb(230,116,27)" fg:x="337341033" fg:w="3620506"/><text x="8.0628%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,620,506 samples, 0.08%)</title><rect x="7.8128%" y="1125" width="0.0839%" height="15" fill="rgb(228,99,48)" fg:x="337341033" fg:w="3620506"/><text x="8.0628%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,620,506 samples, 0.08%)</title><rect x="7.8128%" y="1109" width="0.0839%" height="15" fill="rgb(253,11,6)" fg:x="337341033" fg:w="3620506"/><text x="8.0628%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,620,506 samples, 0.08%)</title><rect x="7.8128%" y="1093" width="0.0839%" height="15" fill="rgb(247,143,39)" fg:x="337341033" fg:w="3620506"/><text x="8.0628%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (3,620,506 samples, 0.08%)</title><rect x="7.8128%" y="1077" width="0.0839%" height="15" fill="rgb(236,97,10)" fg:x="337341033" fg:w="3620506"/><text x="8.0628%" y="1087.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_head (988,511 samples, 0.02%)</title><rect x="7.8967%" y="1189" width="0.0229%" height="15" fill="rgb(233,208,19)" fg:x="340961539" fg:w="988511"/><text x="8.1467%" y="1199.50"></text></g><g><title>memchr::arch::x86_64::avx2::packedpair::Finder::find_impl (3,028,086 samples, 0.07%)</title><rect x="7.9195%" y="1189" width="0.0701%" height="15" fill="rgb(216,164,2)" fg:x="341950050" fg:w="3028086"/><text x="8.1695%" y="1199.50"></text></g><g><title>memchr::arch::generic::packedpair::Finder&lt;V&gt;::min_haystack_len (3,028,086 samples, 0.07%)</title><rect x="7.9195%" y="1173" width="0.0701%" height="15" fill="rgb(220,129,5)" fg:x="341950050" fg:w="3028086"/><text x="8.1695%" y="1183.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::add (2,171,176 samples, 0.05%)</title><rect x="7.9897%" y="1189" width="0.0503%" height="15" fill="rgb(242,17,10)" fg:x="344978136" fg:w="2171176"/><text x="8.2397%" y="1199.50"></text></g><g><title>regex_automata::util::captures::Captures::all (2,873,256 samples, 0.07%)</title><rect x="8.0400%" y="1189" width="0.0665%" height="15" fill="rgb(242,107,0)" fg:x="347149312" fg:w="2873256"/><text x="8.2900%" y="1199.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1,487,082 samples, 0.03%)</title><rect x="8.1065%" y="1189" width="0.0344%" height="15" fill="rgb(251,28,31)" fg:x="350022568" fg:w="1487082"/><text x="8.3565%" y="1199.50"></text></g><g><title>std::io::default_read_to_end (3,271,757 samples, 0.08%)</title><rect x="8.1409%" y="1189" width="0.0758%" height="15" fill="rgb(233,223,10)" fg:x="351509650" fg:w="3271757"/><text x="8.3909%" y="1199.50"></text></g><g><title>std::sys::pal::unix::fs::try_statx (4,573,255 samples, 0.11%)</title><rect x="8.2167%" y="1189" width="0.1059%" height="15" fill="rgb(215,21,27)" fg:x="354781407" fg:w="4573255"/><text x="8.4667%" y="1199.50"></text></g><g><title>tokio_tungstenite::compat::cvt (1,451,954 samples, 0.03%)</title><rect x="8.3246%" y="1189" width="0.0336%" height="15" fill="rgb(232,23,21)" fg:x="359437494" fg:w="1451954"/><text x="8.5746%" y="1199.50"></text></g><g><title>[anon] (345,063,180 samples, 7.99%)</title><rect x="0.4366%" y="1205" width="7.9916%" height="15" fill="rgb(244,5,23)" fg:x="18853375" fg:w="345063180"/><text x="0.6866%" y="1215.50">[anon]</text></g><g><title>tungstenite::protocol::frame::frame::FrameHeader::parse_internal (3,027,107 samples, 0.07%)</title><rect x="8.3582%" y="1189" width="0.0701%" height="15" fill="rgb(226,81,46)" fg:x="360889448" fg:w="3027107"/><text x="8.6082%" y="1199.50"></text></g><g><title>&lt;ratatui::text::line::Line as core::convert::From&lt;ratatui::text::span::Span&gt;&gt;::from (7,038,647 samples, 0.16%)</title><rect x="8.4283%" y="1189" width="0.1630%" height="15" fill="rgb(247,70,30)" fg:x="363916555" fg:w="7038647"/><text x="8.6783%" y="1199.50"></text></g><g><title>&lt;ratatui::text::span::Span as ratatui::widgets::WidgetRef&gt;::render_ref (2,380,146 samples, 0.06%)</title><rect x="8.5913%" y="1189" width="0.0551%" height="15" fill="rgb(212,68,19)" fg:x="370955202" fg:w="2380146"/><text x="8.8413%" y="1199.50"></text></g><g><title>&lt;str as unicode_width::UnicodeWidthStr&gt;::width (2,380,146 samples, 0.06%)</title><rect x="8.5913%" y="1173" width="0.0551%" height="15" fill="rgb(240,187,13)" fg:x="370955202" fg:w="2380146"/><text x="8.8413%" y="1183.50"></text></g><g><title>unicode_width::tables::str_width (2,380,146 samples, 0.06%)</title><rect x="8.5913%" y="1157" width="0.0551%" height="15" fill="rgb(223,113,26)" fg:x="370955202" fg:w="2380146"/><text x="8.8413%" y="1167.50"></text></g><g><title>alloc::fmt::format::format_inner (8,449,498 samples, 0.20%)</title><rect x="8.6464%" y="1189" width="0.1957%" height="15" fill="rgb(206,192,2)" fg:x="373335348" fg:w="8449498"/><text x="8.8964%" y="1199.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field4_finish (4,311,956 samples, 0.10%)</title><rect x="8.8421%" y="1189" width="0.0999%" height="15" fill="rgb(241,108,4)" fg:x="381784846" fg:w="4311956"/><text x="9.0921%" y="1199.50"></text></g><g><title>ratatui::buffer::buffer::Buffer::diff (2,610,659 samples, 0.06%)</title><rect x="8.9420%" y="1189" width="0.0605%" height="15" fill="rgb(247,173,49)" fg:x="386096802" fg:w="2610659"/><text x="9.1920%" y="1199.50"></text></g><g><title>ratatui::widgets::paragraph::Paragraph::block (3,347,577 samples, 0.08%)</title><rect x="9.0024%" y="1189" width="0.0775%" height="15" fill="rgb(224,114,35)" fg:x="388707461" fg:w="3347577"/><text x="9.2524%" y="1199.50"></text></g><g><title>std::fs::OpenOptions::_open (1,827,506 samples, 0.04%)</title><rect x="9.0800%" y="1189" width="0.0423%" height="15" fill="rgb(245,159,27)" fg:x="392055038" fg:w="1827506"/><text x="9.3300%" y="1199.50"></text></g><g><title>std::fs::read_to_string::inner (6,540,500 samples, 0.15%)</title><rect x="9.1223%" y="1189" width="0.1515%" height="15" fill="rgb(245,172,44)" fg:x="393882544" fg:w="6540500"/><text x="9.3723%" y="1199.50"></text></g><g><title>[emi_web] (38,445,472 samples, 0.89%)</title><rect x="8.4283%" y="1205" width="0.8904%" height="15" fill="rgb(236,23,11)" fg:x="363916555" fg:w="38445472"/><text x="8.6783%" y="1215.50"></text></g><g><title>std::io::Write::write_all (1,938,983 samples, 0.04%)</title><rect x="9.2738%" y="1189" width="0.0449%" height="15" fill="rgb(205,117,38)" fg:x="400423044" fg:w="1938983"/><text x="9.5238%" y="1199.50"></text></g><g><title>pow (4,801,394 samples, 0.11%)</title><rect x="9.3318%" y="1013" width="0.1112%" height="15" fill="rgb(237,72,25)" fg:x="402928703" fg:w="4801394"/><text x="9.5818%" y="1023.50"></text></g><g><title>[libm.so.6] (4,801,394 samples, 0.11%)</title><rect x="9.3318%" y="997" width="0.1112%" height="15" fill="rgb(244,70,9)" fg:x="402928703" fg:w="4801394"/><text x="9.5818%" y="1007.50"></text></g><g><title>_ZN5tokio7runtime4time6Driver13park_internal17h1a2e0aa31b07e82aE.llvm.17461810558349188321 (725,358 samples, 0.02%)</title><rect x="9.4462%" y="981" width="0.0168%" height="15" fill="rgb(217,125,39)" fg:x="407868308" fg:w="725358"/><text x="9.6962%" y="991.50"></text></g><g><title>_ZN5tokio7runtime2io6driver6Driver4turn17hc2aa80fe68467f21E.llvm.9739753630573575895 (725,358 samples, 0.02%)</title><rect x="9.4462%" y="965" width="0.0168%" height="15" fill="rgb(235,36,10)" fg:x="407868308" fg:w="725358"/><text x="9.6962%" y="975.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (590,678 samples, 0.01%)</title><rect x="9.4493%" y="949" width="0.0137%" height="15" fill="rgb(251,123,47)" fg:x="408002988" fg:w="590678"/><text x="9.6993%" y="959.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (1,382,608 samples, 0.03%)</title><rect x="9.4630%" y="981" width="0.0320%" height="15" fill="rgb(221,13,13)" fg:x="408593666" fg:w="1382608"/><text x="9.7130%" y="991.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (618,927 samples, 0.01%)</title><rect x="9.4999%" y="965" width="0.0143%" height="15" fill="rgb(238,131,9)" fg:x="410188285" fg:w="618927"/><text x="9.7499%" y="975.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (4,530,814 samples, 0.10%)</title><rect x="9.4430%" y="1013" width="0.1049%" height="15" fill="rgb(211,50,8)" fg:x="407730097" fg:w="4530814"/><text x="9.6930%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (4,392,603 samples, 0.10%)</title><rect x="9.4462%" y="997" width="0.1017%" height="15" fill="rgb(245,182,24)" fg:x="407868308" fg:w="4392603"/><text x="9.6962%" y="1007.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (2,236,008 samples, 0.05%)</title><rect x="9.4962%" y="981" width="0.0518%" height="15" fill="rgb(242,14,37)" fg:x="410024903" fg:w="2236008"/><text x="9.7462%" y="991.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (1,453,699 samples, 0.03%)</title><rect x="9.5143%" y="965" width="0.0337%" height="15" fill="rgb(246,228,12)" fg:x="410807212" fg:w="1453699"/><text x="9.7643%" y="975.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (1,453,699 samples, 0.03%)</title><rect x="9.5143%" y="949" width="0.0337%" height="15" fill="rgb(213,55,15)" fg:x="410807212" fg:w="1453699"/><text x="9.7643%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (1,453,699 samples, 0.03%)</title><rect x="9.5143%" y="933" width="0.0337%" height="15" fill="rgb(209,9,3)" fg:x="410807212" fg:w="1453699"/><text x="9.7643%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (1,453,699 samples, 0.03%)</title><rect x="9.5143%" y="917" width="0.0337%" height="15" fill="rgb(230,59,30)" fg:x="410807212" fg:w="1453699"/><text x="9.7643%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (1,453,699 samples, 0.03%)</title><rect x="9.5143%" y="901" width="0.0337%" height="15" fill="rgb(209,121,21)" fg:x="410807212" fg:w="1453699"/><text x="9.7643%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,453,699 samples, 0.03%)</title><rect x="9.5143%" y="885" width="0.0337%" height="15" fill="rgb(220,109,13)" fg:x="410807212" fg:w="1453699"/><text x="9.7643%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1,453,699 samples, 0.03%)</title><rect x="9.5143%" y="869" width="0.0337%" height="15" fill="rgb(232,18,1)" fg:x="410807212" fg:w="1453699"/><text x="9.7643%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,453,699 samples, 0.03%)</title><rect x="9.5143%" y="853" width="0.0337%" height="15" fill="rgb(215,41,42)" fg:x="410807212" fg:w="1453699"/><text x="9.7643%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (1,453,699 samples, 0.03%)</title><rect x="9.5143%" y="837" width="0.0337%" height="15" fill="rgb(224,123,36)" fg:x="410807212" fg:w="1453699"/><text x="9.7643%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,453,699 samples, 0.03%)</title><rect x="9.5143%" y="821" width="0.0337%" height="15" fill="rgb(240,125,3)" fg:x="410807212" fg:w="1453699"/><text x="9.7643%" y="831.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (1,453,699 samples, 0.03%)</title><rect x="9.5143%" y="805" width="0.0337%" height="15" fill="rgb(205,98,50)" fg:x="410807212" fg:w="1453699"/><text x="9.7643%" y="815.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (1,453,699 samples, 0.03%)</title><rect x="9.5143%" y="789" width="0.0337%" height="15" fill="rgb(205,185,37)" fg:x="410807212" fg:w="1453699"/><text x="9.7643%" y="799.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (1,453,699 samples, 0.03%)</title><rect x="9.5143%" y="773" width="0.0337%" height="15" fill="rgb(238,207,15)" fg:x="410807212" fg:w="1453699"/><text x="9.7643%" y="783.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (1,453,699 samples, 0.03%)</title><rect x="9.5143%" y="757" width="0.0337%" height="15" fill="rgb(213,199,42)" fg:x="410807212" fg:w="1453699"/><text x="9.7643%" y="767.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (1,453,699 samples, 0.03%)</title><rect x="9.5143%" y="741" width="0.0337%" height="15" fill="rgb(235,201,11)" fg:x="410807212" fg:w="1453699"/><text x="9.7643%" y="751.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (2,611,496 samples, 0.06%)</title><rect x="9.5479%" y="997" width="0.0605%" height="15" fill="rgb(207,46,11)" fg:x="412260911" fg:w="2611496"/><text x="9.7979%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (2,611,496 samples, 0.06%)</title><rect x="9.5479%" y="981" width="0.0605%" height="15" fill="rgb(241,35,35)" fg:x="412260911" fg:w="2611496"/><text x="9.7979%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (2,611,496 samples, 0.06%)</title><rect x="9.5479%" y="965" width="0.0605%" height="15" fill="rgb(243,32,47)" fg:x="412260911" fg:w="2611496"/><text x="9.7979%" y="975.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (2,611,496 samples, 0.06%)</title><rect x="9.5479%" y="949" width="0.0605%" height="15" fill="rgb(247,202,23)" fg:x="412260911" fg:w="2611496"/><text x="9.7979%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (2,611,496 samples, 0.06%)</title><rect x="9.5479%" y="933" width="0.0605%" height="15" fill="rgb(219,102,11)" fg:x="412260911" fg:w="2611496"/><text x="9.7979%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_swap (2,611,496 samples, 0.06%)</title><rect x="9.5479%" y="917" width="0.0605%" height="15" fill="rgb(243,110,44)" fg:x="412260911" fg:w="2611496"/><text x="9.7979%" y="927.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="469" width="0.0818%" height="15" fill="rgb(222,74,54)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="479.50"></text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="453" width="0.0818%" height="15" fill="rgb(216,99,12)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="463.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="437" width="0.0818%" height="15" fill="rgb(226,22,26)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="447.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="421" width="0.0818%" height="15" fill="rgb(217,163,10)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="431.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="405" width="0.0818%" height="15" fill="rgb(213,25,53)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="415.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="389" width="0.0818%" height="15" fill="rgb(252,105,26)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="399.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="373" width="0.0818%" height="15" fill="rgb(220,39,43)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="383.50"></text></g><g><title>&lt;tower_http::services::fs::serve_dir::InfallibleResponseFuture&lt;ReqBody,F&gt; as core::future::future::Future&gt;::poll (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="357" width="0.0818%" height="15" fill="rgb(229,68,48)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="367.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="341" width="0.0818%" height="15" fill="rgb(252,8,32)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="351.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="325" width="0.0818%" height="15" fill="rgb(223,20,43)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="335.50"></text></g><g><title>&lt;tower_http::services::fs::serve_dir::future::ResponseFuture&lt;ReqBody,F&gt; as core::future::future::Future&gt;::poll (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="309" width="0.0818%" height="15" fill="rgb(229,81,49)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="319.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="293" width="0.0818%" height="15" fill="rgb(236,28,36)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="303.50"></text></g><g><title>tower_http::services::fs::serve_dir::open_file::open_file::_{{closure}} (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="277" width="0.0818%" height="15" fill="rgb(249,185,26)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="287.50"></text></g><g><title>tower_http::services::fs::serve_dir::open_file::maybe_redirect_or_append_path::_{{closure}} (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="261" width="0.0818%" height="15" fill="rgb(249,174,33)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="271.50"></text></g><g><title>tower_http::services::fs::serve_dir::open_file::is_dir::_{{closure}} (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="245" width="0.0818%" height="15" fill="rgb(233,201,37)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="255.50"></text></g><g><title>tokio::fs::metadata::metadata::_{{closure}} (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="229" width="0.0818%" height="15" fill="rgb(221,78,26)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="239.50"></text></g><g><title>tokio::fs::asyncify::_{{closure}} (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="213" width="0.0818%" height="15" fill="rgb(250,127,30)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="223.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="197" width="0.0818%" height="15" fill="rgb(230,49,44)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="207.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_blocking (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="181" width="0.0818%" height="15" fill="rgb(229,67,23)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="191.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="165" width="0.0818%" height="15" fill="rgb(249,83,47)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="175.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking_inner (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="149" width="0.0818%" height="15" fill="rgb(215,43,3)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="159.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="133" width="0.0818%" height="15" fill="rgb(238,154,13)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="143.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="117" width="0.0818%" height="15" fill="rgb(219,56,2)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="127.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="101" width="0.0818%" height="15" fill="rgb(233,0,4)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="111.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="85" width="0.0818%" height="15" fill="rgb(235,30,7)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="95.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="69" width="0.0818%" height="15" fill="rgb(250,79,13)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="79.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (3,529,811 samples, 0.08%)</title><rect x="9.6084%" y="53" width="0.0818%" height="15" fill="rgb(211,146,34)" fg:x="414872407" fg:w="3529811"/><text x="9.8584%" y="63.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,191,132 samples, 0.10%)</title><rect x="9.6084%" y="613" width="0.0971%" height="15" fill="rgb(228,22,38)" fg:x="414872407" fg:w="4191132"/><text x="9.8584%" y="623.50"></text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (4,191,132 samples, 0.10%)</title><rect x="9.6084%" y="597" width="0.0971%" height="15" fill="rgb(235,168,5)" fg:x="414872407" fg:w="4191132"/><text x="9.8584%" y="607.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4,191,132 samples, 0.10%)</title><rect x="9.6084%" y="581" width="0.0971%" height="15" fill="rgb(221,155,16)" fg:x="414872407" fg:w="4191132"/><text x="9.8584%" y="591.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4,191,132 samples, 0.10%)</title><rect x="9.6084%" y="565" width="0.0971%" height="15" fill="rgb(215,215,53)" fg:x="414872407" fg:w="4191132"/><text x="9.8584%" y="575.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4,191,132 samples, 0.10%)</title><rect x="9.6084%" y="549" width="0.0971%" height="15" fill="rgb(223,4,10)" fg:x="414872407" fg:w="4191132"/><text x="9.8584%" y="559.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (4,191,132 samples, 0.10%)</title><rect x="9.6084%" y="533" width="0.0971%" height="15" fill="rgb(234,103,6)" fg:x="414872407" fg:w="4191132"/><text x="9.8584%" y="543.50"></text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (4,191,132 samples, 0.10%)</title><rect x="9.6084%" y="517" width="0.0971%" height="15" fill="rgb(227,97,0)" fg:x="414872407" fg:w="4191132"/><text x="9.8584%" y="527.50"></text></g><g><title>&lt;axum::routing::route::RouteFuture&lt;E&gt; as core::future::future::Future&gt;::poll (4,191,132 samples, 0.10%)</title><rect x="9.6084%" y="501" width="0.0971%" height="15" fill="rgb(234,150,53)" fg:x="414872407" fg:w="4191132"/><text x="9.8584%" y="511.50"></text></g><g><title>&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (4,191,132 samples, 0.10%)</title><rect x="9.6084%" y="485" width="0.0971%" height="15" fill="rgb(228,201,54)" fg:x="414872407" fg:w="4191132"/><text x="9.8584%" y="495.50"></text></g><g><title>&lt;tower::util::boxed_clone::BoxCloneService&lt;T,U,E&gt; as tower_service::Service&lt;T&gt;&gt;::call (661,321 samples, 0.02%)</title><rect x="9.6902%" y="469" width="0.0153%" height="15" fill="rgb(222,22,37)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="479.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as tower_service::Service&lt;Request&gt;&gt;::call (661,321 samples, 0.02%)</title><rect x="9.6902%" y="453" width="0.0153%" height="15" fill="rgb(237,53,32)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="463.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::call (661,321 samples, 0.02%)</title><rect x="9.6902%" y="437" width="0.0153%" height="15" fill="rgb(233,25,53)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="447.50"></text></g><g><title>&lt;tower::util::map_response::MapResponse&lt;S,F&gt; as tower_service::Service&lt;Request&gt;&gt;::call (661,321 samples, 0.02%)</title><rect x="9.6902%" y="421" width="0.0153%" height="15" fill="rgb(210,40,34)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="431.50"></text></g><g><title>&lt;tower_http::services::fs::serve_dir::ServeDir&lt;F&gt; as tower_service::Service&lt;http::request::Request&lt;ReqBody&gt;&gt;&gt;::call (661,321 samples, 0.02%)</title><rect x="9.6902%" y="405" width="0.0153%" height="15" fill="rgb(241,220,44)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="415.50"></text></g><g><title>tower_http::services::fs::serve_dir::ServeDir&lt;F&gt;::try_call (661,321 samples, 0.02%)</title><rect x="9.6902%" y="389" width="0.0153%" height="15" fill="rgb(235,28,35)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (661,321 samples, 0.02%)</title><rect x="9.6902%" y="373" width="0.0153%" height="15" fill="rgb(210,56,17)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (661,321 samples, 0.02%)</title><rect x="9.6902%" y="357" width="0.0153%" height="15" fill="rgb(224,130,29)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (661,321 samples, 0.02%)</title><rect x="9.6902%" y="341" width="0.0153%" height="15" fill="rgb(235,212,8)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (661,321 samples, 0.02%)</title><rect x="9.6902%" y="325" width="0.0153%" height="15" fill="rgb(223,33,50)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (661,321 samples, 0.02%)</title><rect x="9.6902%" y="309" width="0.0153%" height="15" fill="rgb(219,149,13)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (661,321 samples, 0.02%)</title><rect x="9.6902%" y="293" width="0.0153%" height="15" fill="rgb(250,156,29)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (661,321 samples, 0.02%)</title><rect x="9.6902%" y="277" width="0.0153%" height="15" fill="rgb(216,193,19)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (661,321 samples, 0.02%)</title><rect x="9.6902%" y="261" width="0.0153%" height="15" fill="rgb(216,135,14)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="271.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold (661,321 samples, 0.02%)</title><rect x="9.6902%" y="245" width="0.0153%" height="15" fill="rgb(241,47,5)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (661,321 samples, 0.02%)</title><rect x="9.6902%" y="229" width="0.0153%" height="15" fill="rgb(233,42,35)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (661,321 samples, 0.02%)</title><rect x="9.6902%" y="213" width="0.0153%" height="15" fill="rgb(231,13,6)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (661,321 samples, 0.02%)</title><rect x="9.6902%" y="197" width="0.0153%" height="15" fill="rgb(207,181,40)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (661,321 samples, 0.02%)</title><rect x="9.6902%" y="181" width="0.0153%" height="15" fill="rgb(254,173,49)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (661,321 samples, 0.02%)</title><rect x="9.6902%" y="165" width="0.0153%" height="15" fill="rgb(221,1,38)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="175.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_try_fold::_{{closure}} (661,321 samples, 0.02%)</title><rect x="9.6902%" y="149" width="0.0153%" height="15" fill="rgb(206,124,46)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="159.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (661,321 samples, 0.02%)</title><rect x="9.6902%" y="133" width="0.0153%" height="15" fill="rgb(249,21,11)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="143.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold::flatten::_{{closure}} (661,321 samples, 0.02%)</title><rect x="9.6902%" y="117" width="0.0153%" height="15" fill="rgb(222,201,40)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::_{{closure}} (661,321 samples, 0.02%)</title><rect x="9.6902%" y="101" width="0.0153%" height="15" fill="rgb(235,61,29)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (661,321 samples, 0.02%)</title><rect x="9.6902%" y="85" width="0.0153%" height="15" fill="rgb(219,207,3)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="95.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (661,321 samples, 0.02%)</title><rect x="9.6902%" y="69" width="0.0153%" height="15" fill="rgb(222,56,46)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="79.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (661,321 samples, 0.02%)</title><rect x="9.6902%" y="53" width="0.0153%" height="15" fill="rgb(239,76,54)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="63.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (661,321 samples, 0.02%)</title><rect x="9.6902%" y="37" width="0.0153%" height="15" fill="rgb(231,124,27)" fg:x="418402218" fg:w="661321"/><text x="9.9402%" y="47.50"></text></g><g><title>&lt;axum::routing::route::RouteFuture&lt;E&gt; as core::future::future::Future&gt;::poll (7,184,646 samples, 0.17%)</title><rect x="9.6084%" y="645" width="0.1664%" height="15" fill="rgb(249,195,6)" fg:x="414872407" fg:w="7184646"/><text x="9.8584%" y="655.50"></text></g><g><title>&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (7,184,646 samples, 0.17%)</title><rect x="9.6084%" y="629" width="0.1664%" height="15" fill="rgb(237,174,47)" fg:x="414872407" fg:w="7184646"/><text x="9.8584%" y="639.50"></text></g><g><title>&lt;tower::util::boxed_clone::BoxCloneService&lt;T,U,E&gt; as tower_service::Service&lt;T&gt;&gt;::call (2,993,514 samples, 0.07%)</title><rect x="9.7055%" y="613" width="0.0693%" height="15" fill="rgb(206,201,31)" fg:x="419063539" fg:w="2993514"/><text x="9.9555%" y="623.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as tower_service::Service&lt;Request&gt;&gt;::call (2,993,514 samples, 0.07%)</title><rect x="9.7055%" y="597" width="0.0693%" height="15" fill="rgb(231,57,52)" fg:x="419063539" fg:w="2993514"/><text x="9.9555%" y="607.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::call (2,993,514 samples, 0.07%)</title><rect x="9.7055%" y="581" width="0.0693%" height="15" fill="rgb(248,177,22)" fg:x="419063539" fg:w="2993514"/><text x="9.9555%" y="591.50"></text></g><g><title>&lt;tower::util::map_response::MapResponse&lt;S,F&gt; as tower_service::Service&lt;Request&gt;&gt;::call (2,993,514 samples, 0.07%)</title><rect x="9.7055%" y="565" width="0.0693%" height="15" fill="rgb(215,211,37)" fg:x="419063539" fg:w="2993514"/><text x="9.9555%" y="575.50"></text></g><g><title>&lt;axum::routing::strip_prefix::StripPrefix&lt;S&gt; as tower_service::Service&lt;http::request::Request&lt;B&gt;&gt;&gt;::call (2,993,514 samples, 0.07%)</title><rect x="9.7055%" y="549" width="0.0693%" height="15" fill="rgb(241,128,51)" fg:x="419063539" fg:w="2993514"/><text x="9.9555%" y="559.50"></text></g><g><title>axum::routing::strip_prefix::strip_prefix (2,993,514 samples, 0.07%)</title><rect x="9.7055%" y="533" width="0.0693%" height="15" fill="rgb(227,165,31)" fg:x="419063539" fg:w="2993514"/><text x="9.9555%" y="543.50"></text></g><g><title>alloc::fmt::format (2,993,514 samples, 0.07%)</title><rect x="9.7055%" y="517" width="0.0693%" height="15" fill="rgb(228,167,24)" fg:x="419063539" fg:w="2993514"/><text x="9.9555%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (2,993,514 samples, 0.07%)</title><rect x="9.7055%" y="501" width="0.0693%" height="15" fill="rgb(228,143,12)" fg:x="419063539" fg:w="2993514"/><text x="9.9555%" y="511.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (2,993,514 samples, 0.07%)</title><rect x="9.7055%" y="485" width="0.0693%" height="15" fill="rgb(249,149,8)" fg:x="419063539" fg:w="2993514"/><text x="9.9555%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (2,993,514 samples, 0.07%)</title><rect x="9.7055%" y="469" width="0.0693%" height="15" fill="rgb(243,35,44)" fg:x="419063539" fg:w="2993514"/><text x="9.9555%" y="479.50"></text></g><g><title>core::fmt::write (2,993,514 samples, 0.07%)</title><rect x="9.7055%" y="453" width="0.0693%" height="15" fill="rgb(246,89,9)" fg:x="419063539" fg:w="2993514"/><text x="9.9555%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2,993,514 samples, 0.07%)</title><rect x="9.7055%" y="437" width="0.0693%" height="15" fill="rgb(233,213,13)" fg:x="419063539" fg:w="2993514"/><text x="9.9555%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2,993,514 samples, 0.07%)</title><rect x="9.7055%" y="421" width="0.0693%" height="15" fill="rgb(233,141,41)" fg:x="419063539" fg:w="2993514"/><text x="9.9555%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,993,514 samples, 0.07%)</title><rect x="9.7055%" y="405" width="0.0693%" height="15" fill="rgb(239,167,4)" fg:x="419063539" fg:w="2993514"/><text x="9.9555%" y="415.50"></text></g><g><title>realloc (2,993,514 samples, 0.07%)</title><rect x="9.7055%" y="389" width="0.0693%" height="15" fill="rgb(209,217,16)" fg:x="419063539" fg:w="2993514"/><text x="9.9555%" y="399.50"></text></g><g><title>&lt;hyper::server::conn::http1::UpgradeableConnection&lt;I,S&gt; as core::future::future::Future&gt;::poll (7,611,749 samples, 0.18%)</title><rect x="9.6084%" y="789" width="0.1763%" height="15" fill="rgb(219,88,35)" fg:x="414872407" fg:w="7611749"/><text x="9.8584%" y="799.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (7,611,749 samples, 0.18%)</title><rect x="9.6084%" y="773" width="0.1763%" height="15" fill="rgb(220,193,23)" fg:x="414872407" fg:w="7611749"/><text x="9.8584%" y="783.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (7,611,749 samples, 0.18%)</title><rect x="9.6084%" y="757" width="0.1763%" height="15" fill="rgb(230,90,52)" fg:x="414872407" fg:w="7611749"/><text x="9.8584%" y="767.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (7,611,749 samples, 0.18%)</title><rect x="9.6084%" y="741" width="0.1763%" height="15" fill="rgb(252,106,19)" fg:x="414872407" fg:w="7611749"/><text x="9.8584%" y="751.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (7,611,749 samples, 0.18%)</title><rect x="9.6084%" y="725" width="0.1763%" height="15" fill="rgb(206,74,20)" fg:x="414872407" fg:w="7611749"/><text x="9.8584%" y="735.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (7,611,749 samples, 0.18%)</title><rect x="9.6084%" y="709" width="0.1763%" height="15" fill="rgb(230,138,44)" fg:x="414872407" fg:w="7611749"/><text x="9.8584%" y="719.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg (7,611,749 samples, 0.18%)</title><rect x="9.6084%" y="693" width="0.1763%" height="15" fill="rgb(235,182,43)" fg:x="414872407" fg:w="7611749"/><text x="9.8584%" y="703.50"></text></g><g><title>&lt;hyper_util::service::glue::TowerToHyperServiceFuture&lt;S,R&gt; as core::future::future::Future&gt;::poll (7,611,749 samples, 0.18%)</title><rect x="9.6084%" y="677" width="0.1763%" height="15" fill="rgb(242,16,51)" fg:x="414872407" fg:w="7611749"/><text x="9.8584%" y="687.50"></text></g><g><title>&lt;hyper_util::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (7,611,749 samples, 0.18%)</title><rect x="9.6084%" y="661" width="0.1763%" height="15" fill="rgb(248,9,4)" fg:x="414872407" fg:w="7611749"/><text x="9.8584%" y="671.50"></text></g><g><title>&lt;axum::serve::Serve&lt;M,S&gt; as core::future::into_future::IntoFuture&gt;::into_future::_{{closure}}::_{{closure}} (8,380,510 samples, 0.19%)</title><rect x="9.6084%" y="821" width="0.1941%" height="15" fill="rgb(210,31,22)" fg:x="414872407" fg:w="8380510"/><text x="9.8584%" y="831.50"></text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (8,380,510 samples, 0.19%)</title><rect x="9.6084%" y="805" width="0.1941%" height="15" fill="rgb(239,54,39)" fg:x="414872407" fg:w="8380510"/><text x="9.8584%" y="815.50"></text></g><g><title>hyper::server::conn::http1::Builder::serve_connection (768,761 samples, 0.02%)</title><rect x="9.7847%" y="789" width="0.0178%" height="15" fill="rgb(230,99,41)" fg:x="422484156" fg:w="768761"/><text x="10.0347%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;T,tungstenite::error::Error&gt; as tungstenite::protocol::CheckConnectionReset&gt;::check_connection_reset (2,572,578 samples, 0.06%)</title><rect x="9.9444%" y="565" width="0.0596%" height="15" fill="rgb(253,106,12)" fg:x="429380628" fg:w="2572578"/><text x="10.1944%" y="575.50"></text></g><g><title>[libc.so.6] (2,572,578 samples, 0.06%)</title><rect x="9.9444%" y="549" width="0.0596%" height="15" fill="rgb(213,46,41)" fg:x="429380628" fg:w="2572578"/><text x="10.1944%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (1,239,050 samples, 0.03%)</title><rect x="10.0040%" y="549" width="0.0287%" height="15" fill="rgb(215,133,35)" fg:x="431953206" fg:w="1239050"/><text x="10.2540%" y="559.50"></text></g><g><title>&lt;tokio_tungstenite::compat::AllowStd&lt;S&gt; as std::io::Read&gt;::read (1,846,344 samples, 0.04%)</title><rect x="10.0327%" y="533" width="0.0428%" height="15" fill="rgb(213,28,5)" fg:x="433192256" fg:w="1846344"/><text x="10.2827%" y="543.50"></text></g><g><title>tokio_tungstenite::compat::AllowStd&lt;S&gt;::with_context (1,846,344 samples, 0.04%)</title><rect x="10.0327%" y="517" width="0.0428%" height="15" fill="rgb(215,77,49)" fg:x="433192256" fg:w="1846344"/><text x="10.2827%" y="527.50"></text></g><g><title>&lt;tokio_tungstenite::compat::AllowStd&lt;S&gt; as std::io::Read&gt;::read::_{{closure}} (1,846,344 samples, 0.04%)</title><rect x="10.0327%" y="501" width="0.0428%" height="15" fill="rgb(248,100,22)" fg:x="433192256" fg:w="1846344"/><text x="10.2827%" y="511.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1,846,344 samples, 0.04%)</title><rect x="10.0327%" y="485" width="0.0428%" height="15" fill="rgb(208,67,9)" fg:x="433192256" fg:w="1846344"/><text x="10.2827%" y="495.50"></text></g><g><title>&lt;hyper::common::io::rewind::Rewind&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (1,846,344 samples, 0.04%)</title><rect x="10.0327%" y="469" width="0.0428%" height="15" fill="rgb(219,133,21)" fg:x="433192256" fg:w="1846344"/><text x="10.2827%" y="479.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (1,846,344 samples, 0.04%)</title><rect x="10.0327%" y="453" width="0.0428%" height="15" fill="rgb(246,46,29)" fg:x="433192256" fg:w="1846344"/><text x="10.2827%" y="463.50"></text></g><g><title>&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (1,846,344 samples, 0.04%)</title><rect x="10.0327%" y="437" width="0.0428%" height="15" fill="rgb(246,185,52)" fg:x="433192256" fg:w="1846344"/><text x="10.2827%" y="447.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (1,846,344 samples, 0.04%)</title><rect x="10.0327%" y="421" width="0.0428%" height="15" fill="rgb(252,136,11)" fg:x="433192256" fg:w="1846344"/><text x="10.2827%" y="431.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1,846,344 samples, 0.04%)</title><rect x="10.0327%" y="405" width="0.0428%" height="15" fill="rgb(219,138,53)" fg:x="433192256" fg:w="1846344"/><text x="10.2827%" y="415.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (1,846,344 samples, 0.04%)</title><rect x="10.0327%" y="389" width="0.0428%" height="15" fill="rgb(211,51,23)" fg:x="433192256" fg:w="1846344"/><text x="10.2827%" y="399.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (1,846,344 samples, 0.04%)</title><rect x="10.0327%" y="373" width="0.0428%" height="15" fill="rgb(247,221,28)" fg:x="433192256" fg:w="1846344"/><text x="10.2827%" y="383.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (1,846,344 samples, 0.04%)</title><rect x="10.0327%" y="357" width="0.0428%" height="15" fill="rgb(251,222,45)" fg:x="433192256" fg:w="1846344"/><text x="10.2827%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1,846,344 samples, 0.04%)</title><rect x="10.0327%" y="341" width="0.0428%" height="15" fill="rgb(217,162,53)" fg:x="433192256" fg:w="1846344"/><text x="10.2827%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (1,846,344 samples, 0.04%)</title><rect x="10.0327%" y="325" width="0.0428%" height="15" fill="rgb(229,93,14)" fg:x="433192256" fg:w="1846344"/><text x="10.2827%" y="335.50"></text></g><g><title>tungstenite::protocol::frame::FrameCodec::read_frame (4,532,430 samples, 0.10%)</title><rect x="10.0040%" y="565" width="0.1050%" height="15" fill="rgb(209,67,49)" fg:x="431953206" fg:w="4532430"/><text x="10.2540%" y="575.50"></text></g><g><title>tungstenite::buffer::ReadBuffer&lt;_&gt;::read_from (3,293,380 samples, 0.08%)</title><rect x="10.0327%" y="549" width="0.0763%" height="15" fill="rgb(213,87,29)" fg:x="433192256" fg:w="3293380"/><text x="10.2827%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,447,036 samples, 0.03%)</title><rect x="10.0755%" y="533" width="0.0335%" height="15" fill="rgb(205,151,52)" fg:x="435038600" fg:w="1447036"/><text x="10.3255%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,447,036 samples, 0.03%)</title><rect x="10.0755%" y="517" width="0.0335%" height="15" fill="rgb(253,215,39)" fg:x="435038600" fg:w="1447036"/><text x="10.3255%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,447,036 samples, 0.03%)</title><rect x="10.0755%" y="501" width="0.0335%" height="15" fill="rgb(221,220,41)" fg:x="435038600" fg:w="1447036"/><text x="10.3255%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,447,036 samples, 0.03%)</title><rect x="10.0755%" y="485" width="0.0335%" height="15" fill="rgb(218,133,21)" fg:x="435038600" fg:w="1447036"/><text x="10.3255%" y="495.50"></text></g><g><title>[libc.so.6] (1,447,036 samples, 0.03%)</title><rect x="10.0755%" y="469" width="0.0335%" height="15" fill="rgb(221,193,43)" fg:x="435038600" fg:w="1447036"/><text x="10.3255%" y="479.50"></text></g><g><title>axum::extract::ws::WebSocket::recv::_{{closure}} (11,957,589 samples, 0.28%)</title><rect x="9.8640%" y="741" width="0.2769%" height="15" fill="rgb(240,128,52)" fg:x="425909634" fg:w="11957589"/><text x="10.1140%" y="751.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (11,957,589 samples, 0.28%)</title><rect x="9.8640%" y="725" width="0.2769%" height="15" fill="rgb(253,114,12)" fg:x="425909634" fg:w="11957589"/><text x="10.1140%" y="735.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (11,957,589 samples, 0.28%)</title><rect x="9.8640%" y="709" width="0.2769%" height="15" fill="rgb(215,223,47)" fg:x="425909634" fg:w="11957589"/><text x="10.1140%" y="719.50"></text></g><g><title>&lt;axum::extract::ws::WebSocket as futures_core::stream::Stream&gt;::poll_next (11,957,589 samples, 0.28%)</title><rect x="9.8640%" y="693" width="0.2769%" height="15" fill="rgb(248,225,23)" fg:x="425909634" fg:w="11957589"/><text x="10.1140%" y="703.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (11,957,589 samples, 0.28%)</title><rect x="9.8640%" y="677" width="0.2769%" height="15" fill="rgb(250,108,0)" fg:x="425909634" fg:w="11957589"/><text x="10.1140%" y="687.50"></text></g><g><title>&lt;tokio_tungstenite::WebSocketStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (11,957,589 samples, 0.28%)</title><rect x="9.8640%" y="661" width="0.2769%" height="15" fill="rgb(228,208,7)" fg:x="425909634" fg:w="11957589"/><text x="10.1140%" y="671.50"></text></g><g><title>tokio_tungstenite::WebSocketStream&lt;S&gt;::with_context (11,957,589 samples, 0.28%)</title><rect x="9.8640%" y="645" width="0.2769%" height="15" fill="rgb(244,45,10)" fg:x="425909634" fg:w="11957589"/><text x="10.1140%" y="655.50"></text></g><g><title>&lt;tokio_tungstenite::WebSocketStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next::_{{closure}} (11,957,589 samples, 0.28%)</title><rect x="9.8640%" y="629" width="0.2769%" height="15" fill="rgb(207,125,25)" fg:x="425909634" fg:w="11957589"/><text x="10.1140%" y="639.50"></text></g><g><title>tungstenite::protocol::WebSocket&lt;Stream&gt;::read (11,957,589 samples, 0.28%)</title><rect x="9.8640%" y="613" width="0.2769%" height="15" fill="rgb(210,195,18)" fg:x="425909634" fg:w="11957589"/><text x="10.1140%" y="623.50"></text></g><g><title>tungstenite::protocol::WebSocketContext::read (11,957,589 samples, 0.28%)</title><rect x="9.8640%" y="597" width="0.2769%" height="15" fill="rgb(249,80,12)" fg:x="425909634" fg:w="11957589"/><text x="10.1140%" y="607.50"></text></g><g><title>tungstenite::protocol::WebSocketContext::read_message_frame (8,486,595 samples, 0.20%)</title><rect x="9.9444%" y="581" width="0.1965%" height="15" fill="rgb(221,65,9)" fg:x="429380628" fg:w="8486595"/><text x="10.1944%" y="591.50"></text></g><g><title>tungstenite::protocol::message::IncompleteMessage::extend (1,381,587 samples, 0.03%)</title><rect x="10.1090%" y="565" width="0.0320%" height="15" fill="rgb(235,49,36)" fg:x="436485636" fg:w="1381587"/><text x="10.3590%" y="575.50"></text></g><g><title>tungstenite::protocol::message::string_collect::StringCollector::extend (1,381,587 samples, 0.03%)</title><rect x="10.1090%" y="549" width="0.0320%" height="15" fill="rgb(225,32,20)" fg:x="436485636" fg:w="1381587"/><text x="10.3590%" y="559.50"></text></g><g><title>alloc::string::String::push_str (1,381,587 samples, 0.03%)</title><rect x="10.1090%" y="533" width="0.0320%" height="15" fill="rgb(215,141,46)" fg:x="436485636" fg:w="1381587"/><text x="10.3590%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,381,587 samples, 0.03%)</title><rect x="10.1090%" y="517" width="0.0320%" height="15" fill="rgb(250,160,47)" fg:x="436485636" fg:w="1381587"/><text x="10.3590%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,381,587 samples, 0.03%)</title><rect x="10.1090%" y="501" width="0.0320%" height="15" fill="rgb(216,222,40)" fg:x="436485636" fg:w="1381587"/><text x="10.3590%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,381,587 samples, 0.03%)</title><rect x="10.1090%" y="485" width="0.0320%" height="15" fill="rgb(234,217,39)" fg:x="436485636" fg:w="1381587"/><text x="10.3590%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,381,587 samples, 0.03%)</title><rect x="10.1090%" y="469" width="0.0320%" height="15" fill="rgb(207,178,40)" fg:x="436485636" fg:w="1381587"/><text x="10.3590%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,381,587 samples, 0.03%)</title><rect x="10.1090%" y="453" width="0.0320%" height="15" fill="rgb(221,136,13)" fg:x="436485636" fg:w="1381587"/><text x="10.3590%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,381,587 samples, 0.03%)</title><rect x="10.1090%" y="437" width="0.0320%" height="15" fill="rgb(249,199,10)" fg:x="436485636" fg:w="1381587"/><text x="10.3590%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,381,587 samples, 0.03%)</title><rect x="10.1090%" y="421" width="0.0320%" height="15" fill="rgb(249,222,13)" fg:x="436485636" fg:w="1381587"/><text x="10.3590%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,381,587 samples, 0.03%)</title><rect x="10.1090%" y="405" width="0.0320%" height="15" fill="rgb(244,185,38)" fg:x="436485636" fg:w="1381587"/><text x="10.3590%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,381,587 samples, 0.03%)</title><rect x="10.1090%" y="389" width="0.0320%" height="15" fill="rgb(236,202,9)" fg:x="436485636" fg:w="1381587"/><text x="10.3590%" y="399.50"></text></g><g><title>malloc (1,381,587 samples, 0.03%)</title><rect x="10.1090%" y="373" width="0.0320%" height="15" fill="rgb(250,229,37)" fg:x="436485636" fg:w="1381587"/><text x="10.3590%" y="383.50"></text></g><g><title>[libc.so.6] (1,381,587 samples, 0.03%)</title><rect x="10.1090%" y="357" width="0.0320%" height="15" fill="rgb(206,174,23)" fg:x="436485636" fg:w="1381587"/><text x="10.3590%" y="367.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (16,085,821 samples, 0.37%)</title><rect x="9.8640%" y="773" width="0.3725%" height="15" fill="rgb(211,33,43)" fg:x="425909634" fg:w="16085821"/><text x="10.1140%" y="783.50"></text></g><g><title>emi_web::realtime_websocket_stream::_{{closure}}::_{{closure}} (16,085,821 samples, 0.37%)</title><rect x="9.8640%" y="757" width="0.3725%" height="15" fill="rgb(245,58,50)" fg:x="425909634" fg:w="16085821"/><text x="10.1140%" y="767.50"></text></g><g><title>tokio::sync::broadcast::Receiver&lt;T&gt;::recv::_{{closure}} (4,128,232 samples, 0.10%)</title><rect x="10.1410%" y="741" width="0.0956%" height="15" fill="rgb(244,68,36)" fg:x="437867223" fg:w="4128232"/><text x="10.3910%" y="751.50"></text></g><g><title>&lt;tokio::runtime::coop::Coop&lt;F&gt; as core::future::future::Future&gt;::poll (1,727,865 samples, 0.04%)</title><rect x="10.1966%" y="725" width="0.0400%" height="15" fill="rgb(232,229,15)" fg:x="440267590" fg:w="1727865"/><text x="10.4466%" y="735.50"></text></g><g><title>&lt;tokio::sync::broadcast::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (1,727,865 samples, 0.04%)</title><rect x="10.1966%" y="709" width="0.0400%" height="15" fill="rgb(254,30,23)" fg:x="440267590" fg:w="1727865"/><text x="10.4466%" y="719.50"></text></g><g><title>tokio::sync::broadcast::RecvGuard&lt;T&gt;::clone_value (1,727,865 samples, 0.04%)</title><rect x="10.1966%" y="693" width="0.0400%" height="15" fill="rgb(235,160,14)" fg:x="440267590" fg:w="1727865"/><text x="10.4466%" y="703.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (1,727,865 samples, 0.04%)</title><rect x="10.1966%" y="677" width="0.0400%" height="15" fill="rgb(212,155,44)" fg:x="440267590" fg:w="1727865"/><text x="10.4466%" y="687.50"></text></g><g><title>tokio::sync::broadcast::RecvGuard&lt;T&gt;::clone_value::_{{closure}} (1,727,865 samples, 0.04%)</title><rect x="10.1966%" y="661" width="0.0400%" height="15" fill="rgb(226,2,50)" fg:x="440267590" fg:w="1727865"/><text x="10.4466%" y="671.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,727,865 samples, 0.04%)</title><rect x="10.1966%" y="645" width="0.0400%" height="15" fill="rgb(234,177,6)" fg:x="440267590" fg:w="1727865"/><text x="10.4466%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,727,865 samples, 0.04%)</title><rect x="10.1966%" y="629" width="0.0400%" height="15" fill="rgb(217,24,9)" fg:x="440267590" fg:w="1727865"/><text x="10.4466%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,727,865 samples, 0.04%)</title><rect x="10.1966%" y="613" width="0.0400%" height="15" fill="rgb(220,13,46)" fg:x="440267590" fg:w="1727865"/><text x="10.4466%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,727,865 samples, 0.04%)</title><rect x="10.1966%" y="597" width="0.0400%" height="15" fill="rgb(239,221,27)" fg:x="440267590" fg:w="1727865"/><text x="10.4466%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1,727,865 samples, 0.04%)</title><rect x="10.1966%" y="581" width="0.0400%" height="15" fill="rgb(222,198,25)" fg:x="440267590" fg:w="1727865"/><text x="10.4466%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,727,865 samples, 0.04%)</title><rect x="10.1966%" y="565" width="0.0400%" height="15" fill="rgb(211,99,13)" fg:x="440267590" fg:w="1727865"/><text x="10.4466%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,727,865 samples, 0.04%)</title><rect x="10.1966%" y="549" width="0.0400%" height="15" fill="rgb(232,111,31)" fg:x="440267590" fg:w="1727865"/><text x="10.4466%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,727,865 samples, 0.04%)</title><rect x="10.1966%" y="533" width="0.0400%" height="15" fill="rgb(245,82,37)" fg:x="440267590" fg:w="1727865"/><text x="10.4466%" y="543.50"></text></g><g><title>[libc.so.6] (1,727,865 samples, 0.04%)</title><rect x="10.1966%" y="517" width="0.0400%" height="15" fill="rgb(227,149,46)" fg:x="440267590" fg:w="1727865"/><text x="10.4466%" y="527.50"></text></g><g><title>axum::extract::ws::WebSocket::send::_{{closure}} (1,062,824 samples, 0.02%)</title><rect x="10.2366%" y="773" width="0.0246%" height="15" fill="rgb(218,36,50)" fg:x="441995455" fg:w="1062824"/><text x="10.4866%" y="783.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1,062,824 samples, 0.02%)</title><rect x="10.2366%" y="757" width="0.0246%" height="15" fill="rgb(226,80,48)" fg:x="441995455" fg:w="1062824"/><text x="10.4866%" y="767.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1,876,984 samples, 0.04%)</title><rect x="10.3221%" y="661" width="0.0435%" height="15" fill="rgb(238,224,15)" fg:x="445685506" fg:w="1876984"/><text x="10.5721%" y="671.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (1,876,984 samples, 0.04%)</title><rect x="10.3221%" y="645" width="0.0435%" height="15" fill="rgb(241,136,10)" fg:x="445685506" fg:w="1876984"/><text x="10.5721%" y="655.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (1,876,984 samples, 0.04%)</title><rect x="10.3221%" y="629" width="0.0435%" height="15" fill="rgb(208,32,45)" fg:x="445685506" fg:w="1876984"/><text x="10.5721%" y="639.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (1,876,984 samples, 0.04%)</title><rect x="10.3221%" y="613" width="0.0435%" height="15" fill="rgb(207,135,9)" fg:x="445685506" fg:w="1876984"/><text x="10.5721%" y="623.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (34,516,237 samples, 0.80%)</title><rect x="9.6084%" y="997" width="0.7994%" height="15" fill="rgb(206,86,44)" fg:x="414872407" fg:w="34516237"/><text x="9.8584%" y="1007.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (34,516,237 samples, 0.80%)</title><rect x="9.6084%" y="981" width="0.7994%" height="15" fill="rgb(245,177,15)" fg:x="414872407" fg:w="34516237"/><text x="9.8584%" y="991.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (34,516,237 samples, 0.80%)</title><rect x="9.6084%" y="965" width="0.7994%" height="15" fill="rgb(206,64,50)" fg:x="414872407" fg:w="34516237"/><text x="9.8584%" y="975.50"></text></g><g><title>std::panic::catch_unwind (34,516,237 samples, 0.80%)</title><rect x="9.6084%" y="949" width="0.7994%" height="15" fill="rgb(234,36,40)" fg:x="414872407" fg:w="34516237"/><text x="9.8584%" y="959.50"></text></g><g><title>std::panicking::try (34,516,237 samples, 0.80%)</title><rect x="9.6084%" y="933" width="0.7994%" height="15" fill="rgb(213,64,8)" fg:x="414872407" fg:w="34516237"/><text x="9.8584%" y="943.50"></text></g><g><title>std::panicking::try::do_call (34,516,237 samples, 0.80%)</title><rect x="9.6084%" y="917" width="0.7994%" height="15" fill="rgb(210,75,36)" fg:x="414872407" fg:w="34516237"/><text x="9.8584%" y="927.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (34,516,237 samples, 0.80%)</title><rect x="9.6084%" y="901" width="0.7994%" height="15" fill="rgb(229,88,21)" fg:x="414872407" fg:w="34516237"/><text x="9.8584%" y="911.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (34,516,237 samples, 0.80%)</title><rect x="9.6084%" y="885" width="0.7994%" height="15" fill="rgb(252,204,47)" fg:x="414872407" fg:w="34516237"/><text x="9.8584%" y="895.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (34,516,237 samples, 0.80%)</title><rect x="9.6084%" y="869" width="0.7994%" height="15" fill="rgb(208,77,27)" fg:x="414872407" fg:w="34516237"/><text x="9.8584%" y="879.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (34,516,237 samples, 0.80%)</title><rect x="9.6084%" y="853" width="0.7994%" height="15" fill="rgb(221,76,26)" fg:x="414872407" fg:w="34516237"/><text x="9.8584%" y="863.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (34,516,237 samples, 0.80%)</title><rect x="9.6084%" y="837" width="0.7994%" height="15" fill="rgb(225,139,18)" fg:x="414872407" fg:w="34516237"/><text x="9.8584%" y="847.50"></text></g><g><title>axum::extract::ws::WebSocketUpgrade&lt;F&gt;::on_upgrade::_{{closure}} (26,135,727 samples, 0.61%)</title><rect x="9.8025%" y="821" width="0.6053%" height="15" fill="rgb(230,137,11)" fg:x="423252917" fg:w="26135727"/><text x="10.0525%" y="831.50"></text></g><g><title>emi_web::ui_websocket::_{{closure}}::_{{closure}}::_{{closure}} (26,135,727 samples, 0.61%)</title><rect x="9.8025%" y="805" width="0.6053%" height="15" fill="rgb(212,28,1)" fg:x="423252917" fg:w="26135727"/><text x="10.0525%" y="815.50"></text></g><g><title>emi_web::realtime_websocket_stream::_{{closure}} (26,135,727 samples, 0.61%)</title><rect x="9.8025%" y="789" width="0.6053%" height="15" fill="rgb(248,164,17)" fg:x="423252917" fg:w="26135727"/><text x="10.0525%" y="799.50"></text></g><g><title>serde_json::ser::to_string (6,330,365 samples, 0.15%)</title><rect x="10.2612%" y="773" width="0.1466%" height="15" fill="rgb(222,171,42)" fg:x="443058279" fg:w="6330365"/><text x="10.5112%" y="783.50"></text></g><g><title>serde_json::ser::to_vec (6,330,365 samples, 0.15%)</title><rect x="10.2612%" y="757" width="0.1466%" height="15" fill="rgb(243,84,45)" fg:x="443058279" fg:w="6330365"/><text x="10.5112%" y="767.50"></text></g><g><title>serde_json::ser::to_writer (6,330,365 samples, 0.15%)</title><rect x="10.2612%" y="741" width="0.1466%" height="15" fill="rgb(252,49,23)" fg:x="443058279" fg:w="6330365"/><text x="10.5112%" y="751.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (6,330,365 samples, 0.15%)</title><rect x="10.2612%" y="725" width="0.1466%" height="15" fill="rgb(215,19,7)" fg:x="443058279" fg:w="6330365"/><text x="10.5112%" y="735.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (6,330,365 samples, 0.15%)</title><rect x="10.2612%" y="709" width="0.1466%" height="15" fill="rgb(238,81,41)" fg:x="443058279" fg:w="6330365"/><text x="10.5112%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (6,330,365 samples, 0.15%)</title><rect x="10.2612%" y="693" width="0.1466%" height="15" fill="rgb(210,199,37)" fg:x="443058279" fg:w="6330365"/><text x="10.5112%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (6,330,365 samples, 0.15%)</title><rect x="10.2612%" y="677" width="0.1466%" height="15" fill="rgb(244,192,49)" fg:x="443058279" fg:w="6330365"/><text x="10.5112%" y="687.50"></text></g><g><title>serde_json::ser::Formatter::write_char_escape (1,826,154 samples, 0.04%)</title><rect x="10.3655%" y="661" width="0.0423%" height="15" fill="rgb(226,211,11)" fg:x="447562490" fg:w="1826154"/><text x="10.6155%" y="671.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1,826,154 samples, 0.04%)</title><rect x="10.3655%" y="645" width="0.0423%" height="15" fill="rgb(236,162,54)" fg:x="447562490" fg:w="1826154"/><text x="10.6155%" y="655.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1,826,154 samples, 0.04%)</title><rect x="10.3655%" y="629" width="0.0423%" height="15" fill="rgb(220,229,9)" fg:x="447562490" fg:w="1826154"/><text x="10.6155%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,826,154 samples, 0.04%)</title><rect x="10.3655%" y="613" width="0.0423%" height="15" fill="rgb(250,87,22)" fg:x="447562490" fg:w="1826154"/><text x="10.6155%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,826,154 samples, 0.04%)</title><rect x="10.3655%" y="597" width="0.0423%" height="15" fill="rgb(239,43,17)" fg:x="447562490" fg:w="1826154"/><text x="10.6155%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,826,154 samples, 0.04%)</title><rect x="10.3655%" y="581" width="0.0423%" height="15" fill="rgb(231,177,25)" fg:x="447562490" fg:w="1826154"/><text x="10.6155%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,826,154 samples, 0.04%)</title><rect x="10.3655%" y="565" width="0.0423%" height="15" fill="rgb(219,179,1)" fg:x="447562490" fg:w="1826154"/><text x="10.6155%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,826,154 samples, 0.04%)</title><rect x="10.3655%" y="549" width="0.0423%" height="15" fill="rgb(238,219,53)" fg:x="447562490" fg:w="1826154"/><text x="10.6155%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,826,154 samples, 0.04%)</title><rect x="10.3655%" y="533" width="0.0423%" height="15" fill="rgb(232,167,36)" fg:x="447562490" fg:w="1826154"/><text x="10.6155%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,826,154 samples, 0.04%)</title><rect x="10.3655%" y="517" width="0.0423%" height="15" fill="rgb(244,19,51)" fg:x="447562490" fg:w="1826154"/><text x="10.6155%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,826,154 samples, 0.04%)</title><rect x="10.3655%" y="501" width="0.0423%" height="15" fill="rgb(224,6,22)" fg:x="447562490" fg:w="1826154"/><text x="10.6155%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,826,154 samples, 0.04%)</title><rect x="10.3655%" y="485" width="0.0423%" height="15" fill="rgb(224,145,5)" fg:x="447562490" fg:w="1826154"/><text x="10.6155%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,826,154 samples, 0.04%)</title><rect x="10.3655%" y="469" width="0.0423%" height="15" fill="rgb(234,130,49)" fg:x="447562490" fg:w="1826154"/><text x="10.6155%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,826,154 samples, 0.04%)</title><rect x="10.3655%" y="453" width="0.0423%" height="15" fill="rgb(254,6,2)" fg:x="447562490" fg:w="1826154"/><text x="10.6155%" y="463.50"></text></g><g><title>alloc::alloc::realloc (1,826,154 samples, 0.04%)</title><rect x="10.3655%" y="437" width="0.0423%" height="15" fill="rgb(208,96,46)" fg:x="447562490" fg:w="1826154"/><text x="10.6155%" y="447.50"></text></g><g><title>realloc (1,826,154 samples, 0.04%)</title><rect x="10.3655%" y="421" width="0.0423%" height="15" fill="rgb(239,3,39)" fg:x="447562490" fg:w="1826154"/><text x="10.6155%" y="431.50"></text></g><g><title>[libc.so.6] (1,826,154 samples, 0.04%)</title><rect x="10.3655%" y="405" width="0.0423%" height="15" fill="rgb(233,210,1)" fg:x="447562490" fg:w="1826154"/><text x="10.6155%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (38,886,051 samples, 0.90%)</title><rect x="9.5479%" y="1013" width="0.9006%" height="15" fill="rgb(244,137,37)" fg:x="412260911" fg:w="38886051"/><text x="9.7979%" y="1023.50"></text></g><g><title>tokio::runtime::task::raw::poll (1,758,318 samples, 0.04%)</title><rect x="10.4078%" y="997" width="0.0407%" height="15" fill="rgb(240,136,2)" fg:x="449388644" fg:w="1758318"/><text x="10.6578%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (3,239,900 samples, 0.08%)</title><rect x="10.4485%" y="1013" width="0.0750%" height="15" fill="rgb(239,18,37)" fg:x="451146962" fg:w="3239900"/><text x="10.6985%" y="1023.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (52,870,532 samples, 1.22%)</title><rect x="9.3318%" y="1093" width="1.2245%" height="15" fill="rgb(218,185,22)" fg:x="402928703" fg:w="52870532"/><text x="9.5818%" y="1103.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (52,870,532 samples, 1.22%)</title><rect x="9.3318%" y="1077" width="1.2245%" height="15" fill="rgb(225,218,4)" fg:x="402928703" fg:w="52870532"/><text x="9.5818%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (52,870,532 samples, 1.22%)</title><rect x="9.3318%" y="1061" width="1.2245%" height="15" fill="rgb(230,182,32)" fg:x="402928703" fg:w="52870532"/><text x="9.5818%" y="1071.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (52,870,532 samples, 1.22%)</title><rect x="9.3318%" y="1045" width="1.2245%" height="15" fill="rgb(242,56,43)" fg:x="402928703" fg:w="52870532"/><text x="9.5818%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (52,870,532 samples, 1.22%)</title><rect x="9.3318%" y="1029" width="1.2245%" height="15" fill="rgb(233,99,24)" fg:x="402928703" fg:w="52870532"/><text x="9.5818%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (1,412,373 samples, 0.03%)</title><rect x="10.5236%" y="1013" width="0.0327%" height="15" fill="rgb(234,209,42)" fg:x="454386862" fg:w="1412373"/><text x="10.7736%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (1,412,373 samples, 0.03%)</title><rect x="10.5236%" y="997" width="0.0327%" height="15" fill="rgb(227,7,12)" fg:x="454386862" fg:w="1412373"/><text x="10.7736%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (1,412,373 samples, 0.03%)</title><rect x="10.5236%" y="981" width="0.0327%" height="15" fill="rgb(245,203,43)" fg:x="454386862" fg:w="1412373"/><text x="10.7736%" y="991.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,412,373 samples, 0.03%)</title><rect x="10.5236%" y="965" width="0.0327%" height="15" fill="rgb(238,205,33)" fg:x="454386862" fg:w="1412373"/><text x="10.7736%" y="975.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1,412,373 samples, 0.03%)</title><rect x="10.5236%" y="949" width="0.0327%" height="15" fill="rgb(231,56,7)" fg:x="454386862" fg:w="1412373"/><text x="10.7736%" y="959.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1,412,373 samples, 0.03%)</title><rect x="10.5236%" y="933" width="0.0327%" height="15" fill="rgb(244,186,29)" fg:x="454386862" fg:w="1412373"/><text x="10.7736%" y="943.50"></text></g><g><title>cfree (1,429,281 samples, 0.03%)</title><rect x="10.5632%" y="885" width="0.0331%" height="15" fill="rgb(234,111,31)" fg:x="456095653" fg:w="1429281"/><text x="10.8132%" y="895.50"></text></g><g><title>[libc.so.6] (1,429,281 samples, 0.03%)</title><rect x="10.5632%" y="869" width="0.0331%" height="15" fill="rgb(241,149,10)" fg:x="456095653" fg:w="1429281"/><text x="10.8132%" y="879.50"></text></g><g><title>[libc.so.6] (1,429,281 samples, 0.03%)</title><rect x="10.5632%" y="853" width="0.0331%" height="15" fill="rgb(249,206,44)" fg:x="456095653" fg:w="1429281"/><text x="10.8132%" y="863.50"></text></g><g><title>[libc.so.6] (1,429,281 samples, 0.03%)</title><rect x="10.5632%" y="837" width="0.0331%" height="15" fill="rgb(251,153,30)" fg:x="456095653" fg:w="1429281"/><text x="10.8132%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,307,620 samples, 0.03%)</title><rect x="10.5963%" y="853" width="0.0303%" height="15" fill="rgb(239,152,38)" fg:x="457524934" fg:w="1307620"/><text x="10.8463%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (1,307,620 samples, 0.03%)</title><rect x="10.5963%" y="837" width="0.0303%" height="15" fill="rgb(249,139,47)" fg:x="457524934" fg:w="1307620"/><text x="10.8463%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,307,620 samples, 0.03%)</title><rect x="10.5963%" y="821" width="0.0303%" height="15" fill="rgb(244,64,35)" fg:x="457524934" fg:w="1307620"/><text x="10.8463%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,307,620 samples, 0.03%)</title><rect x="10.5963%" y="805" width="0.0303%" height="15" fill="rgb(216,46,15)" fg:x="457524934" fg:w="1307620"/><text x="10.8463%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,307,620 samples, 0.03%)</title><rect x="10.5963%" y="789" width="0.0303%" height="15" fill="rgb(250,74,19)" fg:x="457524934" fg:w="1307620"/><text x="10.8463%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,307,620 samples, 0.03%)</title><rect x="10.5963%" y="773" width="0.0303%" height="15" fill="rgb(249,42,33)" fg:x="457524934" fg:w="1307620"/><text x="10.8463%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,307,620 samples, 0.03%)</title><rect x="10.5963%" y="757" width="0.0303%" height="15" fill="rgb(242,149,17)" fg:x="457524934" fg:w="1307620"/><text x="10.8463%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,307,620 samples, 0.03%)</title><rect x="10.5963%" y="741" width="0.0303%" height="15" fill="rgb(244,29,21)" fg:x="457524934" fg:w="1307620"/><text x="10.8463%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (1,307,620 samples, 0.03%)</title><rect x="10.5963%" y="725" width="0.0303%" height="15" fill="rgb(220,130,37)" fg:x="457524934" fg:w="1307620"/><text x="10.8463%" y="735.50"></text></g><g><title>cfree (1,307,620 samples, 0.03%)</title><rect x="10.5963%" y="709" width="0.0303%" height="15" fill="rgb(211,67,2)" fg:x="457524934" fg:w="1307620"/><text x="10.8463%" y="719.50"></text></g><g><title>[libc.so.6] (1,307,620 samples, 0.03%)</title><rect x="10.5963%" y="693" width="0.0303%" height="15" fill="rgb(235,68,52)" fg:x="457524934" fg:w="1307620"/><text x="10.8463%" y="703.50"></text></g><g><title>[libc.so.6] (1,307,620 samples, 0.03%)</title><rect x="10.5963%" y="677" width="0.0303%" height="15" fill="rgb(246,142,3)" fg:x="457524934" fg:w="1307620"/><text x="10.8463%" y="687.50"></text></g><g><title>[libc.so.6] (1,307,620 samples, 0.03%)</title><rect x="10.5963%" y="661" width="0.0303%" height="15" fill="rgb(241,25,7)" fg:x="457524934" fg:w="1307620"/><text x="10.8463%" y="671.50"></text></g><g><title>[libc.so.6] (1,307,620 samples, 0.03%)</title><rect x="10.5963%" y="645" width="0.0303%" height="15" fill="rgb(242,119,39)" fg:x="457524934" fg:w="1307620"/><text x="10.8463%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;emi_web::parse_frame::Buffer&gt; (4,408,212 samples, 0.10%)</title><rect x="10.5963%" y="885" width="0.1021%" height="15" fill="rgb(241,98,45)" fg:x="457524934" fg:w="4408212"/><text x="10.8463%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (4,408,212 samples, 0.10%)</title><rect x="10.5963%" y="869" width="0.1021%" height="15" fill="rgb(254,28,30)" fg:x="457524934" fg:w="4408212"/><text x="10.8463%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (3,100,592 samples, 0.07%)</title><rect x="10.6265%" y="853" width="0.0718%" height="15" fill="rgb(241,142,54)" fg:x="458832554" fg:w="3100592"/><text x="10.8765%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,100,592 samples, 0.07%)</title><rect x="10.6265%" y="837" width="0.0718%" height="15" fill="rgb(222,85,15)" fg:x="458832554" fg:w="3100592"/><text x="10.8765%" y="847.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,554,119 samples, 0.13%)</title><rect x="10.6983%" y="757" width="0.1286%" height="15" fill="rgb(210,85,47)" fg:x="461933146" fg:w="5554119"/><text x="10.9483%" y="767.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (5,554,119 samples, 0.13%)</title><rect x="10.6983%" y="741" width="0.1286%" height="15" fill="rgb(224,206,25)" fg:x="461933146" fg:w="5554119"/><text x="10.9483%" y="751.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (5,554,119 samples, 0.13%)</title><rect x="10.6983%" y="725" width="0.1286%" height="15" fill="rgb(243,201,19)" fg:x="461933146" fg:w="5554119"/><text x="10.9483%" y="735.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (5,554,119 samples, 0.13%)</title><rect x="10.6983%" y="709" width="0.1286%" height="15" fill="rgb(236,59,4)" fg:x="461933146" fg:w="5554119"/><text x="10.9483%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15,712,756 samples, 0.36%)</title><rect x="10.6983%" y="773" width="0.3639%" height="15" fill="rgb(254,179,45)" fg:x="461933146" fg:w="15712756"/><text x="10.9483%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10,158,637 samples, 0.24%)</title><rect x="10.8270%" y="757" width="0.2353%" height="15" fill="rgb(226,14,10)" fg:x="467487265" fg:w="10158637"/><text x="11.0770%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (10,158,637 samples, 0.24%)</title><rect x="10.8270%" y="741" width="0.2353%" height="15" fill="rgb(244,27,41)" fg:x="467487265" fg:w="10158637"/><text x="11.0770%" y="751.50"></text></g><g><title>emi_web::parse_frame::Buffer::from_string::_{{closure}} (10,158,637 samples, 0.24%)</title><rect x="10.8270%" y="725" width="0.2353%" height="15" fill="rgb(235,35,32)" fg:x="467487265" fg:w="10158637"/><text x="11.0770%" y="735.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (10,158,637 samples, 0.24%)</title><rect x="10.8270%" y="709" width="0.2353%" height="15" fill="rgb(218,68,31)" fg:x="467487265" fg:w="10158637"/><text x="11.0770%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (10,158,637 samples, 0.24%)</title><rect x="10.8270%" y="693" width="0.2353%" height="15" fill="rgb(207,120,37)" fg:x="467487265" fg:w="10158637"/><text x="11.0770%" y="703.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (10,158,637 samples, 0.24%)</title><rect x="10.8270%" y="677" width="0.2353%" height="15" fill="rgb(227,98,0)" fg:x="467487265" fg:w="10158637"/><text x="11.0770%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (10,158,637 samples, 0.24%)</title><rect x="10.8270%" y="661" width="0.2353%" height="15" fill="rgb(207,7,3)" fg:x="467487265" fg:w="10158637"/><text x="11.0770%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (10,158,637 samples, 0.24%)</title><rect x="10.8270%" y="645" width="0.2353%" height="15" fill="rgb(206,98,19)" fg:x="467487265" fg:w="10158637"/><text x="11.0770%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10,158,637 samples, 0.24%)</title><rect x="10.8270%" y="629" width="0.2353%" height="15" fill="rgb(217,5,26)" fg:x="467487265" fg:w="10158637"/><text x="11.0770%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (10,158,637 samples, 0.24%)</title><rect x="10.8270%" y="613" width="0.2353%" height="15" fill="rgb(235,190,38)" fg:x="467487265" fg:w="10158637"/><text x="11.0770%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10,158,637 samples, 0.24%)</title><rect x="10.8270%" y="597" width="0.2353%" height="15" fill="rgb(247,86,24)" fg:x="467487265" fg:w="10158637"/><text x="11.0770%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10,158,637 samples, 0.24%)</title><rect x="10.8270%" y="581" width="0.2353%" height="15" fill="rgb(205,101,16)" fg:x="467487265" fg:w="10158637"/><text x="11.0770%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10,158,637 samples, 0.24%)</title><rect x="10.8270%" y="565" width="0.2353%" height="15" fill="rgb(246,168,33)" fg:x="467487265" fg:w="10158637"/><text x="11.0770%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (10,158,637 samples, 0.24%)</title><rect x="10.8270%" y="549" width="0.2353%" height="15" fill="rgb(231,114,1)" fg:x="467487265" fg:w="10158637"/><text x="11.0770%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (10,158,637 samples, 0.24%)</title><rect x="10.8270%" y="533" width="0.2353%" height="15" fill="rgb(207,184,53)" fg:x="467487265" fg:w="10158637"/><text x="11.0770%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10,158,637 samples, 0.24%)</title><rect x="10.8270%" y="517" width="0.2353%" height="15" fill="rgb(224,95,51)" fg:x="467487265" fg:w="10158637"/><text x="11.0770%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10,158,637 samples, 0.24%)</title><rect x="10.8270%" y="501" width="0.2353%" height="15" fill="rgb(212,188,45)" fg:x="467487265" fg:w="10158637"/><text x="11.0770%" y="511.50"></text></g><g><title>alloc::alloc::alloc (10,158,637 samples, 0.24%)</title><rect x="10.8270%" y="485" width="0.2353%" height="15" fill="rgb(223,154,38)" fg:x="467487265" fg:w="10158637"/><text x="11.0770%" y="495.50"></text></g><g><title>malloc (10,158,637 samples, 0.24%)</title><rect x="10.8270%" y="469" width="0.2353%" height="15" fill="rgb(251,22,52)" fg:x="467487265" fg:w="10158637"/><text x="11.0770%" y="479.50"></text></g><g><title>[libc.so.6] (932,605 samples, 0.02%)</title><rect x="11.0407%" y="453" width="0.0216%" height="15" fill="rgb(229,209,22)" fg:x="476713297" fg:w="932605"/><text x="11.2907%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (17,725,594 samples, 0.41%)</title><rect x="10.6983%" y="805" width="0.4105%" height="15" fill="rgb(234,138,34)" fg:x="461933146" fg:w="17725594"/><text x="10.9483%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (17,725,594 samples, 0.41%)</title><rect x="10.6983%" y="789" width="0.4105%" height="15" fill="rgb(212,95,11)" fg:x="461933146" fg:w="17725594"/><text x="10.9483%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2,012,838 samples, 0.05%)</title><rect x="11.0623%" y="773" width="0.0466%" height="15" fill="rgb(240,179,47)" fg:x="477645902" fg:w="2012838"/><text x="11.3123%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,012,838 samples, 0.05%)</title><rect x="11.0623%" y="757" width="0.0466%" height="15" fill="rgb(240,163,11)" fg:x="477645902" fg:w="2012838"/><text x="11.3123%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (2,012,838 samples, 0.05%)</title><rect x="11.0623%" y="741" width="0.0466%" height="15" fill="rgb(236,37,12)" fg:x="477645902" fg:w="2012838"/><text x="11.3123%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2,012,838 samples, 0.05%)</title><rect x="11.0623%" y="725" width="0.0466%" height="15" fill="rgb(232,164,16)" fg:x="477645902" fg:w="2012838"/><text x="11.3123%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,012,838 samples, 0.05%)</title><rect x="11.0623%" y="709" width="0.0466%" height="15" fill="rgb(244,205,15)" fg:x="477645902" fg:w="2012838"/><text x="11.3123%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,012,838 samples, 0.05%)</title><rect x="11.0623%" y="693" width="0.0466%" height="15" fill="rgb(223,117,47)" fg:x="477645902" fg:w="2012838"/><text x="11.3123%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2,012,838 samples, 0.05%)</title><rect x="11.0623%" y="677" width="0.0466%" height="15" fill="rgb(244,107,35)" fg:x="477645902" fg:w="2012838"/><text x="11.3123%" y="687.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2,012,838 samples, 0.05%)</title><rect x="11.0623%" y="661" width="0.0466%" height="15" fill="rgb(205,140,8)" fg:x="477645902" fg:w="2012838"/><text x="11.3123%" y="671.50"></text></g><g><title>alloc::alloc::realloc (2,012,838 samples, 0.05%)</title><rect x="11.0623%" y="645" width="0.0466%" height="15" fill="rgb(228,84,46)" fg:x="477645902" fg:w="2012838"/><text x="11.3123%" y="655.50"></text></g><g><title>realloc (2,012,838 samples, 0.05%)</title><rect x="11.0623%" y="629" width="0.0466%" height="15" fill="rgb(254,188,9)" fg:x="477645902" fg:w="2012838"/><text x="11.3123%" y="639.50"></text></g><g><title>[libc.so.6] (2,012,838 samples, 0.05%)</title><rect x="11.0623%" y="613" width="0.0466%" height="15" fill="rgb(206,112,54)" fg:x="477645902" fg:w="2012838"/><text x="11.3123%" y="623.50"></text></g><g><title>[libc.so.6] (2,012,838 samples, 0.05%)</title><rect x="11.0623%" y="597" width="0.0466%" height="15" fill="rgb(216,84,49)" fg:x="477645902" fg:w="2012838"/><text x="11.3123%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (19,431,321 samples, 0.45%)</title><rect x="10.6983%" y="869" width="0.4500%" height="15" fill="rgb(214,194,35)" fg:x="461933146" fg:w="19431321"/><text x="10.9483%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (19,431,321 samples, 0.45%)</title><rect x="10.6983%" y="853" width="0.4500%" height="15" fill="rgb(249,28,3)" fg:x="461933146" fg:w="19431321"/><text x="10.9483%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19,431,321 samples, 0.45%)</title><rect x="10.6983%" y="837" width="0.4500%" height="15" fill="rgb(222,56,52)" fg:x="461933146" fg:w="19431321"/><text x="10.9483%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (19,431,321 samples, 0.45%)</title><rect x="10.6983%" y="821" width="0.4500%" height="15" fill="rgb(245,217,50)" fg:x="461933146" fg:w="19431321"/><text x="10.9483%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,705,727 samples, 0.04%)</title><rect x="11.1089%" y="805" width="0.0395%" height="15" fill="rgb(213,201,24)" fg:x="479658740" fg:w="1705727"/><text x="11.3589%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,705,727 samples, 0.04%)</title><rect x="11.1089%" y="789" width="0.0395%" height="15" fill="rgb(248,116,28)" fg:x="479658740" fg:w="1705727"/><text x="11.3589%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,705,727 samples, 0.04%)</title><rect x="11.1089%" y="773" width="0.0395%" height="15" fill="rgb(219,72,43)" fg:x="479658740" fg:w="1705727"/><text x="11.3589%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,705,727 samples, 0.04%)</title><rect x="11.1089%" y="757" width="0.0395%" height="15" fill="rgb(209,138,14)" fg:x="479658740" fg:w="1705727"/><text x="11.3589%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,705,727 samples, 0.04%)</title><rect x="11.1089%" y="741" width="0.0395%" height="15" fill="rgb(222,18,33)" fg:x="479658740" fg:w="1705727"/><text x="11.3589%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,705,727 samples, 0.04%)</title><rect x="11.1089%" y="725" width="0.0395%" height="15" fill="rgb(213,199,7)" fg:x="479658740" fg:w="1705727"/><text x="11.3589%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,705,727 samples, 0.04%)</title><rect x="11.1089%" y="709" width="0.0395%" height="15" fill="rgb(250,110,10)" fg:x="479658740" fg:w="1705727"/><text x="11.3589%" y="719.50"></text></g><g><title>alloc::alloc::alloc (1,705,727 samples, 0.04%)</title><rect x="11.1089%" y="693" width="0.0395%" height="15" fill="rgb(248,123,6)" fg:x="479658740" fg:w="1705727"/><text x="11.3589%" y="703.50"></text></g><g><title>malloc (1,705,727 samples, 0.04%)</title><rect x="11.1089%" y="677" width="0.0395%" height="15" fill="rgb(206,91,31)" fg:x="479658740" fg:w="1705727"/><text x="11.3589%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,239,890 samples, 0.03%)</title><rect x="11.1484%" y="837" width="0.0287%" height="15" fill="rgb(211,154,13)" fg:x="481364467" fg:w="1239890"/><text x="11.3984%" y="847.50"></text></g><g><title>emi_web::parse_frame::Buffer::from_string::_{{closure}}::_{{closure}} (1,239,890 samples, 0.03%)</title><rect x="11.1484%" y="821" width="0.0287%" height="15" fill="rgb(225,148,7)" fg:x="481364467" fg:w="1239890"/><text x="11.3984%" y="831.50"></text></g><g><title>regex::regex::string::Match::as_str (1,239,890 samples, 0.03%)</title><rect x="11.1484%" y="805" width="0.0287%" height="15" fill="rgb(220,160,43)" fg:x="481364467" fg:w="1239890"/><text x="11.3984%" y="815.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1,239,890 samples, 0.03%)</title><rect x="11.1484%" y="789" width="0.0287%" height="15" fill="rgb(213,52,39)" fg:x="481364467" fg:w="1239890"/><text x="11.3984%" y="799.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (1,239,890 samples, 0.03%)</title><rect x="11.1484%" y="773" width="0.0287%" height="15" fill="rgb(243,137,7)" fg:x="481364467" fg:w="1239890"/><text x="11.3984%" y="783.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (1,239,890 samples, 0.03%)</title><rect x="11.1484%" y="757" width="0.0287%" height="15" fill="rgb(230,79,13)" fg:x="481364467" fg:w="1239890"/><text x="11.3984%" y="767.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (1,239,890 samples, 0.03%)</title><rect x="11.1484%" y="741" width="0.0287%" height="15" fill="rgb(247,105,23)" fg:x="481364467" fg:w="1239890"/><text x="11.3984%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2,869,598 samples, 0.07%)</title><rect x="11.1484%" y="869" width="0.0665%" height="15" fill="rgb(223,179,41)" fg:x="481364467" fg:w="2869598"/><text x="11.3984%" y="879.50"></text></g><g><title>emi_web::parse_frame::Buffer::from_string::_{{closure}} (2,869,598 samples, 0.07%)</title><rect x="11.1484%" y="853" width="0.0665%" height="15" fill="rgb(218,9,34)" fg:x="481364467" fg:w="2869598"/><text x="11.3984%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::regex::string::Captures&gt; (1,629,708 samples, 0.04%)</title><rect x="11.1771%" y="837" width="0.0377%" height="15" fill="rgb(222,106,8)" fg:x="482604357" fg:w="1629708"/><text x="11.4271%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::util::captures::Captures&gt; (1,629,708 samples, 0.04%)</title><rect x="11.1771%" y="821" width="0.0377%" height="15" fill="rgb(211,220,0)" fg:x="482604357" fg:w="1629708"/><text x="11.4271%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt;&gt;&gt; (1,629,708 samples, 0.04%)</title><rect x="11.1771%" y="805" width="0.0377%" height="15" fill="rgb(229,52,16)" fg:x="482604357" fg:w="1629708"/><text x="11.4271%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;regex_automata::util::primitives::NonMaxUsize&gt;&gt;&gt; (1,629,708 samples, 0.04%)</title><rect x="11.1771%" y="789" width="0.0377%" height="15" fill="rgb(212,155,18)" fg:x="482604357" fg:w="1629708"/><text x="11.4271%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,629,708 samples, 0.04%)</title><rect x="11.1771%" y="773" width="0.0377%" height="15" fill="rgb(242,21,14)" fg:x="482604357" fg:w="1629708"/><text x="11.4271%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,629,708 samples, 0.04%)</title><rect x="11.1771%" y="757" width="0.0377%" height="15" fill="rgb(222,19,48)" fg:x="482604357" fg:w="1629708"/><text x="11.4271%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,629,708 samples, 0.04%)</title><rect x="11.1771%" y="741" width="0.0377%" height="15" fill="rgb(232,45,27)" fg:x="482604357" fg:w="1629708"/><text x="11.4271%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (1,629,708 samples, 0.04%)</title><rect x="11.1771%" y="725" width="0.0377%" height="15" fill="rgb(249,103,42)" fg:x="482604357" fg:w="1629708"/><text x="11.4271%" y="735.50"></text></g><g><title>cfree (1,629,708 samples, 0.04%)</title><rect x="11.1771%" y="709" width="0.0377%" height="15" fill="rgb(246,81,33)" fg:x="482604357" fg:w="1629708"/><text x="11.4271%" y="719.50"></text></g><g><title>core::str::&lt;impl str&gt;::split (3,650,067 samples, 0.08%)</title><rect x="11.2148%" y="869" width="0.0845%" height="15" fill="rgb(252,33,42)" fg:x="484234065" fg:w="3650067"/><text x="11.4648%" y="879.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (3,650,067 samples, 0.08%)</title><rect x="11.2148%" y="853" width="0.0845%" height="15" fill="rgb(209,212,41)" fg:x="484234065" fg:w="3650067"/><text x="11.4648%" y="863.50"></text></g><g><title>core::str::pattern::StrSearcher::new (3,650,067 samples, 0.08%)</title><rect x="11.2148%" y="837" width="0.0845%" height="15" fill="rgb(207,154,6)" fg:x="484234065" fg:w="3650067"/><text x="11.4648%" y="847.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (3,650,067 samples, 0.08%)</title><rect x="11.2148%" y="821" width="0.0845%" height="15" fill="rgb(223,64,47)" fg:x="484234065" fg:w="3650067"/><text x="11.4648%" y="831.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (3,650,067 samples, 0.08%)</title><rect x="11.2148%" y="805" width="0.0845%" height="15" fill="rgb(211,161,38)" fg:x="484234065" fg:w="3650067"/><text x="11.4648%" y="815.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3,650,067 samples, 0.08%)</title><rect x="11.2148%" y="789" width="0.0845%" height="15" fill="rgb(219,138,40)" fg:x="484234065" fg:w="3650067"/><text x="11.4648%" y="799.50"></text></g><g><title>[libc.so.6] (3,650,067 samples, 0.08%)</title><rect x="11.2148%" y="773" width="0.0845%" height="15" fill="rgb(241,228,46)" fg:x="484234065" fg:w="3650067"/><text x="11.4648%" y="783.50"></text></g><g><title>regex_automata::dfa::onepass::DFA::find_match (2,707,922 samples, 0.06%)</title><rect x="11.2994%" y="709" width="0.0627%" height="15" fill="rgb(223,209,38)" fg:x="487884132" fg:w="2707922"/><text x="11.5494%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (2,707,922 samples, 0.06%)</title><rect x="11.2994%" y="693" width="0.0627%" height="15" fill="rgb(236,164,45)" fg:x="487884132" fg:w="2707922"/><text x="11.5494%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,707,922 samples, 0.06%)</title><rect x="11.2994%" y="677" width="0.0627%" height="15" fill="rgb(231,15,5)" fg:x="487884132" fg:w="2707922"/><text x="11.5494%" y="687.50"></text></g><g><title>[libc.so.6] (2,707,922 samples, 0.06%)</title><rect x="11.2994%" y="661" width="0.0627%" height="15" fill="rgb(252,35,15)" fg:x="487884132" fg:w="2707922"/><text x="11.5494%" y="671.50"></text></g><g><title>regex_automata::meta::strategy::Core::search_slots_nofail (7,297,795 samples, 0.17%)</title><rect x="11.2994%" y="773" width="0.1690%" height="15" fill="rgb(248,181,18)" fg:x="487884132" fg:w="7297795"/><text x="11.5494%" y="783.50"></text></g><g><title>regex_automata::meta::wrappers::OnePassEngine::search_slots (7,297,795 samples, 0.17%)</title><rect x="11.2994%" y="757" width="0.1690%" height="15" fill="rgb(233,39,42)" fg:x="487884132" fg:w="7297795"/><text x="11.5494%" y="767.50"></text></g><g><title>regex_automata::dfa::onepass::DFA::try_search_slots_imp (7,297,795 samples, 0.17%)</title><rect x="11.2994%" y="741" width="0.1690%" height="15" fill="rgb(238,110,33)" fg:x="487884132" fg:w="7297795"/><text x="11.5494%" y="751.50"></text></g><g><title>regex_automata::dfa::onepass::DFA::search_imp (7,297,795 samples, 0.17%)</title><rect x="11.2994%" y="725" width="0.1690%" height="15" fill="rgb(233,195,10)" fg:x="487884132" fg:w="7297795"/><text x="11.5494%" y="735.50"></text></g><g><title>regex_automata::dfa::onepass::DFA::transition (4,589,873 samples, 0.11%)</title><rect x="11.3621%" y="709" width="0.1063%" height="15" fill="rgb(254,105,3)" fg:x="490592054" fg:w="4589873"/><text x="11.6121%" y="719.50"></text></g><g><title>regex_automata::hybrid::dfa::DFA::try_search_fwd (9,871,063 samples, 0.23%)</title><rect x="11.4684%" y="725" width="0.2286%" height="15" fill="rgb(221,225,9)" fg:x="495181927" fg:w="9871063"/><text x="11.7184%" y="735.50"></text></g><g><title>regex_automata::hybrid::search::find_fwd (9,871,063 samples, 0.23%)</title><rect x="11.4684%" y="709" width="0.2286%" height="15" fill="rgb(224,227,45)" fg:x="495181927" fg:w="9871063"/><text x="11.7184%" y="719.50"></text></g><g><title>regex_automata::hybrid::search::find_fwd_imp (9,871,063 samples, 0.23%)</title><rect x="11.4684%" y="693" width="0.2286%" height="15" fill="rgb(229,198,43)" fg:x="495181927" fg:w="9871063"/><text x="11.7184%" y="703.50"></text></g><g><title>regex_automata::hybrid::dfa::DFA::next_state_untagged_unchecked (9,871,063 samples, 0.23%)</title><rect x="11.4684%" y="677" width="0.2286%" height="15" fill="rgb(206,209,35)" fg:x="495181927" fg:w="9871063"/><text x="11.7184%" y="687.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::search_slots (20,502,482 samples, 0.47%)</title><rect x="11.2994%" y="789" width="0.4748%" height="15" fill="rgb(245,195,53)" fg:x="487884132" fg:w="20502482"/><text x="11.5494%" y="799.50"></text></g><g><title>regex_automata::meta::strategy::Core::try_search_mayfail (13,204,687 samples, 0.31%)</title><rect x="11.4684%" y="773" width="0.3058%" height="15" fill="rgb(240,92,26)" fg:x="495181927" fg:w="13204687"/><text x="11.7184%" y="783.50"></text></g><g><title>regex_automata::meta::wrappers::HybridEngine::try_search (13,204,687 samples, 0.31%)</title><rect x="11.4684%" y="757" width="0.3058%" height="15" fill="rgb(207,40,23)" fg:x="495181927" fg:w="13204687"/><text x="11.7184%" y="767.50"></text></g><g><title>regex_automata::hybrid::regex::Regex::try_search (13,204,687 samples, 0.31%)</title><rect x="11.4684%" y="741" width="0.3058%" height="15" fill="rgb(223,111,35)" fg:x="495181927" fg:w="13204687"/><text x="11.7184%" y="751.50"></text></g><g><title>regex_automata::hybrid::dfa::DFA::try_search_rev (3,333,624 samples, 0.08%)</title><rect x="11.6970%" y="725" width="0.0772%" height="15" fill="rgb(229,147,28)" fg:x="505052990" fg:w="3333624"/><text x="11.9470%" y="735.50"></text></g><g><title>regex_automata::hybrid::search::find_rev (3,333,624 samples, 0.08%)</title><rect x="11.6970%" y="709" width="0.0772%" height="15" fill="rgb(211,29,28)" fg:x="505052990" fg:w="3333624"/><text x="11.9470%" y="719.50"></text></g><g><title>regex_automata::hybrid::search::find_rev_imp (3,333,624 samples, 0.08%)</title><rect x="11.6970%" y="693" width="0.0772%" height="15" fill="rgb(228,72,33)" fg:x="505052990" fg:w="3333624"/><text x="11.9470%" y="703.50"></text></g><g><title>regex_automata::hybrid::dfa::DFA::next_state_untagged_unchecked (2,936,279 samples, 0.07%)</title><rect x="11.7062%" y="677" width="0.0680%" height="15" fill="rgb(205,214,31)" fg:x="505450335" fg:w="2936279"/><text x="11.9562%" y="687.50"></text></g><g><title>emi_web::parse_frame::Buffer::parse_area (22,086,913 samples, 0.51%)</title><rect x="11.2994%" y="869" width="0.5115%" height="15" fill="rgb(224,111,15)" fg:x="487884132" fg:w="22086913"/><text x="11.5494%" y="879.50"></text></g><g><title>regex::regex::string::Regex::captures (22,086,913 samples, 0.51%)</title><rect x="11.2994%" y="853" width="0.5115%" height="15" fill="rgb(253,21,26)" fg:x="487884132" fg:w="22086913"/><text x="11.5494%" y="863.50"></text></g><g><title>regex::regex::string::Regex::captures_at (22,086,913 samples, 0.51%)</title><rect x="11.2994%" y="837" width="0.5115%" height="15" fill="rgb(245,139,43)" fg:x="487884132" fg:w="22086913"/><text x="11.5494%" y="847.50"></text></g><g><title>regex_automata::meta::regex::Regex::search_captures (22,086,913 samples, 0.51%)</title><rect x="11.2994%" y="821" width="0.5115%" height="15" fill="rgb(252,170,7)" fg:x="487884132" fg:w="22086913"/><text x="11.5494%" y="831.50"></text></g><g><title>regex_automata::meta::regex::Regex::search_slots (22,086,913 samples, 0.51%)</title><rect x="11.2994%" y="805" width="0.5115%" height="15" fill="rgb(231,118,14)" fg:x="487884132" fg:w="22086913"/><text x="11.5494%" y="815.50"></text></g><g><title>regex_automata::meta::regex::RegexInfo::is_impossible (1,584,431 samples, 0.04%)</title><rect x="11.7742%" y="789" width="0.0367%" height="15" fill="rgb(238,83,0)" fg:x="508386614" fg:w="1584431"/><text x="12.0242%" y="799.50"></text></g><g><title>&lt;emi_web::parse_frame::STYLES_RE as core::ops::deref::Deref&gt;::deref (1,554,224 samples, 0.04%)</title><rect x="11.8109%" y="853" width="0.0360%" height="15" fill="rgb(221,39,39)" fg:x="509971045" fg:w="1554224"/><text x="12.0609%" y="863.50"></text></g><g><title>&lt;emi_web::parse_frame::STYLES_RE as core::ops::deref::Deref&gt;::deref::__stability (1,554,224 samples, 0.04%)</title><rect x="11.8109%" y="837" width="0.0360%" height="15" fill="rgb(222,119,46)" fg:x="509971045" fg:w="1554224"/><text x="12.0609%" y="847.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (1,554,224 samples, 0.04%)</title><rect x="11.8109%" y="821" width="0.0360%" height="15" fill="rgb(222,165,49)" fg:x="509971045" fg:w="1554224"/><text x="12.0609%" y="831.50"></text></g><g><title>std::sync::once::Once::call_once (1,554,224 samples, 0.04%)</title><rect x="11.8109%" y="805" width="0.0360%" height="15" fill="rgb(219,113,52)" fg:x="509971045" fg:w="1554224"/><text x="12.0609%" y="815.50"></text></g><g><title>std::sys::sync::once::futex::Once::call (1,554,224 samples, 0.04%)</title><rect x="11.8109%" y="789" width="0.0360%" height="15" fill="rgb(214,7,15)" fg:x="509971045" fg:w="1554224"/><text x="12.0609%" y="799.50"></text></g><g><title>std::sync::once::Once::call_once::_{{closure}} (1,554,224 samples, 0.04%)</title><rect x="11.8109%" y="773" width="0.0360%" height="15" fill="rgb(235,32,4)" fg:x="509971045" fg:w="1554224"/><text x="12.0609%" y="783.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::_{{closure}} (1,554,224 samples, 0.04%)</title><rect x="11.8109%" y="757" width="0.0360%" height="15" fill="rgb(238,90,54)" fg:x="509971045" fg:w="1554224"/><text x="12.0609%" y="767.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,554,224 samples, 0.04%)</title><rect x="11.8109%" y="741" width="0.0360%" height="15" fill="rgb(213,208,19)" fg:x="509971045" fg:w="1554224"/><text x="12.0609%" y="751.50"></text></g><g><title>&lt;emi_web::parse_frame::STYLES_RE as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (1,554,224 samples, 0.04%)</title><rect x="11.8109%" y="725" width="0.0360%" height="15" fill="rgb(233,156,4)" fg:x="509971045" fg:w="1554224"/><text x="12.0609%" y="735.50"></text></g><g><title>regex::regex::string::Regex::new (1,554,224 samples, 0.04%)</title><rect x="11.8109%" y="709" width="0.0360%" height="15" fill="rgb(207,194,5)" fg:x="509971045" fg:w="1554224"/><text x="12.0609%" y="719.50"></text></g><g><title>regex::builders::string::RegexBuilder::build (1,554,224 samples, 0.04%)</title><rect x="11.8109%" y="693" width="0.0360%" height="15" fill="rgb(206,111,30)" fg:x="509971045" fg:w="1554224"/><text x="12.0609%" y="703.50"></text></g><g><title>regex::builders::Builder::build_one_string (1,554,224 samples, 0.04%)</title><rect x="11.8109%" y="677" width="0.0360%" height="15" fill="rgb(243,70,54)" fg:x="509971045" fg:w="1554224"/><text x="12.0609%" y="687.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (1,554,224 samples, 0.04%)</title><rect x="11.8109%" y="661" width="0.0360%" height="15" fill="rgb(242,28,8)" fg:x="509971045" fg:w="1554224"/><text x="12.0609%" y="671.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (1,554,224 samples, 0.04%)</title><rect x="11.8109%" y="645" width="0.0360%" height="15" fill="rgb(219,106,18)" fg:x="509971045" fg:w="1554224"/><text x="12.0609%" y="655.50"></text></g><g><title>regex_syntax::hir::translate::Translator::translate (1,554,224 samples, 0.04%)</title><rect x="11.8109%" y="629" width="0.0360%" height="15" fill="rgb(244,222,10)" fg:x="509971045" fg:w="1554224"/><text x="12.0609%" y="639.50"></text></g><g><title>regex_syntax::ast::visitor::visit (1,554,224 samples, 0.04%)</title><rect x="11.8109%" y="613" width="0.0360%" height="15" fill="rgb(236,179,52)" fg:x="509971045" fg:w="1554224"/><text x="12.0609%" y="623.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit (1,554,224 samples, 0.04%)</title><rect x="11.8109%" y="597" width="0.0360%" height="15" fill="rgb(213,23,39)" fg:x="509971045" fg:w="1554224"/><text x="12.0609%" y="607.50"></text></g><g><title>regex_syntax::ast::visitor::Frame::child (1,554,224 samples, 0.04%)</title><rect x="11.8109%" y="581" width="0.0360%" height="15" fill="rgb(238,48,10)" fg:x="509971045" fg:w="1554224"/><text x="12.0609%" y="591.50"></text></g><g><title>regex_automata::dfa::onepass::DFA::find_match (3,530,968 samples, 0.08%)</title><rect x="11.8886%" y="549" width="0.0818%" height="15" fill="rgb(251,196,23)" fg:x="513327443" fg:w="3530968"/><text x="12.1386%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (3,530,968 samples, 0.08%)</title><rect x="11.8886%" y="533" width="0.0818%" height="15" fill="rgb(250,152,24)" fg:x="513327443" fg:w="3530968"/><text x="12.1386%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,530,968 samples, 0.08%)</title><rect x="11.8886%" y="517" width="0.0818%" height="15" fill="rgb(209,150,17)" fg:x="513327443" fg:w="3530968"/><text x="12.1386%" y="527.50"></text></g><g><title>[libc.so.6] (3,530,968 samples, 0.08%)</title><rect x="11.8886%" y="501" width="0.0818%" height="15" fill="rgb(234,202,34)" fg:x="513327443" fg:w="3530968"/><text x="12.1386%" y="511.50"></text></g><g><title>regex_automata::meta::strategy::Core::search_slots_nofail (6,513,260 samples, 0.15%)</title><rect x="11.8469%" y="613" width="0.1508%" height="15" fill="rgb(253,148,53)" fg:x="511525269" fg:w="6513260"/><text x="12.0969%" y="623.50"></text></g><g><title>regex_automata::meta::wrappers::OnePassEngine::search_slots (6,513,260 samples, 0.15%)</title><rect x="11.8469%" y="597" width="0.1508%" height="15" fill="rgb(218,129,16)" fg:x="511525269" fg:w="6513260"/><text x="12.0969%" y="607.50"></text></g><g><title>regex_automata::dfa::onepass::DFA::try_search_slots_imp (6,513,260 samples, 0.15%)</title><rect x="11.8469%" y="581" width="0.1508%" height="15" fill="rgb(216,85,19)" fg:x="511525269" fg:w="6513260"/><text x="12.0969%" y="591.50"></text></g><g><title>regex_automata::dfa::onepass::DFA::search_imp (4,711,086 samples, 0.11%)</title><rect x="11.8886%" y="565" width="0.1091%" height="15" fill="rgb(235,228,7)" fg:x="513327443" fg:w="4711086"/><text x="12.1386%" y="575.50"></text></g><g><title>regex_automata::dfa::onepass::Slots::apply (1,180,118 samples, 0.03%)</title><rect x="11.9704%" y="549" width="0.0273%" height="15" fill="rgb(245,175,0)" fg:x="516858411" fg:w="1180118"/><text x="12.2204%" y="559.50"></text></g><g><title>&lt;regex_automata::dfa::onepass::SlotsIter as core::iter::traits::iterator::Iterator&gt;::next (516,006 samples, 0.01%)</title><rect x="11.9858%" y="533" width="0.0120%" height="15" fill="rgb(208,168,36)" fg:x="517522523" fg:w="516006"/><text x="12.2358%" y="543.50"></text></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (516,006 samples, 0.01%)</title><rect x="11.9858%" y="517" width="0.0120%" height="15" fill="rgb(246,171,24)" fg:x="517522523" fg:w="516006"/><text x="12.2358%" y="527.50"></text></g><g><title>&lt;regex::regex::string::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (10,715,546 samples, 0.25%)</title><rect x="11.8469%" y="741" width="0.2482%" height="15" fill="rgb(215,142,24)" fg:x="511525269" fg:w="10715546"/><text x="12.0969%" y="751.50"></text></g><g><title>&lt;regex_automata::meta::regex::CapturesMatches as core::iter::traits::iterator::Iterator&gt;::next (10,715,546 samples, 0.25%)</title><rect x="11.8469%" y="725" width="0.2482%" height="15" fill="rgb(250,187,7)" fg:x="511525269" fg:w="10715546"/><text x="12.0969%" y="735.50"></text></g><g><title>regex_automata::util::iter::Searcher::advance (10,715,546 samples, 0.25%)</title><rect x="11.8469%" y="709" width="0.2482%" height="15" fill="rgb(228,66,33)" fg:x="511525269" fg:w="10715546"/><text x="12.0969%" y="719.50"></text></g><g><title>regex_automata::util::iter::Searcher::try_advance (10,715,546 samples, 0.25%)</title><rect x="11.8469%" y="693" width="0.2482%" height="15" fill="rgb(234,215,21)" fg:x="511525269" fg:w="10715546"/><text x="12.0969%" y="703.50"></text></g><g><title>&lt;regex_automata::meta::regex::CapturesMatches as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (10,715,546 samples, 0.25%)</title><rect x="11.8469%" y="677" width="0.2482%" height="15" fill="rgb(222,191,20)" fg:x="511525269" fg:w="10715546"/><text x="12.0969%" y="687.50"></text></g><g><title>regex_automata::meta::regex::Regex::search_captures_with (10,715,546 samples, 0.25%)</title><rect x="11.8469%" y="661" width="0.2482%" height="15" fill="rgb(245,79,54)" fg:x="511525269" fg:w="10715546"/><text x="12.0969%" y="671.50"></text></g><g><title>regex_automata::meta::regex::Regex::search_slots_with (10,715,546 samples, 0.25%)</title><rect x="11.8469%" y="645" width="0.2482%" height="15" fill="rgb(240,10,37)" fg:x="511525269" fg:w="10715546"/><text x="12.0969%" y="655.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::search_slots (10,715,546 samples, 0.25%)</title><rect x="11.8469%" y="629" width="0.2482%" height="15" fill="rgb(214,192,32)" fg:x="511525269" fg:w="10715546"/><text x="12.0969%" y="639.50"></text></g><g><title>regex_automata::meta::strategy::Core::try_search_mayfail (4,202,286 samples, 0.10%)</title><rect x="11.9977%" y="613" width="0.0973%" height="15" fill="rgb(209,36,54)" fg:x="518038529" fg:w="4202286"/><text x="12.2477%" y="623.50"></text></g><g><title>regex_automata::meta::wrappers::HybridEngine::try_search (4,202,286 samples, 0.10%)</title><rect x="11.9977%" y="597" width="0.0973%" height="15" fill="rgb(220,10,11)" fg:x="518038529" fg:w="4202286"/><text x="12.2477%" y="607.50"></text></g><g><title>regex_automata::hybrid::regex::Regex::try_search (4,202,286 samples, 0.10%)</title><rect x="11.9977%" y="581" width="0.0973%" height="15" fill="rgb(221,106,17)" fg:x="518038529" fg:w="4202286"/><text x="12.2477%" y="591.50"></text></g><g><title>regex_automata::hybrid::dfa::DFA::try_search_fwd (4,202,286 samples, 0.10%)</title><rect x="11.9977%" y="565" width="0.0973%" height="15" fill="rgb(251,142,44)" fg:x="518038529" fg:w="4202286"/><text x="12.2477%" y="575.50"></text></g><g><title>regex_automata::hybrid::search::find_fwd (4,202,286 samples, 0.10%)</title><rect x="11.9977%" y="549" width="0.0973%" height="15" fill="rgb(238,13,15)" fg:x="518038529" fg:w="4202286"/><text x="12.2477%" y="559.50"></text></g><g><title>regex_automata::hybrid::search::find_fwd_imp (4,202,286 samples, 0.10%)</title><rect x="11.9977%" y="533" width="0.0973%" height="15" fill="rgb(208,107,27)" fg:x="518038529" fg:w="4202286"/><text x="12.2477%" y="543.50"></text></g><g><title>regex_automata::hybrid::dfa::DFA::next_state_untagged_unchecked (1,629,708 samples, 0.04%)</title><rect x="12.0573%" y="517" width="0.0377%" height="15" fill="rgb(205,136,37)" fg:x="520611107" fg:w="1629708"/><text x="12.3073%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15,421,263 samples, 0.36%)</title><rect x="11.8469%" y="757" width="0.3572%" height="15" fill="rgb(250,205,27)" fg:x="511525269" fg:w="15421263"/><text x="12.0969%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4,705,717 samples, 0.11%)</title><rect x="12.0951%" y="741" width="0.1090%" height="15" fill="rgb(210,80,43)" fg:x="522240815" fg:w="4705717"/><text x="12.3451%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4,705,717 samples, 0.11%)</title><rect x="12.0951%" y="725" width="0.1090%" height="15" fill="rgb(247,160,36)" fg:x="522240815" fg:w="4705717"/><text x="12.3451%" y="735.50"></text></g><g><title>emi_web::parse_frame::Buffer::parse_styles::_{{closure}} (4,705,717 samples, 0.11%)</title><rect x="12.0951%" y="709" width="0.1090%" height="15" fill="rgb(234,13,49)" fg:x="522240815" fg:w="4705717"/><text x="12.3451%" y="719.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (4,705,717 samples, 0.11%)</title><rect x="12.0951%" y="693" width="0.1090%" height="15" fill="rgb(234,122,0)" fg:x="522240815" fg:w="4705717"/><text x="12.3451%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (4,705,717 samples, 0.11%)</title><rect x="12.0951%" y="677" width="0.1090%" height="15" fill="rgb(207,146,38)" fg:x="522240815" fg:w="4705717"/><text x="12.3451%" y="687.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (4,705,717 samples, 0.11%)</title><rect x="12.0951%" y="661" width="0.1090%" height="15" fill="rgb(207,177,25)" fg:x="522240815" fg:w="4705717"/><text x="12.3451%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (4,705,717 samples, 0.11%)</title><rect x="12.0951%" y="645" width="0.1090%" height="15" fill="rgb(211,178,42)" fg:x="522240815" fg:w="4705717"/><text x="12.3451%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4,705,717 samples, 0.11%)</title><rect x="12.0951%" y="629" width="0.1090%" height="15" fill="rgb(230,69,54)" fg:x="522240815" fg:w="4705717"/><text x="12.3451%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,705,717 samples, 0.11%)</title><rect x="12.0951%" y="613" width="0.1090%" height="15" fill="rgb(214,135,41)" fg:x="522240815" fg:w="4705717"/><text x="12.3451%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (4,705,717 samples, 0.11%)</title><rect x="12.0951%" y="597" width="0.1090%" height="15" fill="rgb(237,67,25)" fg:x="522240815" fg:w="4705717"/><text x="12.3451%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,705,717 samples, 0.11%)</title><rect x="12.0951%" y="581" width="0.1090%" height="15" fill="rgb(222,189,50)" fg:x="522240815" fg:w="4705717"/><text x="12.3451%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,705,717 samples, 0.11%)</title><rect x="12.0951%" y="565" width="0.1090%" height="15" fill="rgb(245,148,34)" fg:x="522240815" fg:w="4705717"/><text x="12.3451%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,705,717 samples, 0.11%)</title><rect x="12.0951%" y="549" width="0.1090%" height="15" fill="rgb(222,29,6)" fg:x="522240815" fg:w="4705717"/><text x="12.3451%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,705,717 samples, 0.11%)</title><rect x="12.0951%" y="533" width="0.1090%" height="15" fill="rgb(221,189,43)" fg:x="522240815" fg:w="4705717"/><text x="12.3451%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,705,717 samples, 0.11%)</title><rect x="12.0951%" y="517" width="0.1090%" height="15" fill="rgb(207,36,27)" fg:x="522240815" fg:w="4705717"/><text x="12.3451%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,705,717 samples, 0.11%)</title><rect x="12.0951%" y="501" width="0.1090%" height="15" fill="rgb(217,90,24)" fg:x="522240815" fg:w="4705717"/><text x="12.3451%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,705,717 samples, 0.11%)</title><rect x="12.0951%" y="485" width="0.1090%" height="15" fill="rgb(224,66,35)" fg:x="522240815" fg:w="4705717"/><text x="12.3451%" y="495.50"></text></g><g><title>alloc::alloc::alloc (4,705,717 samples, 0.11%)</title><rect x="12.0951%" y="469" width="0.1090%" height="15" fill="rgb(221,13,50)" fg:x="522240815" fg:w="4705717"/><text x="12.3451%" y="479.50"></text></g><g><title>malloc (4,705,717 samples, 0.11%)</title><rect x="12.0951%" y="453" width="0.1090%" height="15" fill="rgb(236,68,49)" fg:x="522240815" fg:w="4705717"/><text x="12.3451%" y="463.50"></text></g><g><title>[libc.so.6] (1,870,691 samples, 0.04%)</title><rect x="12.1607%" y="437" width="0.0433%" height="15" fill="rgb(229,146,28)" fg:x="525075841" fg:w="1870691"/><text x="12.4107%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (16,277,606 samples, 0.38%)</title><rect x="11.8469%" y="789" width="0.3770%" height="15" fill="rgb(225,31,38)" fg:x="511525269" fg:w="16277606"/><text x="12.0969%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (16,277,606 samples, 0.38%)</title><rect x="11.8469%" y="773" width="0.3770%" height="15" fill="rgb(250,208,3)" fg:x="511525269" fg:w="16277606"/><text x="12.0969%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (856,343 samples, 0.02%)</title><rect x="12.2041%" y="757" width="0.0198%" height="15" fill="rgb(246,54,23)" fg:x="526946532" fg:w="856343"/><text x="12.4541%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (856,343 samples, 0.02%)</title><rect x="12.2041%" y="741" width="0.0198%" height="15" fill="rgb(243,76,11)" fg:x="526946532" fg:w="856343"/><text x="12.4541%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (856,343 samples, 0.02%)</title><rect x="12.2041%" y="725" width="0.0198%" height="15" fill="rgb(245,21,50)" fg:x="526946532" fg:w="856343"/><text x="12.4541%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (856,343 samples, 0.02%)</title><rect x="12.2041%" y="709" width="0.0198%" height="15" fill="rgb(228,9,43)" fg:x="526946532" fg:w="856343"/><text x="12.4541%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (856,343 samples, 0.02%)</title><rect x="12.2041%" y="693" width="0.0198%" height="15" fill="rgb(208,100,47)" fg:x="526946532" fg:w="856343"/><text x="12.4541%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (856,343 samples, 0.02%)</title><rect x="12.2041%" y="677" width="0.0198%" height="15" fill="rgb(232,26,8)" fg:x="526946532" fg:w="856343"/><text x="12.4541%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (856,343 samples, 0.02%)</title><rect x="12.2041%" y="661" width="0.0198%" height="15" fill="rgb(216,166,38)" fg:x="526946532" fg:w="856343"/><text x="12.4541%" y="671.50"></text></g><g><title>alloc::alloc::Global::grow_impl (856,343 samples, 0.02%)</title><rect x="12.2041%" y="645" width="0.0198%" height="15" fill="rgb(251,202,51)" fg:x="526946532" fg:w="856343"/><text x="12.4541%" y="655.50"></text></g><g><title>alloc::alloc::realloc (856,343 samples, 0.02%)</title><rect x="12.2041%" y="629" width="0.0198%" height="15" fill="rgb(254,216,34)" fg:x="526946532" fg:w="856343"/><text x="12.4541%" y="639.50"></text></g><g><title>realloc (856,343 samples, 0.02%)</title><rect x="12.2041%" y="613" width="0.0198%" height="15" fill="rgb(251,32,27)" fg:x="526946532" fg:w="856343"/><text x="12.4541%" y="623.50"></text></g><g><title>[libc.so.6] (856,343 samples, 0.02%)</title><rect x="12.2041%" y="597" width="0.0198%" height="15" fill="rgb(208,127,28)" fg:x="526946532" fg:w="856343"/><text x="12.4541%" y="607.50"></text></g><g><title>[libc.so.6] (856,343 samples, 0.02%)</title><rect x="12.2041%" y="581" width="0.0198%" height="15" fill="rgb(224,137,22)" fg:x="526946532" fg:w="856343"/><text x="12.4541%" y="591.50"></text></g><g><title>[libc.so.6] (856,343 samples, 0.02%)</title><rect x="12.2041%" y="565" width="0.0198%" height="15" fill="rgb(254,70,32)" fg:x="526946532" fg:w="856343"/><text x="12.4541%" y="575.50"></text></g><g><title>regex_automata::meta::strategy::Core::search_slots_nofail (4,551,255 samples, 0.11%)</title><rect x="12.2239%" y="645" width="0.1054%" height="15" fill="rgb(229,75,37)" fg:x="527802875" fg:w="4551255"/><text x="12.4739%" y="655.50"></text></g><g><title>regex_automata::meta::wrappers::OnePassEngine::search_slots (4,551,255 samples, 0.11%)</title><rect x="12.2239%" y="629" width="0.1054%" height="15" fill="rgb(252,64,23)" fg:x="527802875" fg:w="4551255"/><text x="12.4739%" y="639.50"></text></g><g><title>regex_automata::dfa::onepass::DFA::try_search_slots_imp (4,551,255 samples, 0.11%)</title><rect x="12.2239%" y="613" width="0.1054%" height="15" fill="rgb(232,162,48)" fg:x="527802875" fg:w="4551255"/><text x="12.4739%" y="623.50"></text></g><g><title>regex_automata::dfa::onepass::DFA::search_imp (4,551,255 samples, 0.11%)</title><rect x="12.2239%" y="597" width="0.1054%" height="15" fill="rgb(246,160,12)" fg:x="527802875" fg:w="4551255"/><text x="12.4739%" y="607.50"></text></g><g><title>regex_automata::dfa::onepass::DFA::transition (4,551,255 samples, 0.11%)</title><rect x="12.2239%" y="581" width="0.1054%" height="15" fill="rgb(247,166,0)" fg:x="527802875" fg:w="4551255"/><text x="12.4739%" y="591.50"></text></g><g><title>regex_automata::hybrid::dfa::DFA::try_search_fwd (1,621,056 samples, 0.04%)</title><rect x="12.3293%" y="597" width="0.0375%" height="15" fill="rgb(249,219,21)" fg:x="532354130" fg:w="1621056"/><text x="12.5793%" y="607.50"></text></g><g><title>regex_automata::hybrid::search::find_fwd (1,621,056 samples, 0.04%)</title><rect x="12.3293%" y="581" width="0.0375%" height="15" fill="rgb(205,209,3)" fg:x="532354130" fg:w="1621056"/><text x="12.5793%" y="591.50"></text></g><g><title>regex_automata::hybrid::search::find_fwd_imp (1,621,056 samples, 0.04%)</title><rect x="12.3293%" y="565" width="0.0375%" height="15" fill="rgb(243,44,1)" fg:x="532354130" fg:w="1621056"/><text x="12.5793%" y="575.50"></text></g><g><title>regex_automata::hybrid::dfa::DFA::next_state_untagged_unchecked (1,621,056 samples, 0.04%)</title><rect x="12.3293%" y="549" width="0.0375%" height="15" fill="rgb(206,159,16)" fg:x="532354130" fg:w="1621056"/><text x="12.5793%" y="559.50"></text></g><g><title>&lt;regex::regex::string::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (7,601,592 samples, 0.18%)</title><rect x="12.2239%" y="773" width="0.1761%" height="15" fill="rgb(244,77,30)" fg:x="527802875" fg:w="7601592"/><text x="12.4739%" y="783.50"></text></g><g><title>&lt;regex_automata::meta::regex::CapturesMatches as core::iter::traits::iterator::Iterator&gt;::next (7,601,592 samples, 0.18%)</title><rect x="12.2239%" y="757" width="0.1761%" height="15" fill="rgb(218,69,12)" fg:x="527802875" fg:w="7601592"/><text x="12.4739%" y="767.50"></text></g><g><title>regex_automata::util::iter::Searcher::advance (7,601,592 samples, 0.18%)</title><rect x="12.2239%" y="741" width="0.1761%" height="15" fill="rgb(212,87,7)" fg:x="527802875" fg:w="7601592"/><text x="12.4739%" y="751.50"></text></g><g><title>regex_automata::util::iter::Searcher::try_advance (7,601,592 samples, 0.18%)</title><rect x="12.2239%" y="725" width="0.1761%" height="15" fill="rgb(245,114,25)" fg:x="527802875" fg:w="7601592"/><text x="12.4739%" y="735.50"></text></g><g><title>&lt;regex_automata::meta::regex::CapturesMatches as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (7,601,592 samples, 0.18%)</title><rect x="12.2239%" y="709" width="0.1761%" height="15" fill="rgb(210,61,42)" fg:x="527802875" fg:w="7601592"/><text x="12.4739%" y="719.50"></text></g><g><title>regex_automata::meta::regex::Regex::search_captures_with (7,601,592 samples, 0.18%)</title><rect x="12.2239%" y="693" width="0.1761%" height="15" fill="rgb(211,52,33)" fg:x="527802875" fg:w="7601592"/><text x="12.4739%" y="703.50"></text></g><g><title>regex_automata::meta::regex::Regex::search_slots_with (7,601,592 samples, 0.18%)</title><rect x="12.2239%" y="677" width="0.1761%" height="15" fill="rgb(234,58,33)" fg:x="527802875" fg:w="7601592"/><text x="12.4739%" y="687.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::search_slots (7,601,592 samples, 0.18%)</title><rect x="12.2239%" y="661" width="0.1761%" height="15" fill="rgb(220,115,36)" fg:x="527802875" fg:w="7601592"/><text x="12.4739%" y="671.50"></text></g><g><title>regex_automata::meta::strategy::Core::try_search_mayfail (3,050,337 samples, 0.07%)</title><rect x="12.3293%" y="645" width="0.0706%" height="15" fill="rgb(243,153,54)" fg:x="532354130" fg:w="3050337"/><text x="12.5793%" y="655.50"></text></g><g><title>regex_automata::meta::wrappers::HybridEngine::try_search (3,050,337 samples, 0.07%)</title><rect x="12.3293%" y="629" width="0.0706%" height="15" fill="rgb(251,47,18)" fg:x="532354130" fg:w="3050337"/><text x="12.5793%" y="639.50"></text></g><g><title>regex_automata::hybrid::regex::Regex::try_search (3,050,337 samples, 0.07%)</title><rect x="12.3293%" y="613" width="0.0706%" height="15" fill="rgb(242,102,42)" fg:x="532354130" fg:w="3050337"/><text x="12.5793%" y="623.50"></text></g><g><title>regex_automata::hybrid::dfa::DFA::try_search_rev (1,429,281 samples, 0.03%)</title><rect x="12.3668%" y="597" width="0.0331%" height="15" fill="rgb(234,31,38)" fg:x="533975186" fg:w="1429281"/><text x="12.6168%" y="607.50"></text></g><g><title>regex_automata::hybrid::search::find_rev (1,429,281 samples, 0.03%)</title><rect x="12.3668%" y="581" width="0.0331%" height="15" fill="rgb(221,117,51)" fg:x="533975186" fg:w="1429281"/><text x="12.6168%" y="591.50"></text></g><g><title>regex_automata::hybrid::search::find_rev_imp (1,429,281 samples, 0.03%)</title><rect x="12.3668%" y="565" width="0.0331%" height="15" fill="rgb(212,20,18)" fg:x="533975186" fg:w="1429281"/><text x="12.6168%" y="575.50"></text></g><g><title>regex_automata::hybrid::dfa::DFA::next_state_untagged_unchecked (1,429,281 samples, 0.03%)</title><rect x="12.3668%" y="549" width="0.0331%" height="15" fill="rgb(245,133,36)" fg:x="533975186" fg:w="1429281"/><text x="12.6168%" y="559.50"></text></g><g><title>emi_web::parse_frame::Buffer::parse_styles (27,712,468 samples, 0.64%)</title><rect x="11.8109%" y="869" width="0.6418%" height="15" fill="rgb(212,6,19)" fg:x="509971045" fg:w="27712468"/><text x="12.0609%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (26,158,244 samples, 0.61%)</title><rect x="11.8469%" y="853" width="0.6058%" height="15" fill="rgb(218,1,36)" fg:x="511525269" fg:w="26158244"/><text x="12.0969%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (26,158,244 samples, 0.61%)</title><rect x="11.8469%" y="837" width="0.6058%" height="15" fill="rgb(246,84,54)" fg:x="511525269" fg:w="26158244"/><text x="12.0969%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (26,158,244 samples, 0.61%)</title><rect x="11.8469%" y="821" width="0.6058%" height="15" fill="rgb(242,110,6)" fg:x="511525269" fg:w="26158244"/><text x="12.0969%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (26,158,244 samples, 0.61%)</title><rect x="11.8469%" y="805" width="0.6058%" height="15" fill="rgb(214,47,5)" fg:x="511525269" fg:w="26158244"/><text x="12.0969%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,880,638 samples, 0.23%)</title><rect x="12.2239%" y="789" width="0.2288%" height="15" fill="rgb(218,159,25)" fg:x="527802875" fg:w="9880638"/><text x="12.4739%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,279,046 samples, 0.05%)</title><rect x="12.3999%" y="773" width="0.0528%" height="15" fill="rgb(215,211,28)" fg:x="535404467" fg:w="2279046"/><text x="12.6499%" y="783.50"></text></g><g><title>regex_automata::meta::regex::Regex::create_captures (5,360,920 samples, 0.12%)</title><rect x="12.4527%" y="837" width="0.1242%" height="15" fill="rgb(238,59,32)" fg:x="537683513" fg:w="5360920"/><text x="12.7027%" y="847.50"></text></g><g><title>regex_automata::meta::regex::Regex::group_info (5,360,920 samples, 0.12%)</title><rect x="12.4527%" y="821" width="0.1242%" height="15" fill="rgb(226,82,3)" fg:x="537683513" fg:w="5360920"/><text x="12.7027%" y="831.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::group_info (5,360,920 samples, 0.12%)</title><rect x="12.4527%" y="805" width="0.1242%" height="15" fill="rgb(240,164,32)" fg:x="537683513" fg:w="5360920"/><text x="12.7027%" y="815.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::NFA::group_info (5,360,920 samples, 0.12%)</title><rect x="12.4527%" y="789" width="0.1242%" height="15" fill="rgb(232,46,7)" fg:x="537683513" fg:w="5360920"/><text x="12.7027%" y="799.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::group_info (5,360,920 samples, 0.12%)</title><rect x="12.4527%" y="773" width="0.1242%" height="15" fill="rgb(229,129,53)" fg:x="537683513" fg:w="5360920"/><text x="12.7027%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1,753,633 samples, 0.04%)</title><rect x="12.6668%" y="677" width="0.0406%" height="15" fill="rgb(234,188,29)" fg:x="546925195" fg:w="1753633"/><text x="12.9168%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (10,129,743 samples, 0.23%)</title><rect x="12.6548%" y="693" width="0.2346%" height="15" fill="rgb(246,141,4)" fg:x="546409189" fg:w="10129743"/><text x="12.9048%" y="703.50"></text></g><g><title>core::ptr::read (7,860,104 samples, 0.18%)</title><rect x="12.7074%" y="677" width="0.1820%" height="15" fill="rgb(229,23,39)" fg:x="548678828" fg:w="7860104"/><text x="12.9574%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3,991,815 samples, 0.09%)</title><rect x="13.8296%" y="661" width="0.0925%" height="15" fill="rgb(206,12,3)" fg:x="597133638" fg:w="3991815"/><text x="14.0796%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17,501,578 samples, 0.41%)</title><rect x="13.7647%" y="677" width="0.4053%" height="15" fill="rgb(252,226,20)" fg:x="594330342" fg:w="17501578"/><text x="14.0147%" y="687.50"></text></g><g><title>core::ptr::write (10,706,467 samples, 0.25%)</title><rect x="13.9220%" y="661" width="0.2480%" height="15" fill="rgb(216,123,35)" fg:x="601125453" fg:w="10706467"/><text x="14.1720%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1,089,339 samples, 0.03%)</title><rect x="15.6573%" y="661" width="0.0252%" height="15" fill="rgb(212,68,40)" fg:x="676052694" fg:w="1089339"/><text x="15.9073%" y="671.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1,089,339 samples, 0.03%)</title><rect x="15.6573%" y="645" width="0.0252%" height="15" fill="rgb(254,125,32)" fg:x="676052694" fg:w="1089339"/><text x="15.9073%" y="655.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,089,339 samples, 0.03%)</title><rect x="15.6573%" y="629" width="0.0252%" height="15" fill="rgb(253,97,22)" fg:x="676052694" fg:w="1089339"/><text x="15.9073%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::Visited::insert (70,234,806 samples, 1.63%)</title><rect x="14.1700%" y="677" width="1.6266%" height="15" fill="rgb(241,101,14)" fg:x="611831920" fg:w="70234806"/><text x="14.4200%" y="687.50"></text></g><g><title>regex_automata::util::primitives::StateID::as_usize (4,924,693 samples, 0.11%)</title><rect x="15.6826%" y="661" width="0.1141%" height="15" fill="rgb(238,103,29)" fg:x="677142033" fg:w="4924693"/><text x="15.9326%" y="671.50"></text></g><g><title>regex_automata::util::primitives::SmallIndex::as_usize (4,924,693 samples, 0.11%)</title><rect x="15.6826%" y="645" width="0.1141%" height="15" fill="rgb(233,195,47)" fg:x="677142033" fg:w="4924693"/><text x="15.9326%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::SparseTransitions::matches (7,395,912 samples, 0.17%)</title><rect x="15.8047%" y="677" width="0.1713%" height="15" fill="rgb(246,218,30)" fg:x="682414254" fg:w="7395912"/><text x="16.0547%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (7,395,912 samples, 0.17%)</title><rect x="15.8047%" y="661" width="0.1713%" height="15" fill="rgb(219,145,47)" fg:x="682414254" fg:w="7395912"/><text x="16.0547%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::SparseTransitions::matches::_{{closure}} (7,395,912 samples, 0.17%)</title><rect x="15.8047%" y="645" width="0.1713%" height="15" fill="rgb(243,12,26)" fg:x="682414254" fg:w="7395912"/><text x="16.0547%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::SparseTransitions::matches_byte (5,554,181 samples, 0.13%)</title><rect x="15.8473%" y="629" width="0.1286%" height="15" fill="rgb(214,87,16)" fg:x="684255985" fg:w="5554181"/><text x="16.0973%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Transition::matches_byte (1,851,043 samples, 0.04%)</title><rect x="15.9331%" y="613" width="0.0429%" height="15" fill="rgb(208,99,42)" fg:x="687959123" fg:w="1851043"/><text x="16.1831%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::step (135,843,812 samples, 3.15%)</title><rect x="12.8894%" y="693" width="3.1461%" height="15" fill="rgb(253,99,2)" fg:x="556538932" fg:w="135843812"/><text x="13.1394%" y="703.50">reg..</text></g><g><title>regex_automata::nfa::thompson::nfa::Transition::matches (2,572,578 samples, 0.06%)</title><rect x="15.9760%" y="677" width="0.0596%" height="15" fill="rgb(220,168,23)" fg:x="689810166" fg:w="2572578"/><text x="16.2260%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (2,572,578 samples, 0.06%)</title><rect x="15.9760%" y="661" width="0.0596%" height="15" fill="rgb(242,38,24)" fg:x="689810166" fg:w="2572578"/><text x="16.2260%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::backtrack (152,578,211 samples, 3.53%)</title><rect x="12.5769%" y="709" width="3.5337%" height="15" fill="rgb(225,182,9)" fg:x="543044433" fg:w="152578211"/><text x="12.8269%" y="719.50">reg..</text></g><g><title>regex_automata::util::primitives::&lt;impl core::ops::index::IndexMut&lt;regex_automata::util::primitives::SmallIndex&gt; for [T]&gt;::index_mut (3,239,900 samples, 0.08%)</title><rect x="16.0355%" y="693" width="0.0750%" height="15" fill="rgb(243,178,37)" fg:x="692382744" fg:w="3239900"/><text x="16.2855%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::Cache::setup_search (1,841,093 samples, 0.04%)</title><rect x="16.1106%" y="709" width="0.0426%" height="15" fill="rgb(232,139,19)" fg:x="695622644" fg:w="1841093"/><text x="16.3606%" y="719.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::Visited::setup_search (1,841,093 samples, 0.04%)</title><rect x="16.1106%" y="693" width="0.0426%" height="15" fill="rgb(225,201,24)" fg:x="695622644" fg:w="1841093"/><text x="16.3606%" y="703.50"></text></g><g><title>[libc.so.6] (1,841,093 samples, 0.04%)</title><rect x="16.1106%" y="677" width="0.0426%" height="15" fill="rgb(221,47,46)" fg:x="695622644" fg:w="1841093"/><text x="16.3606%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::NFA::start_pattern (2,848,803 samples, 0.07%)</title><rect x="16.1532%" y="709" width="0.0660%" height="15" fill="rgb(249,23,13)" fg:x="697463737" fg:w="2848803"/><text x="16.4032%" y="719.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (2,848,803 samples, 0.07%)</title><rect x="16.1532%" y="693" width="0.0660%" height="15" fill="rgb(219,9,5)" fg:x="697463737" fg:w="2848803"/><text x="16.4032%" y="703.50"></text></g><g><title>regex_automata::meta::strategy::Core::search_slots_nofail (160,141,363 samples, 3.71%)</title><rect x="12.5769%" y="789" width="3.7089%" height="15" fill="rgb(254,171,16)" fg:x="543044433" fg:w="160141363"/><text x="12.8269%" y="799.50">rege..</text></g><g><title>regex_automata::meta::wrappers::BoundedBacktrackerEngine::search_slots (160,141,363 samples, 3.71%)</title><rect x="12.5769%" y="773" width="3.7089%" height="15" fill="rgb(230,171,20)" fg:x="543044433" fg:w="160141363"/><text x="12.8269%" y="783.50">rege..</text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::try_search_slots (160,141,363 samples, 3.71%)</title><rect x="12.5769%" y="757" width="3.7089%" height="15" fill="rgb(210,71,41)" fg:x="543044433" fg:w="160141363"/><text x="12.8269%" y="767.50">rege..</text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::try_search_slots_imp (160,141,363 samples, 3.71%)</title><rect x="12.5769%" y="741" width="3.7089%" height="15" fill="rgb(206,173,20)" fg:x="543044433" fg:w="160141363"/><text x="12.8269%" y="751.50">rege..</text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::search_imp (160,141,363 samples, 3.71%)</title><rect x="12.5769%" y="725" width="3.7089%" height="15" fill="rgb(233,88,34)" fg:x="543044433" fg:w="160141363"/><text x="12.8269%" y="735.50">rege..</text></g><g><title>regex_automata::util::search::Input::get_anchored (2,873,256 samples, 0.07%)</title><rect x="16.2192%" y="709" width="0.0665%" height="15" fill="rgb(223,209,46)" fg:x="700312540" fg:w="2873256"/><text x="16.4692%" y="719.50"></text></g><g><title>regex_automata::hybrid::dfa::Cache::search_update (1,506,984 samples, 0.03%)</title><rect x="16.2857%" y="693" width="0.0349%" height="15" fill="rgb(250,43,18)" fg:x="703185796" fg:w="1506984"/><text x="16.5357%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1,506,984 samples, 0.03%)</title><rect x="16.2857%" y="677" width="0.0349%" height="15" fill="rgb(208,13,10)" fg:x="703185796" fg:w="1506984"/><text x="16.5357%" y="687.50"></text></g><g><title>regex_automata::hybrid::dfa::DFA::next_state (4,337,104 samples, 0.10%)</title><rect x="16.3206%" y="693" width="0.1004%" height="15" fill="rgb(212,200,36)" fg:x="704692780" fg:w="4337104"/><text x="16.5706%" y="703.50"></text></g><g><title>regex_automata::hybrid::dfa::DFA::try_search_fwd (27,372,204 samples, 0.63%)</title><rect x="16.2857%" y="741" width="0.6339%" height="15" fill="rgb(225,90,30)" fg:x="703185796" fg:w="27372204"/><text x="16.5357%" y="751.50"></text></g><g><title>regex_automata::hybrid::search::find_fwd (27,372,204 samples, 0.63%)</title><rect x="16.2857%" y="725" width="0.6339%" height="15" fill="rgb(236,182,39)" fg:x="703185796" fg:w="27372204"/><text x="16.5357%" y="735.50"></text></g><g><title>regex_automata::hybrid::search::find_fwd_imp (27,372,204 samples, 0.63%)</title><rect x="16.2857%" y="709" width="0.6339%" height="15" fill="rgb(212,144,35)" fg:x="703185796" fg:w="27372204"/><text x="16.5357%" y="719.50"></text></g><g><title>regex_automata::hybrid::dfa::DFA::next_state_untagged_unchecked (21,528,116 samples, 0.50%)</title><rect x="16.4211%" y="693" width="0.4986%" height="15" fill="rgb(228,63,44)" fg:x="709029884" fg:w="21528116"/><text x="16.6711%" y="703.50"></text></g><g><title>regex_automata::util::alphabet::ByteClasses::get (1,429,281 samples, 0.03%)</title><rect x="16.8866%" y="677" width="0.0331%" height="15" fill="rgb(228,109,6)" fg:x="729128719" fg:w="1429281"/><text x="17.1366%" y="687.50"></text></g><g><title>regex_automata::hybrid::dfa::DFA::match_pattern (1,953,697 samples, 0.05%)</title><rect x="16.9197%" y="693" width="0.0452%" height="15" fill="rgb(238,117,24)" fg:x="730558000" fg:w="1953697"/><text x="17.1697%" y="703.50"></text></g><g><title>regex_automata::meta::strategy::Core::try_search_mayfail (60,619,674 samples, 1.40%)</title><rect x="16.2857%" y="789" width="1.4039%" height="15" fill="rgb(242,26,26)" fg:x="703185796" fg:w="60619674"/><text x="16.5357%" y="799.50"></text></g><g><title>regex_automata::meta::wrappers::HybridEngine::try_search (60,619,674 samples, 1.40%)</title><rect x="16.2857%" y="773" width="1.4039%" height="15" fill="rgb(221,92,48)" fg:x="703185796" fg:w="60619674"/><text x="16.5357%" y="783.50"></text></g><g><title>regex_automata::hybrid::regex::Regex::try_search (60,619,674 samples, 1.40%)</title><rect x="16.2857%" y="757" width="1.4039%" height="15" fill="rgb(209,209,32)" fg:x="703185796" fg:w="60619674"/><text x="16.5357%" y="767.50"></text></g><g><title>regex_automata::hybrid::dfa::DFA::try_search_rev (33,247,470 samples, 0.77%)</title><rect x="16.9197%" y="741" width="0.7700%" height="15" fill="rgb(221,70,22)" fg:x="730558000" fg:w="33247470"/><text x="17.1697%" y="751.50"></text></g><g><title>regex_automata::hybrid::search::find_rev (33,247,470 samples, 0.77%)</title><rect x="16.9197%" y="725" width="0.7700%" height="15" fill="rgb(248,145,5)" fg:x="730558000" fg:w="33247470"/><text x="17.1697%" y="735.50"></text></g><g><title>regex_automata::hybrid::search::find_rev_imp (33,247,470 samples, 0.77%)</title><rect x="16.9197%" y="709" width="0.7700%" height="15" fill="rgb(226,116,26)" fg:x="730558000" fg:w="33247470"/><text x="17.1697%" y="719.50"></text></g><g><title>regex_automata::hybrid::dfa::DFA::next_state_untagged_unchecked (31,293,773 samples, 0.72%)</title><rect x="16.9649%" y="693" width="0.7248%" height="15" fill="rgb(244,5,17)" fg:x="732511697" fg:w="31293773"/><text x="17.2149%" y="703.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::search_slots (223,333,615 samples, 5.17%)</title><rect x="12.5769%" y="805" width="5.1724%" height="15" fill="rgb(252,159,33)" fg:x="543044433" fg:w="223333615"/><text x="12.8269%" y="815.50">&lt;regex..</text></g><g><title>regex_automata::util::search::Input::span (2,572,578 samples, 0.06%)</title><rect x="17.6897%" y="789" width="0.0596%" height="15" fill="rgb(206,71,0)" fg:x="763805470" fg:w="2572578"/><text x="17.9397%" y="799.50"></text></g><g><title>regex_automata::util::search::Input::set_span (2,572,578 samples, 0.06%)</title><rect x="17.6897%" y="773" width="0.0596%" height="15" fill="rgb(233,118,54)" fg:x="763805470" fg:w="2572578"/><text x="17.9397%" y="783.50"></text></g><g><title>emi_web::parse_frame::Buffer::from_string (307,375,334 samples, 7.12%)</title><rect x="10.6983%" y="885" width="7.1188%" height="15" fill="rgb(234,83,48)" fg:x="461933146" fg:w="307375334"/><text x="10.9483%" y="895.50">emi_web::p..</text></g><g><title>regex::regex::string::Regex::captures (231,624,967 samples, 5.36%)</title><rect x="12.4527%" y="869" width="5.3644%" height="15" fill="rgb(228,3,54)" fg:x="537683513" fg:w="231624967"/><text x="12.7027%" y="879.50">regex::..</text></g><g><title>regex::regex::string::Regex::captures_at (231,624,967 samples, 5.36%)</title><rect x="12.4527%" y="853" width="5.3644%" height="15" fill="rgb(226,155,13)" fg:x="537683513" fg:w="231624967"/><text x="12.7027%" y="863.50">regex::..</text></g><g><title>regex_automata::meta::regex::Regex::search_captures (226,264,047 samples, 5.24%)</title><rect x="12.5769%" y="837" width="5.2403%" height="15" fill="rgb(241,28,37)" fg:x="543044433" fg:w="226264047"/><text x="12.8269%" y="847.50">regex_..</text></g><g><title>regex_automata::meta::regex::Regex::search_slots (226,264,047 samples, 5.24%)</title><rect x="12.5769%" y="821" width="5.2403%" height="15" fill="rgb(233,93,10)" fg:x="543044433" fg:w="226264047"/><text x="12.8269%" y="831.50">regex_..</text></g><g><title>regex_automata::meta::regex::RegexInfo::is_impossible (2,930,432 samples, 0.07%)</title><rect x="17.7493%" y="805" width="0.0679%" height="15" fill="rgb(225,113,19)" fg:x="766378048" fg:w="2930432"/><text x="17.9993%" y="815.50"></text></g><g><title>regex_automata::meta::regex::RegexInfo::is_anchored_start (1,841,093 samples, 0.04%)</title><rect x="17.7745%" y="789" width="0.0426%" height="15" fill="rgb(241,2,18)" fg:x="767467387" fg:w="1841093"/><text x="18.0245%" y="799.50"></text></g><g><title>regex_automata::meta::regex::RegexInfo::is_always_anchored_start (1,841,093 samples, 0.04%)</title><rect x="17.7745%" y="773" width="0.0426%" height="15" fill="rgb(228,207,21)" fg:x="767467387" fg:w="1841093"/><text x="18.0245%" y="783.50"></text></g><g><title>regex_syntax::hir::LookSet::contains (1,841,093 samples, 0.04%)</title><rect x="17.7745%" y="757" width="0.0426%" height="15" fill="rgb(213,211,35)" fg:x="767467387" fg:w="1841093"/><text x="18.0245%" y="767.50"></text></g><g><title>emi_web::parse_frame::_::&lt;impl serde::ser::Serialize for emi_web::parse_frame::Rect&gt;::serialize (1,447,036 samples, 0.03%)</title><rect x="17.8171%" y="805" width="0.0335%" height="15" fill="rgb(209,83,10)" fg:x="769308480" fg:w="1447036"/><text x="18.0671%" y="815.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (1,447,036 samples, 0.03%)</title><rect x="17.8171%" y="789" width="0.0335%" height="15" fill="rgb(209,164,1)" fg:x="769308480" fg:w="1447036"/><text x="18.0671%" y="799.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1,447,036 samples, 0.03%)</title><rect x="17.8171%" y="773" width="0.0335%" height="15" fill="rgb(213,184,43)" fg:x="769308480" fg:w="1447036"/><text x="18.0671%" y="783.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1,447,036 samples, 0.03%)</title><rect x="17.8171%" y="757" width="0.0335%" height="15" fill="rgb(231,61,34)" fg:x="769308480" fg:w="1447036"/><text x="18.0671%" y="767.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1,447,036 samples, 0.03%)</title><rect x="17.8171%" y="741" width="0.0335%" height="15" fill="rgb(235,75,3)" fg:x="769308480" fg:w="1447036"/><text x="18.0671%" y="751.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1,447,036 samples, 0.03%)</title><rect x="17.8171%" y="725" width="0.0335%" height="15" fill="rgb(220,106,47)" fg:x="769308480" fg:w="1447036"/><text x="18.0671%" y="735.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1,447,036 samples, 0.03%)</title><rect x="17.8171%" y="709" width="0.0335%" height="15" fill="rgb(210,196,33)" fg:x="769308480" fg:w="1447036"/><text x="18.0671%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (1,447,036 samples, 0.03%)</title><rect x="17.8171%" y="693" width="0.0335%" height="15" fill="rgb(229,154,42)" fg:x="769308480" fg:w="1447036"/><text x="18.0671%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (1,447,036 samples, 0.03%)</title><rect x="17.8171%" y="677" width="0.0335%" height="15" fill="rgb(228,114,26)" fg:x="769308480" fg:w="1447036"/><text x="18.0671%" y="687.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1,447,036 samples, 0.03%)</title><rect x="17.8507%" y="789" width="0.0335%" height="15" fill="rgb(208,144,1)" fg:x="770755516" fg:w="1447036"/><text x="18.1007%" y="799.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1,447,036 samples, 0.03%)</title><rect x="17.8507%" y="773" width="0.0335%" height="15" fill="rgb(239,112,37)" fg:x="770755516" fg:w="1447036"/><text x="18.1007%" y="783.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1,447,036 samples, 0.03%)</title><rect x="17.8507%" y="757" width="0.0335%" height="15" fill="rgb(210,96,50)" fg:x="770755516" fg:w="1447036"/><text x="18.1007%" y="767.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1,447,036 samples, 0.03%)</title><rect x="17.8507%" y="741" width="0.0335%" height="15" fill="rgb(222,178,2)" fg:x="770755516" fg:w="1447036"/><text x="18.1007%" y="751.50"></text></g><g><title>serde_json::ser::format_escaped_str (1,447,036 samples, 0.03%)</title><rect x="17.8507%" y="725" width="0.0335%" height="15" fill="rgb(226,74,18)" fg:x="770755516" fg:w="1447036"/><text x="18.1007%" y="735.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (1,447,036 samples, 0.03%)</title><rect x="17.8507%" y="709" width="0.0335%" height="15" fill="rgb(225,67,54)" fg:x="770755516" fg:w="1447036"/><text x="18.1007%" y="719.50"></text></g><g><title>serde_json::ser::to_string (20,767,346 samples, 0.48%)</title><rect x="17.8171%" y="885" width="0.4810%" height="15" fill="rgb(251,92,32)" fg:x="769308480" fg:w="20767346"/><text x="18.0671%" y="895.50"></text></g><g><title>serde_json::ser::to_vec (20,767,346 samples, 0.48%)</title><rect x="17.8171%" y="869" width="0.4810%" height="15" fill="rgb(228,149,22)" fg:x="769308480" fg:w="20767346"/><text x="18.0671%" y="879.50"></text></g><g><title>serde_json::ser::to_writer (20,767,346 samples, 0.48%)</title><rect x="17.8171%" y="853" width="0.4810%" height="15" fill="rgb(243,54,13)" fg:x="769308480" fg:w="20767346"/><text x="18.0671%" y="863.50"></text></g><g><title>emi_web::parse_frame::_::&lt;impl serde::ser::Serialize for emi_web::parse_frame::Buffer&gt;::serialize (20,767,346 samples, 0.48%)</title><rect x="17.8171%" y="837" width="0.4810%" height="15" fill="rgb(243,180,28)" fg:x="769308480" fg:w="20767346"/><text x="18.0671%" y="847.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (20,767,346 samples, 0.48%)</title><rect x="17.8171%" y="821" width="0.4810%" height="15" fill="rgb(208,167,24)" fg:x="769308480" fg:w="20767346"/><text x="18.0671%" y="831.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (19,320,310 samples, 0.45%)</title><rect x="17.8507%" y="805" width="0.4475%" height="15" fill="rgb(245,73,45)" fg:x="770755516" fg:w="19320310"/><text x="18.1007%" y="815.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (17,873,274 samples, 0.41%)</title><rect x="17.8842%" y="789" width="0.4139%" height="15" fill="rgb(237,203,48)" fg:x="772202552" fg:w="17873274"/><text x="18.1342%" y="799.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (17,873,274 samples, 0.41%)</title><rect x="17.8842%" y="773" width="0.4139%" height="15" fill="rgb(211,197,16)" fg:x="772202552" fg:w="17873274"/><text x="18.1342%" y="783.50"></text></g><g><title>serde::ser::Serializer::collect_seq (17,873,274 samples, 0.41%)</title><rect x="17.8842%" y="757" width="0.4139%" height="15" fill="rgb(243,99,51)" fg:x="772202552" fg:w="17873274"/><text x="18.1342%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (17,873,274 samples, 0.41%)</title><rect x="17.8842%" y="741" width="0.4139%" height="15" fill="rgb(215,123,29)" fg:x="772202552" fg:w="17873274"/><text x="18.1342%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (17,873,274 samples, 0.41%)</title><rect x="17.8842%" y="725" width="0.4139%" height="15" fill="rgb(239,186,37)" fg:x="772202552" fg:w="17873274"/><text x="18.1342%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::_{{closure}} (17,873,274 samples, 0.41%)</title><rect x="17.8842%" y="709" width="0.4139%" height="15" fill="rgb(252,136,39)" fg:x="772202552" fg:w="17873274"/><text x="18.1342%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq::_{{closure}} (17,873,274 samples, 0.41%)</title><rect x="17.8842%" y="693" width="0.4139%" height="15" fill="rgb(223,213,32)" fg:x="772202552" fg:w="17873274"/><text x="18.1342%" y="703.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (17,873,274 samples, 0.41%)</title><rect x="17.8842%" y="677" width="0.4139%" height="15" fill="rgb(233,115,5)" fg:x="772202552" fg:w="17873274"/><text x="18.1342%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (17,873,274 samples, 0.41%)</title><rect x="17.8842%" y="661" width="0.4139%" height="15" fill="rgb(207,226,44)" fg:x="772202552" fg:w="17873274"/><text x="18.1342%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (17,873,274 samples, 0.41%)</title><rect x="17.8842%" y="645" width="0.4139%" height="15" fill="rgb(208,126,0)" fg:x="772202552" fg:w="17873274"/><text x="18.1342%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (17,873,274 samples, 0.41%)</title><rect x="17.8842%" y="629" width="0.4139%" height="15" fill="rgb(244,66,21)" fg:x="772202552" fg:w="17873274"/><text x="18.1342%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (17,873,274 samples, 0.41%)</title><rect x="17.8842%" y="613" width="0.4139%" height="15" fill="rgb(222,97,12)" fg:x="772202552" fg:w="17873274"/><text x="18.1342%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (17,873,274 samples, 0.41%)</title><rect x="17.8842%" y="597" width="0.4139%" height="15" fill="rgb(219,213,19)" fg:x="772202552" fg:w="17873274"/><text x="18.1342%" y="607.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (1,239,890 samples, 0.03%)</title><rect x="18.2694%" y="581" width="0.0287%" height="15" fill="rgb(252,169,30)" fg:x="788835936" fg:w="1239890"/><text x="18.5194%" y="591.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1,239,890 samples, 0.03%)</title><rect x="18.2694%" y="565" width="0.0287%" height="15" fill="rgb(206,32,51)" fg:x="788835936" fg:w="1239890"/><text x="18.5194%" y="575.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1,239,890 samples, 0.03%)</title><rect x="18.2694%" y="549" width="0.0287%" height="15" fill="rgb(250,172,42)" fg:x="788835936" fg:w="1239890"/><text x="18.5194%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,239,890 samples, 0.03%)</title><rect x="18.2694%" y="533" width="0.0287%" height="15" fill="rgb(209,34,43)" fg:x="788835936" fg:w="1239890"/><text x="18.5194%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,239,890 samples, 0.03%)</title><rect x="18.2694%" y="517" width="0.0287%" height="15" fill="rgb(223,11,35)" fg:x="788835936" fg:w="1239890"/><text x="18.5194%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,239,890 samples, 0.03%)</title><rect x="18.2694%" y="501" width="0.0287%" height="15" fill="rgb(251,219,26)" fg:x="788835936" fg:w="1239890"/><text x="18.5194%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,239,890 samples, 0.03%)</title><rect x="18.2694%" y="485" width="0.0287%" height="15" fill="rgb(231,119,3)" fg:x="788835936" fg:w="1239890"/><text x="18.5194%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,239,890 samples, 0.03%)</title><rect x="18.2694%" y="469" width="0.0287%" height="15" fill="rgb(216,97,11)" fg:x="788835936" fg:w="1239890"/><text x="18.5194%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,239,890 samples, 0.03%)</title><rect x="18.2694%" y="453" width="0.0287%" height="15" fill="rgb(223,59,9)" fg:x="788835936" fg:w="1239890"/><text x="18.5194%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::needs_to_grow (1,239,890 samples, 0.03%)</title><rect x="18.2694%" y="437" width="0.0287%" height="15" fill="rgb(233,93,31)" fg:x="788835936" fg:w="1239890"/><text x="18.5194%" y="447.50"></text></g><g><title>alloc::string::String::try_reserve_exact (10,014,587 samples, 0.23%)</title><rect x="18.2981%" y="853" width="0.2319%" height="15" fill="rgb(239,81,33)" fg:x="790075826" fg:w="10014587"/><text x="18.5481%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (10,014,587 samples, 0.23%)</title><rect x="18.2981%" y="837" width="0.2319%" height="15" fill="rgb(213,120,34)" fg:x="790075826" fg:w="10014587"/><text x="18.5481%" y="847.50"></text></g><g><title>malloc (10,014,587 samples, 0.23%)</title><rect x="18.2981%" y="821" width="0.2319%" height="15" fill="rgb(243,49,53)" fg:x="790075826" fg:w="10014587"/><text x="18.5481%" y="831.50"></text></g><g><title>[libc.so.6] (9,314,277 samples, 0.22%)</title><rect x="18.3143%" y="805" width="0.2157%" height="15" fill="rgb(247,216,33)" fg:x="790776136" fg:w="9314277"/><text x="18.5643%" y="815.50"></text></g><g><title>[libc.so.6] (6,662,854 samples, 0.15%)</title><rect x="18.3757%" y="789" width="0.1543%" height="15" fill="rgb(226,26,14)" fg:x="793427559" fg:w="6662854"/><text x="18.6257%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::File&gt; (2,349,375 samples, 0.05%)</title><rect x="18.5301%" y="853" width="0.0544%" height="15" fill="rgb(215,49,53)" fg:x="800090413" fg:w="2349375"/><text x="18.7801%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::pal::unix::fs::File&gt; (2,349,375 samples, 0.05%)</title><rect x="18.5301%" y="837" width="0.0544%" height="15" fill="rgb(245,162,40)" fg:x="800090413" fg:w="2349375"/><text x="18.7801%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::pal::unix::fd::FileDesc&gt; (2,349,375 samples, 0.05%)</title><rect x="18.5301%" y="821" width="0.0544%" height="15" fill="rgb(229,68,17)" fg:x="800090413" fg:w="2349375"/><text x="18.7801%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (2,349,375 samples, 0.05%)</title><rect x="18.5301%" y="805" width="0.0544%" height="15" fill="rgb(213,182,10)" fg:x="800090413" fg:w="2349375"/><text x="18.7801%" y="815.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (2,349,375 samples, 0.05%)</title><rect x="18.5301%" y="789" width="0.0544%" height="15" fill="rgb(245,125,30)" fg:x="800090413" fg:w="2349375"/><text x="18.7801%" y="799.50"></text></g><g><title>core::str::converts::from_utf8 (7,274,974 samples, 0.17%)</title><rect x="18.5845%" y="853" width="0.1685%" height="15" fill="rgb(232,202,2)" fg:x="802439788" fg:w="7274974"/><text x="18.8345%" y="863.50"></text></g><g><title>core::str::validations::run_utf8_validation (4,018,970 samples, 0.09%)</title><rect x="18.6599%" y="837" width="0.0931%" height="15" fill="rgb(237,140,51)" fg:x="805695792" fg:w="4018970"/><text x="18.9099%" y="847.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (932,605 samples, 0.02%)</title><rect x="18.7530%" y="789" width="0.0216%" height="15" fill="rgb(236,157,25)" fg:x="809714762" fg:w="932605"/><text x="19.0030%" y="799.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read_buf (932,605 samples, 0.02%)</title><rect x="18.7530%" y="773" width="0.0216%" height="15" fill="rgb(219,209,0)" fg:x="809714762" fg:w="932605"/><text x="19.0030%" y="783.50"></text></g><g><title>std::sys::pal::unix::fs::File::read_buf (932,605 samples, 0.02%)</title><rect x="18.7530%" y="757" width="0.0216%" height="15" fill="rgb(240,116,54)" fg:x="809714762" fg:w="932605"/><text x="19.0030%" y="767.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::read_buf (932,605 samples, 0.02%)</title><rect x="18.7530%" y="741" width="0.0216%" height="15" fill="rgb(216,10,36)" fg:x="809714762" fg:w="932605"/><text x="19.0030%" y="751.50"></text></g><g><title>read (932,605 samples, 0.02%)</title><rect x="18.7530%" y="725" width="0.0216%" height="15" fill="rgb(222,72,44)" fg:x="809714762" fg:w="932605"/><text x="19.0030%" y="735.50"></text></g><g><title>[libc.so.6] (932,605 samples, 0.02%)</title><rect x="18.7530%" y="709" width="0.0216%" height="15" fill="rgb(232,159,9)" fg:x="809714762" fg:w="932605"/><text x="19.0030%" y="719.50"></text></g><g><title>emi_web::read_buffer_with_retry_to_json (356,506,381 samples, 8.26%)</title><rect x="10.5632%" y="901" width="8.2567%" height="15" fill="rgb(210,39,32)" fg:x="456095653" fg:w="356506381"/><text x="10.8132%" y="911.50">emi_web::re..</text></g><g><title>std::fs::read_to_string (22,526,208 samples, 0.52%)</title><rect x="18.2981%" y="885" width="0.5217%" height="15" fill="rgb(216,194,45)" fg:x="790075826" fg:w="22526208"/><text x="18.5481%" y="895.50"></text></g><g><title>std::fs::read_to_string::inner (22,526,208 samples, 0.52%)</title><rect x="18.2981%" y="869" width="0.5217%" height="15" fill="rgb(218,18,35)" fg:x="790075826" fg:w="22526208"/><text x="18.5481%" y="879.50"></text></g><g><title>std::io::default_read_to_string (2,887,272 samples, 0.07%)</title><rect x="18.7530%" y="853" width="0.0669%" height="15" fill="rgb(207,83,51)" fg:x="809714762" fg:w="2887272"/><text x="19.0030%" y="863.50"></text></g><g><title>std::io::append_to_string (2,887,272 samples, 0.07%)</title><rect x="18.7530%" y="837" width="0.0669%" height="15" fill="rgb(225,63,43)" fg:x="809714762" fg:w="2887272"/><text x="19.0030%" y="847.50"></text></g><g><title>std::io::default_read_to_string::_{{closure}} (2,887,272 samples, 0.07%)</title><rect x="18.7530%" y="821" width="0.0669%" height="15" fill="rgb(207,57,36)" fg:x="809714762" fg:w="2887272"/><text x="19.0030%" y="831.50"></text></g><g><title>std::io::default_read_to_end (2,887,272 samples, 0.07%)</title><rect x="18.7530%" y="805" width="0.0669%" height="15" fill="rgb(216,99,33)" fg:x="809714762" fg:w="2887272"/><text x="19.0030%" y="815.50"></text></g><g><title>std::io::default_read_to_end::small_probe_read (1,954,667 samples, 0.05%)</title><rect x="18.7746%" y="789" width="0.0453%" height="15" fill="rgb(225,42,16)" fg:x="810647367" fg:w="1954667"/><text x="19.0246%" y="799.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2,961,625 samples, 0.07%)</title><rect x="18.8200%" y="885" width="0.0686%" height="15" fill="rgb(220,201,45)" fg:x="812609148" fg:w="2961625"/><text x="19.0700%" y="895.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2,961,625 samples, 0.07%)</title><rect x="18.8200%" y="869" width="0.0686%" height="15" fill="rgb(225,33,4)" fg:x="812609148" fg:w="2961625"/><text x="19.0700%" y="879.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2,961,625 samples, 0.07%)</title><rect x="18.8200%" y="853" width="0.0686%" height="15" fill="rgb(224,33,50)" fg:x="812609148" fg:w="2961625"/><text x="19.0700%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (2,961,625 samples, 0.07%)</title><rect x="18.8200%" y="837" width="0.0686%" height="15" fill="rgb(246,198,51)" fg:x="812609148" fg:w="2961625"/><text x="19.0700%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2,961,625 samples, 0.07%)</title><rect x="18.8200%" y="821" width="0.0686%" height="15" fill="rgb(205,22,4)" fg:x="812609148" fg:w="2961625"/><text x="19.0700%" y="831.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (1,429,281 samples, 0.03%)</title><rect x="18.8886%" y="821" width="0.0331%" height="15" fill="rgb(206,3,8)" fg:x="815570773" fg:w="1429281"/><text x="19.1386%" y="831.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (1,429,281 samples, 0.03%)</title><rect x="18.8886%" y="805" width="0.0331%" height="15" fill="rgb(251,23,15)" fg:x="815570773" fg:w="1429281"/><text x="19.1386%" y="815.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (1,429,281 samples, 0.03%)</title><rect x="18.8886%" y="789" width="0.0331%" height="15" fill="rgb(252,88,28)" fg:x="815570773" fg:w="1429281"/><text x="19.1386%" y="799.50"></text></g><g><title>tokio::runtime::context::with_scheduler (1,429,281 samples, 0.03%)</title><rect x="18.8886%" y="773" width="0.0331%" height="15" fill="rgb(212,127,14)" fg:x="815570773" fg:w="1429281"/><text x="19.1386%" y="783.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (1,429,281 samples, 0.03%)</title><rect x="18.8886%" y="757" width="0.0331%" height="15" fill="rgb(247,145,37)" fg:x="815570773" fg:w="1429281"/><text x="19.1386%" y="767.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (1,429,281 samples, 0.03%)</title><rect x="18.8886%" y="741" width="0.0331%" height="15" fill="rgb(209,117,53)" fg:x="815570773" fg:w="1429281"/><text x="19.1386%" y="751.50"></text></g><g><title>emi_web::main::_{{closure}}::_{{closure}} (363,104,162 samples, 8.41%)</title><rect x="10.5632%" y="917" width="8.4095%" height="15" fill="rgb(212,90,42)" fg:x="456095653" fg:w="363104162"/><text x="10.8132%" y="927.50">emi_web::mai..</text></g><g><title>tokio::sync::broadcast::Sender&lt;T&gt;::send (6,590,667 samples, 0.15%)</title><rect x="18.8200%" y="901" width="0.1526%" height="15" fill="rgb(218,164,37)" fg:x="812609148" fg:w="6590667"/><text x="19.0700%" y="911.50"></text></g><g><title>tokio::sync::broadcast::Shared&lt;T&gt;::notify_rx (3,629,042 samples, 0.08%)</title><rect x="18.8886%" y="885" width="0.0840%" height="15" fill="rgb(246,65,34)" fg:x="815570773" fg:w="3629042"/><text x="19.1386%" y="895.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (3,629,042 samples, 0.08%)</title><rect x="18.8886%" y="869" width="0.0840%" height="15" fill="rgb(231,100,33)" fg:x="815570773" fg:w="3629042"/><text x="19.1386%" y="879.50"></text></g><g><title>core::task::wake::Waker::wake (3,629,042 samples, 0.08%)</title><rect x="18.8886%" y="853" width="0.0840%" height="15" fill="rgb(228,126,14)" fg:x="815570773" fg:w="3629042"/><text x="19.1386%" y="863.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (3,629,042 samples, 0.08%)</title><rect x="18.8886%" y="837" width="0.0840%" height="15" fill="rgb(215,173,21)" fg:x="815570773" fg:w="3629042"/><text x="19.1386%" y="847.50"></text></g><g><title>tokio::runtime::task::raw::schedule (2,199,761 samples, 0.05%)</title><rect x="18.9217%" y="821" width="0.0509%" height="15" fill="rgb(210,6,40)" fg:x="817000054" fg:w="2199761"/><text x="19.1717%" y="831.50"></text></g><g><title>tokio::runtime::task::core::Header::get_scheduler (2,199,761 samples, 0.05%)</title><rect x="18.9217%" y="805" width="0.0509%" height="15" fill="rgb(212,48,18)" fg:x="817000054" fg:w="2199761"/><text x="19.1717%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,500,940 samples, 0.03%)</title><rect x="19.1385%" y="853" width="0.0348%" height="15" fill="rgb(230,214,11)" fg:x="826360724" fg:w="1500940"/><text x="19.3885%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,500,940 samples, 0.03%)</title><rect x="19.1385%" y="837" width="0.0348%" height="15" fill="rgb(254,105,39)" fg:x="826360724" fg:w="1500940"/><text x="19.3885%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,500,940 samples, 0.03%)</title><rect x="19.1385%" y="821" width="0.0348%" height="15" fill="rgb(245,158,5)" fg:x="826360724" fg:w="1500940"/><text x="19.3885%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,500,940 samples, 0.03%)</title><rect x="19.1385%" y="805" width="0.0348%" height="15" fill="rgb(249,208,11)" fg:x="826360724" fg:w="1500940"/><text x="19.3885%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,500,940 samples, 0.03%)</title><rect x="19.1385%" y="789" width="0.0348%" height="15" fill="rgb(210,39,28)" fg:x="826360724" fg:w="1500940"/><text x="19.3885%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (1,500,940 samples, 0.03%)</title><rect x="19.1385%" y="773" width="0.0348%" height="15" fill="rgb(211,56,53)" fg:x="826360724" fg:w="1500940"/><text x="19.3885%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::File&gt; (1,708,166 samples, 0.04%)</title><rect x="19.1732%" y="853" width="0.0396%" height="15" fill="rgb(226,201,30)" fg:x="827861664" fg:w="1708166"/><text x="19.4232%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::pal::unix::fs::File&gt; (1,708,166 samples, 0.04%)</title><rect x="19.1732%" y="837" width="0.0396%" height="15" fill="rgb(239,101,34)" fg:x="827861664" fg:w="1708166"/><text x="19.4232%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::pal::unix::fd::FileDesc&gt; (1,708,166 samples, 0.04%)</title><rect x="19.1732%" y="821" width="0.0396%" height="15" fill="rgb(226,209,5)" fg:x="827861664" fg:w="1708166"/><text x="19.4232%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (1,708,166 samples, 0.04%)</title><rect x="19.1732%" y="805" width="0.0396%" height="15" fill="rgb(250,105,47)" fg:x="827861664" fg:w="1708166"/><text x="19.4232%" y="815.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (1,708,166 samples, 0.04%)</title><rect x="19.1732%" y="789" width="0.0396%" height="15" fill="rgb(230,72,3)" fg:x="827861664" fg:w="1708166"/><text x="19.4232%" y="799.50"></text></g><g><title>__close (1,708,166 samples, 0.04%)</title><rect x="19.1732%" y="773" width="0.0396%" height="15" fill="rgb(232,218,39)" fg:x="827861664" fg:w="1708166"/><text x="19.4232%" y="783.50"></text></g><g><title>std::fs::File::create (2,917,625 samples, 0.07%)</title><rect x="19.2128%" y="853" width="0.0676%" height="15" fill="rgb(248,166,6)" fg:x="829569830" fg:w="2917625"/><text x="19.4628%" y="863.50"></text></g><g><title>std::fs::OpenOptions::open (2,917,625 samples, 0.07%)</title><rect x="19.2128%" y="837" width="0.0676%" height="15" fill="rgb(247,89,20)" fg:x="829569830" fg:w="2917625"/><text x="19.4628%" y="847.50"></text></g><g><title>std::fs::OpenOptions::_open (2,917,625 samples, 0.07%)</title><rect x="19.2128%" y="821" width="0.0676%" height="15" fill="rgb(248,130,54)" fg:x="829569830" fg:w="2917625"/><text x="19.4628%" y="831.50"></text></g><g><title>std::sys::pal::unix::fs::File::open (2,917,625 samples, 0.07%)</title><rect x="19.2128%" y="805" width="0.0676%" height="15" fill="rgb(234,196,4)" fg:x="829569830" fg:w="2917625"/><text x="19.4628%" y="815.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_path_with_cstr (2,917,625 samples, 0.07%)</title><rect x="19.2128%" y="789" width="0.0676%" height="15" fill="rgb(250,143,31)" fg:x="829569830" fg:w="2917625"/><text x="19.4628%" y="799.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr (2,917,625 samples, 0.07%)</title><rect x="19.2128%" y="773" width="0.0676%" height="15" fill="rgb(211,110,34)" fg:x="829569830" fg:w="2917625"/><text x="19.4628%" y="783.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr_stack (2,917,625 samples, 0.07%)</title><rect x="19.2128%" y="757" width="0.0676%" height="15" fill="rgb(215,124,48)" fg:x="829569830" fg:w="2917625"/><text x="19.4628%" y="767.50"></text></g><g><title>std::sys::pal::unix::fs::File::open::_{{closure}} (2,917,625 samples, 0.07%)</title><rect x="19.2128%" y="741" width="0.0676%" height="15" fill="rgb(216,46,13)" fg:x="829569830" fg:w="2917625"/><text x="19.4628%" y="751.50"></text></g><g><title>std::sys::pal::unix::fs::File::open_c (2,917,625 samples, 0.07%)</title><rect x="19.2128%" y="725" width="0.0676%" height="15" fill="rgb(205,184,25)" fg:x="829569830" fg:w="2917625"/><text x="19.4628%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (4,184,350 samples, 0.10%)</title><rect x="19.2804%" y="773" width="0.0969%" height="15" fill="rgb(228,1,10)" fg:x="832487455" fg:w="4184350"/><text x="19.5304%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (4,184,350 samples, 0.10%)</title><rect x="19.2804%" y="757" width="0.0969%" height="15" fill="rgb(213,116,27)" fg:x="832487455" fg:w="4184350"/><text x="19.5304%" y="767.50"></text></g><g><title>std::fs::File::metadata (5,685,926 samples, 0.13%)</title><rect x="19.2804%" y="821" width="0.1317%" height="15" fill="rgb(241,95,50)" fg:x="832487455" fg:w="5685926"/><text x="19.5304%" y="831.50"></text></g><g><title>std::sys::pal::unix::fs::File::file_attr (5,685,926 samples, 0.13%)</title><rect x="19.2804%" y="805" width="0.1317%" height="15" fill="rgb(238,48,32)" fg:x="832487455" fg:w="5685926"/><text x="19.5304%" y="815.50"></text></g><g><title>std::sys::pal::unix::fs::try_statx (5,685,926 samples, 0.13%)</title><rect x="19.2804%" y="789" width="0.1317%" height="15" fill="rgb(235,113,49)" fg:x="832487455" fg:w="5685926"/><text x="19.5304%" y="799.50"></text></g><g><title>std::sys::pal::unix::fs::try_statx::statx (1,501,576 samples, 0.03%)</title><rect x="19.3773%" y="773" width="0.0348%" height="15" fill="rgb(205,127,43)" fg:x="836671805" fg:w="1501576"/><text x="19.6273%" y="783.50"></text></g><g><title>statx (1,501,576 samples, 0.03%)</title><rect x="19.3773%" y="757" width="0.0348%" height="15" fill="rgb(250,162,2)" fg:x="836671805" fg:w="1501576"/><text x="19.6273%" y="767.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1,651,673 samples, 0.04%)</title><rect x="19.4618%" y="709" width="0.0383%" height="15" fill="rgb(220,13,41)" fg:x="840321927" fg:w="1651673"/><text x="19.7118%" y="719.50"></text></g><g><title>core::slice::memchr::memchr (1,651,673 samples, 0.04%)</title><rect x="19.4618%" y="693" width="0.0383%" height="15" fill="rgb(249,221,25)" fg:x="840321927" fg:w="1651673"/><text x="19.7118%" y="703.50"></text></g><g><title>core::slice::memchr::memchr_naive (1,651,673 samples, 0.04%)</title><rect x="19.4618%" y="677" width="0.0383%" height="15" fill="rgb(215,208,19)" fg:x="840321927" fg:w="1651673"/><text x="19.7118%" y="687.50"></text></g><g><title>std::fs::File::open (6,847,607 samples, 0.16%)</title><rect x="19.4121%" y="821" width="0.1586%" height="15" fill="rgb(236,175,2)" fg:x="838173381" fg:w="6847607"/><text x="19.6621%" y="831.50"></text></g><g><title>std::fs::OpenOptions::open (6,847,607 samples, 0.16%)</title><rect x="19.4121%" y="805" width="0.1586%" height="15" fill="rgb(241,52,2)" fg:x="838173381" fg:w="6847607"/><text x="19.6621%" y="815.50"></text></g><g><title>std::fs::OpenOptions::_open (4,699,061 samples, 0.11%)</title><rect x="19.4618%" y="789" width="0.1088%" height="15" fill="rgb(248,140,14)" fg:x="840321927" fg:w="4699061"/><text x="19.7118%" y="799.50"></text></g><g><title>std::sys::pal::unix::fs::File::open (4,699,061 samples, 0.11%)</title><rect x="19.4618%" y="773" width="0.1088%" height="15" fill="rgb(253,22,42)" fg:x="840321927" fg:w="4699061"/><text x="19.7118%" y="783.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_path_with_cstr (4,699,061 samples, 0.11%)</title><rect x="19.4618%" y="757" width="0.1088%" height="15" fill="rgb(234,61,47)" fg:x="840321927" fg:w="4699061"/><text x="19.7118%" y="767.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr (4,699,061 samples, 0.11%)</title><rect x="19.4618%" y="741" width="0.1088%" height="15" fill="rgb(208,226,15)" fg:x="840321927" fg:w="4699061"/><text x="19.7118%" y="751.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr_stack (4,699,061 samples, 0.11%)</title><rect x="19.4618%" y="725" width="0.1088%" height="15" fill="rgb(217,221,4)" fg:x="840321927" fg:w="4699061"/><text x="19.7118%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,047,388 samples, 0.07%)</title><rect x="19.5001%" y="709" width="0.0706%" height="15" fill="rgb(212,174,34)" fg:x="841973600" fg:w="3047388"/><text x="19.7501%" y="719.50"></text></g><g><title>[libc.so.6] (3,047,388 samples, 0.07%)</title><rect x="19.5001%" y="693" width="0.0706%" height="15" fill="rgb(253,83,4)" fg:x="841973600" fg:w="3047388"/><text x="19.7501%" y="703.50"></text></g><g><title>emi_web::tui::App::handle_web_key_event (23,839,489 samples, 0.55%)</title><rect x="19.0968%" y="869" width="0.5521%" height="15" fill="rgb(250,195,49)" fg:x="824561886" fg:w="23839489"/><text x="19.3468%" y="879.50"></text></g><g><title>std::fs::read_to_string (15,913,920 samples, 0.37%)</title><rect x="19.2804%" y="853" width="0.3686%" height="15" fill="rgb(241,192,25)" fg:x="832487455" fg:w="15913920"/><text x="19.5304%" y="863.50"></text></g><g><title>std::fs::read_to_string::inner (15,913,920 samples, 0.37%)</title><rect x="19.2804%" y="837" width="0.3686%" height="15" fill="rgb(208,124,10)" fg:x="832487455" fg:w="15913920"/><text x="19.5304%" y="847.50"></text></g><g><title>std::io::default_read_to_string (3,380,387 samples, 0.08%)</title><rect x="19.5706%" y="821" width="0.0783%" height="15" fill="rgb(222,33,0)" fg:x="845020988" fg:w="3380387"/><text x="19.8206%" y="831.50"></text></g><g><title>std::io::append_to_string (3,380,387 samples, 0.08%)</title><rect x="19.5706%" y="805" width="0.0783%" height="15" fill="rgb(234,209,28)" fg:x="845020988" fg:w="3380387"/><text x="19.8206%" y="815.50"></text></g><g><title>std::io::default_read_to_string::_{{closure}} (3,380,387 samples, 0.08%)</title><rect x="19.5706%" y="789" width="0.0783%" height="15" fill="rgb(224,11,23)" fg:x="845020988" fg:w="3380387"/><text x="19.8206%" y="799.50"></text></g><g><title>std::io::default_read_to_end (3,380,387 samples, 0.08%)</title><rect x="19.5706%" y="773" width="0.0783%" height="15" fill="rgb(232,99,1)" fg:x="845020988" fg:w="3380387"/><text x="19.8206%" y="783.50"></text></g><g><title>std::io::default_read_to_end::small_probe_read (3,380,387 samples, 0.08%)</title><rect x="19.5706%" y="757" width="0.0783%" height="15" fill="rgb(237,95,45)" fg:x="845020988" fg:w="3380387"/><text x="19.8206%" y="767.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (3,380,387 samples, 0.08%)</title><rect x="19.5706%" y="741" width="0.0783%" height="15" fill="rgb(208,109,11)" fg:x="845020988" fg:w="3380387"/><text x="19.8206%" y="751.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (3,380,387 samples, 0.08%)</title><rect x="19.5706%" y="725" width="0.0783%" height="15" fill="rgb(216,190,48)" fg:x="845020988" fg:w="3380387"/><text x="19.8206%" y="735.50"></text></g><g><title>std::sys::pal::unix::fs::File::read (3,380,387 samples, 0.08%)</title><rect x="19.5706%" y="709" width="0.0783%" height="15" fill="rgb(251,171,36)" fg:x="845020988" fg:w="3380387"/><text x="19.8206%" y="719.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::read (3,380,387 samples, 0.08%)</title><rect x="19.5706%" y="693" width="0.0783%" height="15" fill="rgb(230,62,22)" fg:x="845020988" fg:w="3380387"/><text x="19.8206%" y="703.50"></text></g><g><title>read (3,380,387 samples, 0.08%)</title><rect x="19.5706%" y="677" width="0.0783%" height="15" fill="rgb(225,114,35)" fg:x="845020988" fg:w="3380387"/><text x="19.8206%" y="687.50"></text></g><g><title>ratatui::terminal::terminal::Terminal&lt;B&gt;::autoresize (1,719,782 samples, 0.04%)</title><rect x="19.6489%" y="837" width="0.0398%" height="15" fill="rgb(215,118,42)" fg:x="848401375" fg:w="1719782"/><text x="19.8989%" y="847.50"></text></g><g><title>ratatui::terminal::terminal::Terminal&lt;B&gt;::size (1,719,782 samples, 0.04%)</title><rect x="19.6489%" y="821" width="0.0398%" height="15" fill="rgb(243,119,21)" fg:x="848401375" fg:w="1719782"/><text x="19.8989%" y="831.50"></text></g><g><title>__rdl_alloc (5,884,646 samples, 0.14%)</title><rect x="19.6888%" y="677" width="0.1363%" height="15" fill="rgb(252,177,53)" fg:x="850121157" fg:w="5884646"/><text x="19.9388%" y="687.50"></text></g><g><title>__rust_alloc (2,901,941 samples, 0.07%)</title><rect x="19.8250%" y="677" width="0.0672%" height="15" fill="rgb(237,209,29)" fg:x="856005803" fg:w="2901941"/><text x="20.0750%" y="687.50"></text></g><g><title>core::ptr::read_volatile (1,859,579 samples, 0.04%)</title><rect x="19.8923%" y="677" width="0.0431%" height="15" fill="rgb(212,65,23)" fg:x="858907744" fg:w="1859579"/><text x="20.1423%" y="687.50"></text></g><g><title>&lt;ratatui::text::line::Line as core::convert::From&lt;ratatui::text::span::Span&gt;&gt;::from (22,025,574 samples, 0.51%)</title><rect x="19.6888%" y="757" width="0.5101%" height="15" fill="rgb(230,222,46)" fg:x="850121157" fg:w="22025574"/><text x="19.9388%" y="767.50"></text></g><g><title>alloc::alloc::exchange_malloc (22,025,574 samples, 0.51%)</title><rect x="19.6888%" y="741" width="0.5101%" height="15" fill="rgb(215,135,32)" fg:x="850121157" fg:w="22025574"/><text x="19.9388%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22,025,574 samples, 0.51%)</title><rect x="19.6888%" y="725" width="0.5101%" height="15" fill="rgb(246,101,22)" fg:x="850121157" fg:w="22025574"/><text x="19.9388%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22,025,574 samples, 0.51%)</title><rect x="19.6888%" y="709" width="0.5101%" height="15" fill="rgb(206,107,13)" fg:x="850121157" fg:w="22025574"/><text x="19.9388%" y="719.50"></text></g><g><title>alloc::alloc::alloc (22,025,574 samples, 0.51%)</title><rect x="19.6888%" y="693" width="0.5101%" height="15" fill="rgb(250,100,44)" fg:x="850121157" fg:w="22025574"/><text x="19.9388%" y="703.50"></text></g><g><title>malloc (11,379,408 samples, 0.26%)</title><rect x="19.9353%" y="677" width="0.2635%" height="15" fill="rgb(231,147,38)" fg:x="860767323" fg:w="11379408"/><text x="20.1853%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (7,100,358 samples, 0.16%)</title><rect x="20.6745%" y="661" width="0.1644%" height="15" fill="rgb(229,8,40)" fg:x="892682790" fg:w="7100358"/><text x="20.9245%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (7,100,358 samples, 0.16%)</title><rect x="20.6745%" y="645" width="0.1644%" height="15" fill="rgb(221,135,30)" fg:x="892682790" fg:w="7100358"/><text x="20.9245%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (7,100,358 samples, 0.16%)</title><rect x="20.6745%" y="629" width="0.1644%" height="15" fill="rgb(249,193,18)" fg:x="892682790" fg:w="7100358"/><text x="20.9245%" y="639.50"></text></g><g><title>&lt;ratatui::buffer::buffer::Buffer as core::ops::index::IndexMut&lt;P&gt;&gt;::index_mut (14,141,658 samples, 0.33%)</title><rect x="20.6745%" y="677" width="0.3275%" height="15" fill="rgb(209,133,39)" fg:x="892682790" fg:w="14141658"/><text x="20.9245%" y="687.50"></text></g><g><title>ratatui::buffer::buffer::Buffer::index_of (7,041,300 samples, 0.16%)</title><rect x="20.8389%" y="661" width="0.1631%" height="15" fill="rgb(232,100,14)" fg:x="899783148" fg:w="7041300"/><text x="21.0889%" y="671.50"></text></g><g><title>ratatui::buffer::buffer::Buffer::index_of_opt (7,041,300 samples, 0.16%)</title><rect x="20.8389%" y="645" width="0.1631%" height="15" fill="rgb(224,185,1)" fg:x="899783148" fg:w="7041300"/><text x="21.0889%" y="655.50"></text></g><g><title>ratatui::style::_::InternalBitFlags::bits (85,988,281 samples, 1.99%)</title><rect x="21.0020%" y="629" width="1.9915%" height="15" fill="rgb(223,139,8)" fg:x="906824448" fg:w="85988281"/><text x="21.2520%" y="639.50">r..</text></g><g><title>ratatui::style::_::&lt;impl ratatui::style::Modifier&gt;::insert (94,514,867 samples, 2.19%)</title><rect x="21.0020%" y="661" width="2.1890%" height="15" fill="rgb(232,213,38)" fg:x="906824448" fg:w="94514867"/><text x="21.2520%" y="671.50">r..</text></g><g><title>ratatui::style::_::InternalBitFlags::insert (94,514,867 samples, 2.19%)</title><rect x="21.0020%" y="645" width="2.1890%" height="15" fill="rgb(207,94,22)" fg:x="906824448" fg:w="94514867"/><text x="21.2520%" y="655.50">r..</text></g><g><title>ratatui::style::_::InternalBitFlags::union (8,526,586 samples, 0.20%)</title><rect x="22.9935%" y="629" width="0.1975%" height="15" fill="rgb(219,183,54)" fg:x="992812729" fg:w="8526586"/><text x="23.2435%" y="639.50"></text></g><g><title>ratatui::buffer::buffer::Buffer::set_style (133,748,854 samples, 3.10%)</title><rect x="20.3170%" y="693" width="3.0976%" height="15" fill="rgb(216,185,54)" fg:x="877245865" fg:w="133748854"/><text x="20.5670%" y="703.50">rat..</text></g><g><title>ratatui::buffer::cell::Cell::set_style (104,170,271 samples, 2.41%)</title><rect x="21.0020%" y="677" width="2.4126%" height="15" fill="rgb(254,217,39)" fg:x="906824448" fg:w="104170271"/><text x="21.2520%" y="687.50">ra..</text></g><g><title>ratatui::style::_::&lt;impl ratatui::style::Modifier&gt;::remove (9,655,404 samples, 0.22%)</title><rect x="23.1910%" y="661" width="0.2236%" height="15" fill="rgb(240,178,23)" fg:x="1001339315" fg:w="9655404"/><text x="23.4410%" y="671.50"></text></g><g><title>ratatui::style::_::InternalBitFlags::remove (9,655,404 samples, 0.22%)</title><rect x="23.1910%" y="645" width="0.2236%" height="15" fill="rgb(218,11,47)" fg:x="1001339315" fg:w="9655404"/><text x="23.4410%" y="655.50"></text></g><g><title>ratatui::style::_::InternalBitFlags::difference (4,053,514 samples, 0.09%)</title><rect x="23.3207%" y="629" width="0.0939%" height="15" fill="rgb(218,51,51)" fg:x="1006941205" fg:w="4053514"/><text x="23.5707%" y="639.50"></text></g><g><title>ratatui::layout::rect::Rect::intersection (2,572,578 samples, 0.06%)</title><rect x="23.4146%" y="693" width="0.0596%" height="15" fill="rgb(238,126,27)" fg:x="1010994719" fg:w="2572578"/><text x="23.6646%" y="703.50"></text></g><g><title>ratatui::layout::rect::Rect::right (2,572,578 samples, 0.06%)</title><rect x="23.4146%" y="677" width="0.0596%" height="15" fill="rgb(249,202,22)" fg:x="1010994719" fg:w="2572578"/><text x="23.6646%" y="687.50"></text></g><g><title>core::num::&lt;impl u16&gt;::saturating_add (2,572,578 samples, 0.06%)</title><rect x="23.4146%" y="661" width="0.0596%" height="15" fill="rgb(254,195,49)" fg:x="1010994719" fg:w="2572578"/><text x="23.6646%" y="671.50"></text></g><g><title>&lt;ratatui::buffer::buffer::Buffer as core::ops::index::IndexMut&lt;P&gt;&gt;::index_mut (3,690,839 samples, 0.09%)</title><rect x="23.4742%" y="661" width="0.0855%" height="15" fill="rgb(208,123,14)" fg:x="1013567297" fg:w="3690839"/><text x="23.7242%" y="671.50"></text></g><g><title>ratatui::buffer::buffer::Buffer::index_of (3,690,839 samples, 0.09%)</title><rect x="23.4742%" y="645" width="0.0855%" height="15" fill="rgb(224,200,8)" fg:x="1013567297" fg:w="3690839"/><text x="23.7242%" y="655.50"></text></g><g><title>ratatui::buffer::buffer::Buffer::index_of_opt (3,690,839 samples, 0.09%)</title><rect x="23.4742%" y="629" width="0.0855%" height="15" fill="rgb(217,61,36)" fg:x="1013567297" fg:w="3690839"/><text x="23.7242%" y="639.50"></text></g><g><title>ratatui::layout::rect::Rect::contains (3,690,839 samples, 0.09%)</title><rect x="23.4742%" y="613" width="0.0855%" height="15" fill="rgb(206,35,45)" fg:x="1013567297" fg:w="3690839"/><text x="23.7242%" y="623.50"></text></g><g><title>ratatui::layout::rect::Rect::right (3,690,839 samples, 0.09%)</title><rect x="23.4742%" y="597" width="0.0855%" height="15" fill="rgb(217,65,33)" fg:x="1013567297" fg:w="3690839"/><text x="23.7242%" y="607.50"></text></g><g><title>core::num::&lt;impl u16&gt;::saturating_add (3,690,839 samples, 0.09%)</title><rect x="23.4742%" y="581" width="0.0855%" height="15" fill="rgb(222,158,48)" fg:x="1013567297" fg:w="3690839"/><text x="23.7242%" y="591.50"></text></g><g><title>ratatui::buffer::cell::Cell::set_style (2,137,440 samples, 0.05%)</title><rect x="23.5596%" y="661" width="0.0495%" height="15" fill="rgb(254,2,54)" fg:x="1017258136" fg:w="2137440"/><text x="23.8096%" y="671.50"></text></g><g><title>ratatui::style::_::&lt;impl ratatui::style::Modifier&gt;::remove (2,137,440 samples, 0.05%)</title><rect x="23.5596%" y="645" width="0.0495%" height="15" fill="rgb(250,143,38)" fg:x="1017258136" fg:w="2137440"/><text x="23.8096%" y="655.50"></text></g><g><title>ratatui::style::_::InternalBitFlags::remove (2,137,440 samples, 0.05%)</title><rect x="23.5596%" y="629" width="0.0495%" height="15" fill="rgb(248,25,0)" fg:x="1017258136" fg:w="2137440"/><text x="23.8096%" y="639.50"></text></g><g><title>compact_str::CompactString::new (5,312,019 samples, 0.12%)</title><rect x="23.6544%" y="645" width="0.1230%" height="15" fill="rgb(206,152,27)" fg:x="1021349309" fg:w="5312019"/><text x="23.9044%" y="655.50"></text></g><g><title>compact_str::CompactString::try_new (5,312,019 samples, 0.12%)</title><rect x="23.6544%" y="629" width="0.1230%" height="15" fill="rgb(240,77,30)" fg:x="1021349309" fg:w="5312019"/><text x="23.9044%" y="639.50"></text></g><g><title>compact_str::repr::Repr::new (5,312,019 samples, 0.12%)</title><rect x="23.6544%" y="613" width="0.1230%" height="15" fill="rgb(231,5,3)" fg:x="1021349309" fg:w="5312019"/><text x="23.9044%" y="623.50"></text></g><g><title>ratatui::widgets::block::Block::render_bottom_side (15,313,992 samples, 0.35%)</title><rect x="23.4742%" y="677" width="0.3547%" height="15" fill="rgb(207,226,32)" fg:x="1013567297" fg:w="15313992"/><text x="23.7242%" y="687.50"></text></g><g><title>ratatui::buffer::cell::Cell::set_symbol (9,485,713 samples, 0.22%)</title><rect x="23.6091%" y="661" width="0.2197%" height="15" fill="rgb(222,207,47)" fg:x="1019395576" fg:w="9485713"/><text x="23.8591%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;compact_str::CompactString&gt; (2,219,961 samples, 0.05%)</title><rect x="23.7774%" y="645" width="0.0514%" height="15" fill="rgb(229,115,45)" fg:x="1026661328" fg:w="2219961"/><text x="24.0274%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;compact_str::repr::Repr&gt; (2,219,961 samples, 0.05%)</title><rect x="23.7774%" y="629" width="0.0514%" height="15" fill="rgb(224,191,6)" fg:x="1026661328" fg:w="2219961"/><text x="24.0274%" y="639.50"></text></g><g><title>&lt;compact_str::repr::Repr as core::ops::drop::Drop&gt;::drop (2,219,961 samples, 0.05%)</title><rect x="23.7774%" y="613" width="0.0514%" height="15" fill="rgb(230,227,24)" fg:x="1026661328" fg:w="2219961"/><text x="24.0274%" y="623.50"></text></g><g><title>compact_str::repr::Repr::is_heap_allocated (2,219,961 samples, 0.05%)</title><rect x="23.7774%" y="597" width="0.0514%" height="15" fill="rgb(228,80,19)" fg:x="1026661328" fg:w="2219961"/><text x="24.0274%" y="607.50"></text></g><g><title>compact_str::CompactString::new (7,649,302 samples, 0.18%)</title><rect x="23.8288%" y="645" width="0.1772%" height="15" fill="rgb(247,229,0)" fg:x="1028881289" fg:w="7649302"/><text x="24.0788%" y="655.50"></text></g><g><title>compact_str::CompactString::try_new (7,649,302 samples, 0.18%)</title><rect x="23.8288%" y="629" width="0.1772%" height="15" fill="rgb(237,194,15)" fg:x="1028881289" fg:w="7649302"/><text x="24.0788%" y="639.50"></text></g><g><title>compact_str::repr::Repr::new (7,649,302 samples, 0.18%)</title><rect x="23.8288%" y="613" width="0.1772%" height="15" fill="rgb(219,203,20)" fg:x="1028881289" fg:w="7649302"/><text x="24.0788%" y="623.50"></text></g><g><title>compact_str::repr::inline::InlineBuffer::new (3,949,861 samples, 0.09%)</title><rect x="23.9145%" y="597" width="0.0915%" height="15" fill="rgb(234,128,8)" fg:x="1032580730" fg:w="3949861"/><text x="24.1645%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,420,141 samples, 0.06%)</title><rect x="23.9499%" y="581" width="0.0561%" height="15" fill="rgb(248,202,8)" fg:x="1034110450" fg:w="2420141"/><text x="24.1999%" y="591.50"></text></g><g><title>[libc.so.6] (2,420,141 samples, 0.06%)</title><rect x="23.9499%" y="565" width="0.0561%" height="15" fill="rgb(206,104,37)" fg:x="1034110450" fg:w="2420141"/><text x="24.1999%" y="575.50"></text></g><g><title>ratatui::buffer::cell::Cell::set_symbol (10,736,171 samples, 0.25%)</title><rect x="23.8288%" y="661" width="0.2486%" height="15" fill="rgb(223,8,27)" fg:x="1028881289" fg:w="10736171"/><text x="24.0788%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;compact_str::CompactString&gt; (3,086,869 samples, 0.07%)</title><rect x="24.0060%" y="645" width="0.0715%" height="15" fill="rgb(216,217,28)" fg:x="1036530591" fg:w="3086869"/><text x="24.2560%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;compact_str::repr::Repr&gt; (3,086,869 samples, 0.07%)</title><rect x="24.0060%" y="629" width="0.0715%" height="15" fill="rgb(249,199,1)" fg:x="1036530591" fg:w="3086869"/><text x="24.2560%" y="639.50"></text></g><g><title>&lt;compact_str::repr::Repr as core::ops::drop::Drop&gt;::drop (3,086,869 samples, 0.07%)</title><rect x="24.0060%" y="613" width="0.0715%" height="15" fill="rgb(240,85,17)" fg:x="1036530591" fg:w="3086869"/><text x="24.2560%" y="623.50"></text></g><g><title>compact_str::repr::Repr::is_heap_allocated (3,086,869 samples, 0.07%)</title><rect x="24.0060%" y="597" width="0.0715%" height="15" fill="rgb(206,108,45)" fg:x="1036530591" fg:w="3086869"/><text x="24.2560%" y="607.50"></text></g><g><title>ratatui::widgets::block::Block::render_left_side (11,759,575 samples, 0.27%)</title><rect x="23.8288%" y="677" width="0.2724%" height="15" fill="rgb(245,210,41)" fg:x="1028881289" fg:w="11759575"/><text x="24.0788%" y="687.50"></text></g><g><title>ratatui::widgets::borders::_::&lt;impl ratatui::widgets::borders::Borders&gt;::contains (1,023,404 samples, 0.02%)</title><rect x="24.0775%" y="661" width="0.0237%" height="15" fill="rgb(206,13,37)" fg:x="1039617460" fg:w="1023404"/><text x="24.3275%" y="671.50"></text></g><g><title>ratatui::widgets::borders::_::InternalBitFlags::contains (1,023,404 samples, 0.02%)</title><rect x="24.0775%" y="645" width="0.0237%" height="15" fill="rgb(250,61,18)" fg:x="1039617460" fg:w="1023404"/><text x="24.3275%" y="655.50"></text></g><g><title>ratatui::widgets::borders::_::InternalBitFlags::bits (1,023,404 samples, 0.02%)</title><rect x="24.0775%" y="629" width="0.0237%" height="15" fill="rgb(235,172,48)" fg:x="1039617460" fg:w="1023404"/><text x="24.3275%" y="639.50"></text></g><g><title>&lt;ratatui::buffer::buffer::Buffer as core::ops::index::IndexMut&lt;P&gt;&gt;::index_mut (1,858,208 samples, 0.04%)</title><rect x="24.1012%" y="661" width="0.0430%" height="15" fill="rgb(249,201,17)" fg:x="1040640864" fg:w="1858208"/><text x="24.3512%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1,858,208 samples, 0.04%)</title><rect x="24.1012%" y="645" width="0.0430%" height="15" fill="rgb(219,208,6)" fg:x="1040640864" fg:w="1858208"/><text x="24.3512%" y="655.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1,858,208 samples, 0.04%)</title><rect x="24.1012%" y="629" width="0.0430%" height="15" fill="rgb(248,31,23)" fg:x="1040640864" fg:w="1858208"/><text x="24.3512%" y="639.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1,858,208 samples, 0.04%)</title><rect x="24.1012%" y="613" width="0.0430%" height="15" fill="rgb(245,15,42)" fg:x="1040640864" fg:w="1858208"/><text x="24.3512%" y="623.50"></text></g><g><title>ratatui::widgets::block::Block::render_right_side (4,105,314 samples, 0.10%)</title><rect x="24.1012%" y="677" width="0.0951%" height="15" fill="rgb(222,217,39)" fg:x="1040640864" fg:w="4105314"/><text x="24.3512%" y="687.50"></text></g><g><title>ratatui::buffer::cell::Cell::set_symbol (2,247,106 samples, 0.05%)</title><rect x="24.1442%" y="661" width="0.0520%" height="15" fill="rgb(210,219,27)" fg:x="1042499072" fg:w="2247106"/><text x="24.3942%" y="671.50"></text></g><g><title>compact_str::CompactString::new (2,247,106 samples, 0.05%)</title><rect x="24.1442%" y="645" width="0.0520%" height="15" fill="rgb(252,166,36)" fg:x="1042499072" fg:w="2247106"/><text x="24.3942%" y="655.50"></text></g><g><title>compact_str::CompactString::try_new (2,247,106 samples, 0.05%)</title><rect x="24.1442%" y="629" width="0.0520%" height="15" fill="rgb(245,132,34)" fg:x="1042499072" fg:w="2247106"/><text x="24.3942%" y="639.50"></text></g><g><title>compact_str::repr::Repr::new (2,247,106 samples, 0.05%)</title><rect x="24.1442%" y="613" width="0.0520%" height="15" fill="rgb(236,54,3)" fg:x="1042499072" fg:w="2247106"/><text x="24.3942%" y="623.50"></text></g><g><title>compact_str::repr::inline::InlineBuffer::new (2,247,106 samples, 0.05%)</title><rect x="24.1442%" y="597" width="0.0520%" height="15" fill="rgb(241,173,43)" fg:x="1042499072" fg:w="2247106"/><text x="24.3942%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,247,106 samples, 0.05%)</title><rect x="24.1442%" y="581" width="0.0520%" height="15" fill="rgb(215,190,9)" fg:x="1042499072" fg:w="2247106"/><text x="24.3942%" y="591.50"></text></g><g><title>[libc.so.6] (2,247,106 samples, 0.05%)</title><rect x="24.1442%" y="565" width="0.0520%" height="15" fill="rgb(242,101,16)" fg:x="1042499072" fg:w="2247106"/><text x="24.3942%" y="575.50"></text></g><g><title>&lt;ratatui::buffer::buffer::Buffer as core::ops::index::IndexMut&lt;P&gt;&gt;::index_mut (1,308,191 samples, 0.03%)</title><rect x="24.2766%" y="661" width="0.0303%" height="15" fill="rgb(223,190,21)" fg:x="1048215033" fg:w="1308191"/><text x="24.5266%" y="671.50"></text></g><g><title>ratatui::buffer::buffer::Buffer::index_of (1,308,191 samples, 0.03%)</title><rect x="24.2766%" y="645" width="0.0303%" height="15" fill="rgb(215,228,25)" fg:x="1048215033" fg:w="1308191"/><text x="24.5266%" y="655.50"></text></g><g><title>ratatui::buffer::buffer::Buffer::index_of_opt (1,308,191 samples, 0.03%)</title><rect x="24.2766%" y="629" width="0.0303%" height="15" fill="rgb(225,36,22)" fg:x="1048215033" fg:w="1308191"/><text x="24.5266%" y="639.50"></text></g><g><title>compact_str::CompactString::new (9,373,434 samples, 0.22%)</title><rect x="24.3069%" y="645" width="0.2171%" height="15" fill="rgb(251,106,46)" fg:x="1049523224" fg:w="9373434"/><text x="24.5569%" y="655.50"></text></g><g><title>compact_str::CompactString::try_new (9,373,434 samples, 0.22%)</title><rect x="24.3069%" y="629" width="0.2171%" height="15" fill="rgb(208,90,1)" fg:x="1049523224" fg:w="9373434"/><text x="24.5569%" y="639.50"></text></g><g><title>compact_str::repr::Repr::new (9,373,434 samples, 0.22%)</title><rect x="24.3069%" y="613" width="0.2171%" height="15" fill="rgb(243,10,4)" fg:x="1049523224" fg:w="9373434"/><text x="24.5569%" y="623.50"></text></g><g><title>compact_str::repr::inline::InlineBuffer::new (1,880,710 samples, 0.04%)</title><rect x="24.4804%" y="597" width="0.0436%" height="15" fill="rgb(212,137,27)" fg:x="1057015948" fg:w="1880710"/><text x="24.7304%" y="607.50"></text></g><g><title>ratatui::widgets::block::Block::render_borders (46,455,791 samples, 1.08%)</title><rect x="23.4742%" y="693" width="1.0759%" height="15" fill="rgb(231,220,49)" fg:x="1013567297" fg:w="46455791"/><text x="23.7242%" y="703.50"></text></g><g><title>ratatui::widgets::block::Block::render_top_side (15,276,910 samples, 0.35%)</title><rect x="24.1963%" y="677" width="0.3538%" height="15" fill="rgb(237,96,20)" fg:x="1044746178" fg:w="15276910"/><text x="24.4463%" y="687.50"></text></g><g><title>ratatui::buffer::cell::Cell::set_symbol (10,499,864 samples, 0.24%)</title><rect x="24.3069%" y="661" width="0.2432%" height="15" fill="rgb(239,229,30)" fg:x="1049523224" fg:w="10499864"/><text x="24.5569%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;compact_str::CompactString&gt; (1,126,430 samples, 0.03%)</title><rect x="24.5240%" y="645" width="0.0261%" height="15" fill="rgb(219,65,33)" fg:x="1058896658" fg:w="1126430"/><text x="24.7740%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;compact_str::repr::Repr&gt; (1,126,430 samples, 0.03%)</title><rect x="24.5240%" y="629" width="0.0261%" height="15" fill="rgb(243,134,7)" fg:x="1058896658" fg:w="1126430"/><text x="24.7740%" y="639.50"></text></g><g><title>&lt;compact_str::repr::Repr as core::ops::drop::Drop&gt;::drop (1,126,430 samples, 0.03%)</title><rect x="24.5240%" y="613" width="0.0261%" height="15" fill="rgb(216,177,54)" fg:x="1058896658" fg:w="1126430"/><text x="24.7740%" y="623.50"></text></g><g><title>compact_str::repr::Repr::is_heap_allocated (1,126,430 samples, 0.03%)</title><rect x="24.5240%" y="597" width="0.0261%" height="15" fill="rgb(211,160,20)" fg:x="1058896658" fg:w="1126430"/><text x="24.7740%" y="607.50"></text></g><g><title>ratatui::layout::rect::Rect::intersection (1,760,540 samples, 0.04%)</title><rect x="24.6374%" y="613" width="0.0408%" height="15" fill="rgb(239,85,39)" fg:x="1063795228" fg:w="1760540"/><text x="24.8874%" y="623.50"></text></g><g><title>core::cmp::min (1,760,540 samples, 0.04%)</title><rect x="24.6374%" y="597" width="0.0408%" height="15" fill="rgb(232,125,22)" fg:x="1063795228" fg:w="1760540"/><text x="24.8874%" y="607.50"></text></g><g><title>core::cmp::Ord::min (1,760,540 samples, 0.04%)</title><rect x="24.6374%" y="581" width="0.0408%" height="15" fill="rgb(244,57,34)" fg:x="1063795228" fg:w="1760540"/><text x="24.8874%" y="591.50"></text></g><g><title>core::cmp::min_by (1,760,540 samples, 0.04%)</title><rect x="24.6374%" y="565" width="0.0408%" height="15" fill="rgb(214,203,32)" fg:x="1063795228" fg:w="1760540"/><text x="24.8874%" y="575.50"></text></g><g><title>ratatui::text::line::Line::render_with_alignment (7,279,814 samples, 0.17%)</title><rect x="24.5501%" y="629" width="0.1686%" height="15" fill="rgb(207,58,43)" fg:x="1060023088" fg:w="7279814"/><text x="24.8001%" y="639.50"></text></g><g><title>ratatui::text::line::Line::width (1,747,134 samples, 0.04%)</title><rect x="24.6782%" y="613" width="0.0405%" height="15" fill="rgb(215,193,15)" fg:x="1065555768" fg:w="1747134"/><text x="24.9282%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,747,134 samples, 0.04%)</title><rect x="24.6782%" y="597" width="0.0405%" height="15" fill="rgb(232,15,44)" fg:x="1065555768" fg:w="1747134"/><text x="24.9282%" y="607.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,747,134 samples, 0.04%)</title><rect x="24.6782%" y="581" width="0.0405%" height="15" fill="rgb(212,3,48)" fg:x="1065555768" fg:w="1747134"/><text x="24.9282%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,747,134 samples, 0.04%)</title><rect x="24.6782%" y="565" width="0.0405%" height="15" fill="rgb(218,128,7)" fg:x="1065555768" fg:w="1747134"/><text x="24.9282%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,747,134 samples, 0.04%)</title><rect x="24.6782%" y="549" width="0.0405%" height="15" fill="rgb(226,216,39)" fg:x="1065555768" fg:w="1747134"/><text x="24.9282%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,747,134 samples, 0.04%)</title><rect x="24.6782%" y="533" width="0.0405%" height="15" fill="rgb(243,47,51)" fg:x="1065555768" fg:w="1747134"/><text x="24.9282%" y="543.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,747,134 samples, 0.04%)</title><rect x="24.6782%" y="517" width="0.0405%" height="15" fill="rgb(241,183,40)" fg:x="1065555768" fg:w="1747134"/><text x="24.9282%" y="527.50"></text></g><g><title>ratatui::text::span::Span::width (1,747,134 samples, 0.04%)</title><rect x="24.6782%" y="501" width="0.0405%" height="15" fill="rgb(231,217,32)" fg:x="1065555768" fg:w="1747134"/><text x="24.9282%" y="511.50"></text></g><g><title>&lt;str as unicode_width::UnicodeWidthStr&gt;::width (1,747,134 samples, 0.04%)</title><rect x="24.6782%" y="485" width="0.0405%" height="15" fill="rgb(229,61,38)" fg:x="1065555768" fg:w="1747134"/><text x="24.9282%" y="495.50"></text></g><g><title>unicode_width::tables::str_width (1,747,134 samples, 0.04%)</title><rect x="24.6782%" y="469" width="0.0405%" height="15" fill="rgb(225,210,5)" fg:x="1065555768" fg:w="1747134"/><text x="24.9282%" y="479.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (1,747,134 samples, 0.04%)</title><rect x="24.6782%" y="453" width="0.0405%" height="15" fill="rgb(231,79,45)" fg:x="1065555768" fg:w="1747134"/><text x="24.9282%" y="463.50"></text></g><g><title>unicode_width::tables::str_width::_{{closure}} (1,747,134 samples, 0.04%)</title><rect x="24.6782%" y="437" width="0.0405%" height="15" fill="rgb(224,100,7)" fg:x="1065555768" fg:w="1747134"/><text x="24.9282%" y="447.50"></text></g><g><title>unicode_width::tables::width_in_str (1,747,134 samples, 0.04%)</title><rect x="24.6782%" y="421" width="0.0405%" height="15" fill="rgb(241,198,18)" fg:x="1065555768" fg:w="1747134"/><text x="24.9282%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,953,639 samples, 0.09%)</title><rect x="24.7692%" y="613" width="0.0916%" height="15" fill="rgb(252,97,53)" fg:x="1069483642" fg:w="3953639"/><text x="25.0192%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,953,639 samples, 0.09%)</title><rect x="24.7692%" y="597" width="0.0916%" height="15" fill="rgb(220,88,7)" fg:x="1069483642" fg:w="3953639"/><text x="25.0192%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (3,953,639 samples, 0.09%)</title><rect x="24.7692%" y="581" width="0.0916%" height="15" fill="rgb(213,176,14)" fg:x="1069483642" fg:w="3953639"/><text x="25.0192%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3,953,639 samples, 0.09%)</title><rect x="24.7692%" y="565" width="0.0916%" height="15" fill="rgb(246,73,7)" fg:x="1069483642" fg:w="3953639"/><text x="25.0192%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3,953,639 samples, 0.09%)</title><rect x="24.7692%" y="549" width="0.0916%" height="15" fill="rgb(245,64,36)" fg:x="1069483642" fg:w="3953639"/><text x="25.0192%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (3,953,639 samples, 0.09%)</title><rect x="24.7692%" y="533" width="0.0916%" height="15" fill="rgb(245,80,10)" fg:x="1069483642" fg:w="3953639"/><text x="25.0192%" y="543.50"></text></g><g><title>ratatui::text::line::spans_after_width::_{{closure}} (3,953,639 samples, 0.09%)</title><rect x="24.7692%" y="517" width="0.0916%" height="15" fill="rgb(232,107,50)" fg:x="1069483642" fg:w="3953639"/><text x="25.0192%" y="527.50"></text></g><g><title>ratatui::text::span::Span::width (3,953,639 samples, 0.09%)</title><rect x="24.7692%" y="501" width="0.0916%" height="15" fill="rgb(253,3,0)" fg:x="1069483642" fg:w="3953639"/><text x="25.0192%" y="511.50"></text></g><g><title>&lt;str as unicode_width::UnicodeWidthStr&gt;::width (3,953,639 samples, 0.09%)</title><rect x="24.7692%" y="485" width="0.0916%" height="15" fill="rgb(212,99,53)" fg:x="1069483642" fg:w="3953639"/><text x="25.0192%" y="495.50"></text></g><g><title>unicode_width::tables::str_width (3,953,639 samples, 0.09%)</title><rect x="24.7692%" y="469" width="0.0916%" height="15" fill="rgb(249,111,54)" fg:x="1069483642" fg:w="3953639"/><text x="25.0192%" y="479.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (3,953,639 samples, 0.09%)</title><rect x="24.7692%" y="453" width="0.0916%" height="15" fill="rgb(249,55,30)" fg:x="1069483642" fg:w="3953639"/><text x="25.0192%" y="463.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1,702,261 samples, 0.04%)</title><rect x="24.8213%" y="437" width="0.0394%" height="15" fill="rgb(237,47,42)" fg:x="1071735020" fg:w="1702261"/><text x="25.0713%" y="447.50"></text></g><g><title>core::str::validations::next_code_point_reverse (1,702,261 samples, 0.04%)</title><rect x="24.8213%" y="421" width="0.0394%" height="15" fill="rgb(211,20,18)" fg:x="1071735020" fg:w="1702261"/><text x="25.0713%" y="431.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (2,094,179 samples, 0.05%)</title><rect x="24.9383%" y="501" width="0.0485%" height="15" fill="rgb(231,203,46)" fg:x="1076784362" fg:w="2094179"/><text x="25.1883%" y="511.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (2,094,179 samples, 0.05%)</title><rect x="24.9383%" y="485" width="0.0485%" height="15" fill="rgb(237,142,3)" fg:x="1076784362" fg:w="2094179"/><text x="25.1883%" y="495.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (2,094,179 samples, 0.05%)</title><rect x="24.9383%" y="469" width="0.0485%" height="15" fill="rgb(241,107,1)" fg:x="1076784362" fg:w="2094179"/><text x="25.1883%" y="479.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (2,094,179 samples, 0.05%)</title><rect x="24.9383%" y="453" width="0.0485%" height="15" fill="rgb(229,83,13)" fg:x="1076784362" fg:w="2094179"/><text x="25.1883%" y="463.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_utf8_char_boundary (2,094,179 samples, 0.05%)</title><rect x="24.9383%" y="437" width="0.0485%" height="15" fill="rgb(241,91,40)" fg:x="1076784362" fg:w="2094179"/><text x="25.1883%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (1,588,298 samples, 0.04%)</title><rect x="24.9868%" y="485" width="0.0368%" height="15" fill="rgb(225,3,45)" fg:x="1078878541" fg:w="1588298"/><text x="25.2368%" y="495.50"></text></g><g><title>unicode_segmentation::grapheme::GraphemeCursor::grapheme_category (1,386,277 samples, 0.03%)</title><rect x="25.0236%" y="485" width="0.0321%" height="15" fill="rgb(244,223,14)" fg:x="1080466839" fg:w="1386277"/><text x="25.2736%" y="495.50"></text></g><g><title>unicode_segmentation::grapheme::GraphemeCursor::is_boundary (2,767,306 samples, 0.06%)</title><rect x="25.0557%" y="485" width="0.0641%" height="15" fill="rgb(224,124,37)" fg:x="1081853116" fg:w="2767306"/><text x="25.3057%" y="495.50"></text></g><g><title>unicode_segmentation::grapheme::check_pair (2,767,306 samples, 0.06%)</title><rect x="25.0557%" y="469" width="0.0641%" height="15" fill="rgb(251,171,30)" fg:x="1081853116" fg:w="2767306"/><text x="25.3057%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12,776,435 samples, 0.30%)</title><rect x="24.9383%" y="597" width="0.2959%" height="15" fill="rgb(236,46,54)" fg:x="1076784362" fg:w="12776435"/><text x="25.1883%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12,776,435 samples, 0.30%)</title><rect x="24.9383%" y="581" width="0.2959%" height="15" fill="rgb(245,213,5)" fg:x="1076784362" fg:w="12776435"/><text x="25.1883%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (12,776,435 samples, 0.30%)</title><rect x="24.9383%" y="565" width="0.2959%" height="15" fill="rgb(230,144,27)" fg:x="1076784362" fg:w="12776435"/><text x="25.1883%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (12,776,435 samples, 0.30%)</title><rect x="24.9383%" y="549" width="0.2959%" height="15" fill="rgb(220,86,6)" fg:x="1076784362" fg:w="12776435"/><text x="25.1883%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12,776,435 samples, 0.30%)</title><rect x="24.9383%" y="533" width="0.2959%" height="15" fill="rgb(240,20,13)" fg:x="1076784362" fg:w="12776435"/><text x="25.1883%" y="543.50"></text></g><g><title>&lt;unicode_segmentation::grapheme::Graphemes as core::iter::traits::iterator::Iterator&gt;::next (12,776,435 samples, 0.30%)</title><rect x="24.9383%" y="517" width="0.2959%" height="15" fill="rgb(217,89,34)" fg:x="1076784362" fg:w="12776435"/><text x="25.1883%" y="527.50"></text></g><g><title>unicode_segmentation::grapheme::GraphemeCursor::next_boundary (10,682,256 samples, 0.25%)</title><rect x="24.9868%" y="501" width="0.2474%" height="15" fill="rgb(229,13,5)" fg:x="1078878541" fg:w="10682256"/><text x="25.2368%" y="511.50"></text></g><g><title>unicode_segmentation::tables::derived_property::InCB_Extend (4,940,375 samples, 0.11%)</title><rect x="25.1198%" y="485" width="0.1144%" height="15" fill="rgb(244,67,35)" fg:x="1084620422" fg:w="4940375"/><text x="25.3698%" y="495.50"></text></g><g><title>unicode_segmentation::tables::util::bsearch_range_table (4,940,375 samples, 0.11%)</title><rect x="25.1198%" y="469" width="0.1144%" height="15" fill="rgb(221,40,2)" fg:x="1084620422" fg:w="4940375"/><text x="25.3698%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (4,940,375 samples, 0.11%)</title><rect x="25.1198%" y="453" width="0.1144%" height="15" fill="rgb(237,157,21)" fg:x="1084620422" fg:w="4940375"/><text x="25.3698%" y="463.50"></text></g><g><title>&lt;ratatui::buffer::buffer::Buffer as core::ops::index::IndexMut&lt;P&gt;&gt;::index_mut (1,766,697 samples, 0.04%)</title><rect x="25.2342%" y="597" width="0.0409%" height="15" fill="rgb(222,94,11)" fg:x="1089560797" fg:w="1766697"/><text x="25.4842%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1,766,697 samples, 0.04%)</title><rect x="25.2342%" y="581" width="0.0409%" height="15" fill="rgb(249,113,6)" fg:x="1089560797" fg:w="1766697"/><text x="25.4842%" y="591.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1,766,697 samples, 0.04%)</title><rect x="25.2342%" y="565" width="0.0409%" height="15" fill="rgb(238,137,36)" fg:x="1089560797" fg:w="1766697"/><text x="25.4842%" y="575.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1,766,697 samples, 0.04%)</title><rect x="25.2342%" y="549" width="0.0409%" height="15" fill="rgb(210,102,26)" fg:x="1089560797" fg:w="1766697"/><text x="25.4842%" y="559.50"></text></g><g><title>&lt;str as unicode_width::UnicodeWidthStr&gt;::width (2,068,654 samples, 0.05%)</title><rect x="25.2751%" y="597" width="0.0479%" height="15" fill="rgb(218,30,30)" fg:x="1091327494" fg:w="2068654"/><text x="25.5251%" y="607.50"></text></g><g><title>unicode_width::tables::str_width (2,068,654 samples, 0.05%)</title><rect x="25.2751%" y="581" width="0.0479%" height="15" fill="rgb(214,67,26)" fg:x="1091327494" fg:w="2068654"/><text x="25.5251%" y="591.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (2,068,654 samples, 0.05%)</title><rect x="25.2751%" y="565" width="0.0479%" height="15" fill="rgb(251,9,53)" fg:x="1091327494" fg:w="2068654"/><text x="25.5251%" y="575.50"></text></g><g><title>&lt;ratatui::text::line::Line as ratatui::widgets::WidgetRef&gt;::render_ref (37,355,474 samples, 0.87%)</title><rect x="24.5501%" y="645" width="0.8652%" height="15" fill="rgb(228,204,25)" fg:x="1060023088" fg:w="37355474"/><text x="24.8001%" y="655.50"></text></g><g><title>ratatui::text::line::render_spans (30,075,660 samples, 0.70%)</title><rect x="24.7187%" y="629" width="0.6966%" height="15" fill="rgb(207,153,8)" fg:x="1067302902" fg:w="30075660"/><text x="24.9687%" y="639.50"></text></g><g><title>&lt;ratatui::text::span::Span as ratatui::widgets::WidgetRef&gt;::render_ref (23,941,281 samples, 0.55%)</title><rect x="24.8608%" y="613" width="0.5545%" height="15" fill="rgb(242,9,16)" fg:x="1073437281" fg:w="23941281"/><text x="25.1108%" y="623.50"></text></g><g><title>core::num::&lt;impl u16&gt;::saturating_add (3,982,414 samples, 0.09%)</title><rect x="25.3230%" y="597" width="0.0922%" height="15" fill="rgb(217,211,10)" fg:x="1093396148" fg:w="3982414"/><text x="25.5730%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,375,567 samples, 0.03%)</title><rect x="25.4152%" y="645" width="0.0319%" height="15" fill="rgb(219,228,52)" fg:x="1097378562" fg:w="1375567"/><text x="25.6652%" y="655.50"></text></g><g><title>&lt;u16 as core::iter::traits::accum::Sum&gt;::sum (1,375,567 samples, 0.03%)</title><rect x="25.4152%" y="629" width="0.0319%" height="15" fill="rgb(231,92,29)" fg:x="1097378562" fg:w="1375567"/><text x="25.6652%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,375,567 samples, 0.03%)</title><rect x="25.4152%" y="613" width="0.0319%" height="15" fill="rgb(232,8,23)" fg:x="1097378562" fg:w="1375567"/><text x="25.6652%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,375,567 samples, 0.03%)</title><rect x="25.4152%" y="597" width="0.0319%" height="15" fill="rgb(216,211,34)" fg:x="1097378562" fg:w="1375567"/><text x="25.6652%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,375,567 samples, 0.03%)</title><rect x="25.4152%" y="581" width="0.0319%" height="15" fill="rgb(236,151,0)" fg:x="1097378562" fg:w="1375567"/><text x="25.6652%" y="591.50"></text></g><g><title>ratatui::widgets::block::Block::render_center_titles::_{{closure}} (1,375,567 samples, 0.03%)</title><rect x="25.4152%" y="565" width="0.0319%" height="15" fill="rgb(209,168,3)" fg:x="1097378562" fg:w="1375567"/><text x="25.6652%" y="575.50"></text></g><g><title>ratatui::text::line::Line::width (1,375,567 samples, 0.03%)</title><rect x="25.4152%" y="549" width="0.0319%" height="15" fill="rgb(208,129,28)" fg:x="1097378562" fg:w="1375567"/><text x="25.6652%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,375,567 samples, 0.03%)</title><rect x="25.4152%" y="533" width="0.0319%" height="15" fill="rgb(229,78,22)" fg:x="1097378562" fg:w="1375567"/><text x="25.6652%" y="543.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,375,567 samples, 0.03%)</title><rect x="25.4152%" y="517" width="0.0319%" height="15" fill="rgb(228,187,13)" fg:x="1097378562" fg:w="1375567"/><text x="25.6652%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,375,567 samples, 0.03%)</title><rect x="25.4152%" y="501" width="0.0319%" height="15" fill="rgb(240,119,24)" fg:x="1097378562" fg:w="1375567"/><text x="25.6652%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,375,567 samples, 0.03%)</title><rect x="25.4152%" y="485" width="0.0319%" height="15" fill="rgb(209,194,42)" fg:x="1097378562" fg:w="1375567"/><text x="25.6652%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,375,567 samples, 0.03%)</title><rect x="25.4152%" y="469" width="0.0319%" height="15" fill="rgb(247,200,46)" fg:x="1097378562" fg:w="1375567"/><text x="25.6652%" y="479.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,375,567 samples, 0.03%)</title><rect x="25.4152%" y="453" width="0.0319%" height="15" fill="rgb(218,76,16)" fg:x="1097378562" fg:w="1375567"/><text x="25.6652%" y="463.50"></text></g><g><title>ratatui::text::span::Span::width (1,375,567 samples, 0.03%)</title><rect x="25.4152%" y="437" width="0.0319%" height="15" fill="rgb(225,21,48)" fg:x="1097378562" fg:w="1375567"/><text x="25.6652%" y="447.50"></text></g><g><title>&lt;str as unicode_width::UnicodeWidthStr&gt;::width (1,375,567 samples, 0.03%)</title><rect x="25.4152%" y="421" width="0.0319%" height="15" fill="rgb(239,223,50)" fg:x="1097378562" fg:w="1375567"/><text x="25.6652%" y="431.50"></text></g><g><title>unicode_width::tables::str_width (1,375,567 samples, 0.03%)</title><rect x="25.4152%" y="405" width="0.0319%" height="15" fill="rgb(244,45,21)" fg:x="1097378562" fg:w="1375567"/><text x="25.6652%" y="415.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (1,375,567 samples, 0.03%)</title><rect x="25.4152%" y="389" width="0.0319%" height="15" fill="rgb(232,33,43)" fg:x="1097378562" fg:w="1375567"/><text x="25.6652%" y="399.50"></text></g><g><title>unicode_width::tables::str_width::_{{closure}} (1,375,567 samples, 0.03%)</title><rect x="25.4152%" y="373" width="0.0319%" height="15" fill="rgb(209,8,3)" fg:x="1097378562" fg:w="1375567"/><text x="25.6652%" y="383.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;i8&gt; for isize&gt;::from (1,375,567 samples, 0.03%)</title><rect x="25.4152%" y="357" width="0.0319%" height="15" fill="rgb(214,25,53)" fg:x="1097378562" fg:w="1375567"/><text x="25.6652%" y="367.50"></text></g><g><title>__rdl_dealloc (3,225,484 samples, 0.07%)</title><rect x="25.4471%" y="501" width="0.0747%" height="15" fill="rgb(254,186,54)" fg:x="1098754129" fg:w="3225484"/><text x="25.6971%" y="511.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3,225,484 samples, 0.07%)</title><rect x="25.4471%" y="485" width="0.0747%" height="15" fill="rgb(208,174,49)" fg:x="1098754129" fg:w="3225484"/><text x="25.6971%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;&amp;ratatui::text::line::Line&gt;&gt; (6,425,458 samples, 0.15%)</title><rect x="25.4471%" y="645" width="0.1488%" height="15" fill="rgb(233,191,51)" fg:x="1098754129" fg:w="6425458"/><text x="25.6971%" y="655.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,425,458 samples, 0.15%)</title><rect x="25.4471%" y="629" width="0.1488%" height="15" fill="rgb(222,134,10)" fg:x="1098754129" fg:w="6425458"/><text x="25.6971%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;&amp;ratatui::text::line::Line,alloc::alloc::Global&gt;&gt; (6,425,458 samples, 0.15%)</title><rect x="25.4471%" y="613" width="0.1488%" height="15" fill="rgb(230,226,20)" fg:x="1098754129" fg:w="6425458"/><text x="25.6971%" y="623.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,425,458 samples, 0.15%)</title><rect x="25.4471%" y="597" width="0.1488%" height="15" fill="rgb(251,111,25)" fg:x="1098754129" fg:w="6425458"/><text x="25.6971%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;ratatui::text::line::Line&gt;&gt; (6,425,458 samples, 0.15%)</title><rect x="25.4471%" y="581" width="0.1488%" height="15" fill="rgb(224,40,46)" fg:x="1098754129" fg:w="6425458"/><text x="25.6971%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,425,458 samples, 0.15%)</title><rect x="25.4471%" y="565" width="0.1488%" height="15" fill="rgb(236,108,47)" fg:x="1098754129" fg:w="6425458"/><text x="25.6971%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6,425,458 samples, 0.15%)</title><rect x="25.4471%" y="549" width="0.1488%" height="15" fill="rgb(234,93,0)" fg:x="1098754129" fg:w="6425458"/><text x="25.6971%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6,425,458 samples, 0.15%)</title><rect x="25.4471%" y="533" width="0.1488%" height="15" fill="rgb(224,213,32)" fg:x="1098754129" fg:w="6425458"/><text x="25.6971%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (6,425,458 samples, 0.15%)</title><rect x="25.4471%" y="517" width="0.1488%" height="15" fill="rgb(251,11,48)" fg:x="1098754129" fg:w="6425458"/><text x="25.6971%" y="527.50"></text></g><g><title>cfree (3,199,974 samples, 0.07%)</title><rect x="25.5218%" y="501" width="0.0741%" height="15" fill="rgb(236,173,5)" fg:x="1101979613" fg:w="3199974"/><text x="25.7718%" y="511.50"></text></g><g><title>[libc.so.6] (1,767,678 samples, 0.04%)</title><rect x="25.5550%" y="485" width="0.0409%" height="15" fill="rgb(230,95,12)" fg:x="1103411909" fg:w="1767678"/><text x="25.8050%" y="495.50"></text></g><g><title>__rust_alloc (1,723,522 samples, 0.04%)</title><rect x="25.6386%" y="437" width="0.0399%" height="15" fill="rgb(232,209,1)" fg:x="1107024353" fg:w="1723522"/><text x="25.8886%" y="447.50"></text></g><g><title>ratatui::widgets::block::Block::render_center_titles (55,163,977 samples, 1.28%)</title><rect x="24.5501%" y="661" width="1.2776%" height="15" fill="rgb(232,6,1)" fg:x="1060023088" fg:w="55163977"/><text x="24.8001%" y="671.50"></text></g><g><title>itertools::Itertools::collect_vec (10,007,478 samples, 0.23%)</title><rect x="25.5959%" y="645" width="0.2318%" height="15" fill="rgb(210,224,50)" fg:x="1105179587" fg:w="10007478"/><text x="25.8459%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (10,007,478 samples, 0.23%)</title><rect x="25.5959%" y="629" width="0.2318%" height="15" fill="rgb(228,127,35)" fg:x="1105179587" fg:w="10007478"/><text x="25.8459%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (10,007,478 samples, 0.23%)</title><rect x="25.5959%" y="613" width="0.2318%" height="15" fill="rgb(245,102,45)" fg:x="1105179587" fg:w="10007478"/><text x="25.8459%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10,007,478 samples, 0.23%)</title><rect x="25.5959%" y="597" width="0.2318%" height="15" fill="rgb(214,1,49)" fg:x="1105179587" fg:w="10007478"/><text x="25.8459%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (10,007,478 samples, 0.23%)</title><rect x="25.5959%" y="581" width="0.2318%" height="15" fill="rgb(226,163,40)" fg:x="1105179587" fg:w="10007478"/><text x="25.8459%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (10,007,478 samples, 0.23%)</title><rect x="25.5959%" y="565" width="0.2318%" height="15" fill="rgb(239,212,28)" fg:x="1105179587" fg:w="10007478"/><text x="25.8459%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10,007,478 samples, 0.23%)</title><rect x="25.5959%" y="549" width="0.2318%" height="15" fill="rgb(220,20,13)" fg:x="1105179587" fg:w="10007478"/><text x="25.8459%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10,007,478 samples, 0.23%)</title><rect x="25.5959%" y="533" width="0.2318%" height="15" fill="rgb(210,164,35)" fg:x="1105179587" fg:w="10007478"/><text x="25.8459%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (10,007,478 samples, 0.23%)</title><rect x="25.5959%" y="517" width="0.2318%" height="15" fill="rgb(248,109,41)" fg:x="1105179587" fg:w="10007478"/><text x="25.8459%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (10,007,478 samples, 0.23%)</title><rect x="25.5959%" y="501" width="0.2318%" height="15" fill="rgb(238,23,50)" fg:x="1105179587" fg:w="10007478"/><text x="25.8459%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8,162,712 samples, 0.19%)</title><rect x="25.6386%" y="485" width="0.1890%" height="15" fill="rgb(211,48,49)" fg:x="1107024353" fg:w="8162712"/><text x="25.8886%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8,162,712 samples, 0.19%)</title><rect x="25.6386%" y="469" width="0.1890%" height="15" fill="rgb(223,36,21)" fg:x="1107024353" fg:w="8162712"/><text x="25.8886%" y="479.50"></text></g><g><title>alloc::alloc::alloc (8,162,712 samples, 0.19%)</title><rect x="25.6386%" y="453" width="0.1890%" height="15" fill="rgb(207,123,46)" fg:x="1107024353" fg:w="8162712"/><text x="25.8886%" y="463.50"></text></g><g><title>malloc (6,439,190 samples, 0.15%)</title><rect x="25.6785%" y="437" width="0.1491%" height="15" fill="rgb(240,218,32)" fg:x="1108747875" fg:w="6439190"/><text x="25.9285%" y="447.50"></text></g><g><title>&lt;ratatui::widgets::block::Block as ratatui::widgets::WidgetRef&gt;::render_ref (241,670,463 samples, 5.60%)</title><rect x="20.2789%" y="709" width="5.5971%" height="15" fill="rgb(252,5,43)" fg:x="875601662" fg:w="241670463"/><text x="20.5289%" y="719.50">&lt;ratatu..</text></g><g><title>ratatui::widgets::block::Block::render_titles (57,249,037 samples, 1.33%)</title><rect x="24.5501%" y="693" width="1.3259%" height="15" fill="rgb(252,84,19)" fg:x="1060023088" fg:w="57249037"/><text x="24.8001%" y="703.50"></text></g><g><title>ratatui::widgets::block::Block::render_title_position (57,249,037 samples, 1.33%)</title><rect x="24.5501%" y="677" width="1.3259%" height="15" fill="rgb(243,152,39)" fg:x="1060023088" fg:w="57249037"/><text x="24.8001%" y="687.50"></text></g><g><title>ratatui::widgets::block::Block::render_right_titles (2,085,060 samples, 0.05%)</title><rect x="25.8277%" y="661" width="0.0483%" height="15" fill="rgb(234,160,15)" fg:x="1115187065" fg:w="2085060"/><text x="26.0777%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,085,060 samples, 0.05%)</title><rect x="25.8277%" y="645" width="0.0483%" height="15" fill="rgb(237,34,20)" fg:x="1115187065" fg:w="2085060"/><text x="26.0777%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (2,085,060 samples, 0.05%)</title><rect x="25.8277%" y="629" width="0.0483%" height="15" fill="rgb(229,97,13)" fg:x="1115187065" fg:w="2085060"/><text x="26.0777%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (2,085,060 samples, 0.05%)</title><rect x="25.8277%" y="613" width="0.0483%" height="15" fill="rgb(234,71,50)" fg:x="1115187065" fg:w="2085060"/><text x="26.0777%" y="623.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfind (2,085,060 samples, 0.05%)</title><rect x="25.8277%" y="597" width="0.0483%" height="15" fill="rgb(253,155,4)" fg:x="1115187065" fg:w="2085060"/><text x="26.0777%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::try_rfold (2,085,060 samples, 0.05%)</title><rect x="25.8277%" y="581" width="0.0483%" height="15" fill="rgb(222,185,37)" fg:x="1115187065" fg:w="2085060"/><text x="26.0777%" y="591.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::try_rfold (2,085,060 samples, 0.05%)</title><rect x="25.8277%" y="565" width="0.0483%" height="15" fill="rgb(251,177,13)" fg:x="1115187065" fg:w="2085060"/><text x="26.0777%" y="575.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (2,085,060 samples, 0.05%)</title><rect x="25.8277%" y="549" width="0.0483%" height="15" fill="rgb(250,179,40)" fg:x="1115187065" fg:w="2085060"/><text x="26.0777%" y="559.50"></text></g><g><title>ratatui::widgets::block::Block::filtered_titles::_{{closure}} (2,085,060 samples, 0.05%)</title><rect x="25.8277%" y="533" width="0.0483%" height="15" fill="rgb(242,44,2)" fg:x="1115187065" fg:w="2085060"/><text x="26.0777%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (2,085,060 samples, 0.05%)</title><rect x="25.8277%" y="517" width="0.0483%" height="15" fill="rgb(216,177,13)" fg:x="1115187065" fg:w="2085060"/><text x="26.0777%" y="527.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_sub (3,076,594 samples, 0.07%)</title><rect x="25.8760%" y="645" width="0.0713%" height="15" fill="rgb(216,106,43)" fg:x="1117272125" fg:w="3076594"/><text x="26.1260%" y="655.50"></text></g><g><title>ratatui::buffer::buffer::Buffer::set_style (2,112,539 samples, 0.05%)</title><rect x="25.9472%" y="645" width="0.0489%" height="15" fill="rgb(216,183,2)" fg:x="1120348719" fg:w="2112539"/><text x="26.1972%" y="655.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1,316,179 samples, 0.03%)</title><rect x="26.0907%" y="469" width="0.0305%" height="15" fill="rgb(249,75,3)" fg:x="1126544197" fg:w="1316179"/><text x="26.3407%" y="479.50"></text></g><g><title>core::str::validations::next_code_point_reverse (1,316,179 samples, 0.03%)</title><rect x="26.0907%" y="453" width="0.0305%" height="15" fill="rgb(219,67,39)" fg:x="1126544197" fg:w="1316179"/><text x="26.3407%" y="463.50"></text></g><g><title>ratatui::text::line::Line::render_with_alignment (12,233,096 samples, 0.28%)</title><rect x="25.8760%" y="661" width="0.2833%" height="15" fill="rgb(253,228,2)" fg:x="1117272125" fg:w="12233096"/><text x="26.1260%" y="671.50"></text></g><g><title>ratatui::text::line::Line::width (7,043,963 samples, 0.16%)</title><rect x="25.9961%" y="645" width="0.1631%" height="15" fill="rgb(235,138,27)" fg:x="1122461258" fg:w="7043963"/><text x="26.2461%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (7,043,963 samples, 0.16%)</title><rect x="25.9961%" y="629" width="0.1631%" height="15" fill="rgb(236,97,51)" fg:x="1122461258" fg:w="7043963"/><text x="26.2461%" y="639.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (7,043,963 samples, 0.16%)</title><rect x="25.9961%" y="613" width="0.1631%" height="15" fill="rgb(240,80,30)" fg:x="1122461258" fg:w="7043963"/><text x="26.2461%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7,043,963 samples, 0.16%)</title><rect x="25.9961%" y="597" width="0.1631%" height="15" fill="rgb(230,178,19)" fg:x="1122461258" fg:w="7043963"/><text x="26.2461%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7,043,963 samples, 0.16%)</title><rect x="25.9961%" y="581" width="0.1631%" height="15" fill="rgb(210,190,27)" fg:x="1122461258" fg:w="7043963"/><text x="26.2461%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (7,043,963 samples, 0.16%)</title><rect x="25.9961%" y="565" width="0.1631%" height="15" fill="rgb(222,107,31)" fg:x="1122461258" fg:w="7043963"/><text x="26.2461%" y="575.50"></text></g><g><title>core::ops::function::FnMut::call_mut (7,043,963 samples, 0.16%)</title><rect x="25.9961%" y="549" width="0.1631%" height="15" fill="rgb(216,127,34)" fg:x="1122461258" fg:w="7043963"/><text x="26.2461%" y="559.50"></text></g><g><title>ratatui::text::span::Span::width (7,043,963 samples, 0.16%)</title><rect x="25.9961%" y="533" width="0.1631%" height="15" fill="rgb(234,116,52)" fg:x="1122461258" fg:w="7043963"/><text x="26.2461%" y="543.50"></text></g><g><title>&lt;str as unicode_width::UnicodeWidthStr&gt;::width (7,043,963 samples, 0.16%)</title><rect x="25.9961%" y="517" width="0.1631%" height="15" fill="rgb(222,124,15)" fg:x="1122461258" fg:w="7043963"/><text x="26.2461%" y="527.50"></text></g><g><title>unicode_width::tables::str_width (7,043,963 samples, 0.16%)</title><rect x="25.9961%" y="501" width="0.1631%" height="15" fill="rgb(231,179,28)" fg:x="1122461258" fg:w="7043963"/><text x="26.2461%" y="511.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (7,043,963 samples, 0.16%)</title><rect x="25.9961%" y="485" width="0.1631%" height="15" fill="rgb(226,93,45)" fg:x="1122461258" fg:w="7043963"/><text x="26.2461%" y="495.50"></text></g><g><title>unicode_width::tables::str_width::_{{closure}} (1,644,845 samples, 0.04%)</title><rect x="26.1212%" y="469" width="0.0381%" height="15" fill="rgb(215,8,51)" fg:x="1127860376" fg:w="1644845"/><text x="26.3712%" y="479.50"></text></g><g><title>unicode_width::tables::width_in_str (1,644,845 samples, 0.04%)</title><rect x="26.1212%" y="453" width="0.0381%" height="15" fill="rgb(223,106,5)" fg:x="1127860376" fg:w="1644845"/><text x="26.3712%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,633,369 samples, 0.04%)</title><rect x="26.1593%" y="629" width="0.0378%" height="15" fill="rgb(250,191,5)" fg:x="1129505221" fg:w="1633369"/><text x="26.4093%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1,633,369 samples, 0.04%)</title><rect x="26.1593%" y="613" width="0.0378%" height="15" fill="rgb(242,132,44)" fg:x="1129505221" fg:w="1633369"/><text x="26.4093%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,633,369 samples, 0.04%)</title><rect x="26.1593%" y="597" width="0.0378%" height="15" fill="rgb(251,152,29)" fg:x="1129505221" fg:w="1633369"/><text x="26.4093%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,633,369 samples, 0.04%)</title><rect x="26.1593%" y="581" width="0.0378%" height="15" fill="rgb(218,179,5)" fg:x="1129505221" fg:w="1633369"/><text x="26.4093%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (1,633,369 samples, 0.04%)</title><rect x="26.1593%" y="565" width="0.0378%" height="15" fill="rgb(227,67,19)" fg:x="1129505221" fg:w="1633369"/><text x="26.4093%" y="575.50"></text></g><g><title>ratatui::text::line::spans_after_width::_{{closure}} (1,633,369 samples, 0.04%)</title><rect x="26.1593%" y="549" width="0.0378%" height="15" fill="rgb(233,119,31)" fg:x="1129505221" fg:w="1633369"/><text x="26.4093%" y="559.50"></text></g><g><title>ratatui::text::span::Span::width (1,633,369 samples, 0.04%)</title><rect x="26.1593%" y="533" width="0.0378%" height="15" fill="rgb(241,120,22)" fg:x="1129505221" fg:w="1633369"/><text x="26.4093%" y="543.50"></text></g><g><title>&lt;str as unicode_width::UnicodeWidthStr&gt;::width (1,633,369 samples, 0.04%)</title><rect x="26.1593%" y="517" width="0.0378%" height="15" fill="rgb(224,102,30)" fg:x="1129505221" fg:w="1633369"/><text x="26.4093%" y="527.50"></text></g><g><title>unicode_width::tables::str_width (1,633,369 samples, 0.04%)</title><rect x="26.1593%" y="501" width="0.0378%" height="15" fill="rgb(210,164,37)" fg:x="1129505221" fg:w="1633369"/><text x="26.4093%" y="511.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (1,633,369 samples, 0.04%)</title><rect x="26.1593%" y="485" width="0.0378%" height="15" fill="rgb(226,191,16)" fg:x="1129505221" fg:w="1633369"/><text x="26.4093%" y="495.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1,633,369 samples, 0.04%)</title><rect x="26.1593%" y="469" width="0.0378%" height="15" fill="rgb(214,40,45)" fg:x="1129505221" fg:w="1633369"/><text x="26.4093%" y="479.50"></text></g><g><title>core::str::validations::next_code_point_reverse (1,633,369 samples, 0.04%)</title><rect x="26.1593%" y="453" width="0.0378%" height="15" fill="rgb(244,29,26)" fg:x="1129505221" fg:w="1633369"/><text x="26.4093%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1,633,369 samples, 0.04%)</title><rect x="26.1593%" y="437" width="0.0378%" height="15" fill="rgb(216,16,5)" fg:x="1129505221" fg:w="1633369"/><text x="26.4093%" y="447.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,633,369 samples, 0.04%)</title><rect x="26.1593%" y="421" width="0.0378%" height="15" fill="rgb(249,76,35)" fg:x="1129505221" fg:w="1633369"/><text x="26.4093%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,361,506 samples, 0.08%)</title><rect x="26.1593%" y="645" width="0.0779%" height="15" fill="rgb(207,11,44)" fg:x="1129505221" fg:w="3361506"/><text x="26.4093%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,728,137 samples, 0.04%)</title><rect x="26.1971%" y="629" width="0.0400%" height="15" fill="rgb(228,190,49)" fg:x="1131138590" fg:w="1728137"/><text x="26.4471%" y="639.50"></text></g><g><title>unicode_segmentation::grapheme::GraphemeCursor::is_boundary (1,586,370 samples, 0.04%)</title><rect x="26.2763%" y="517" width="0.0367%" height="15" fill="rgb(214,173,12)" fg:x="1134557748" fg:w="1586370"/><text x="26.5263%" y="527.50"></text></g><g><title>unicode_segmentation::grapheme::check_pair (1,586,370 samples, 0.04%)</title><rect x="26.2763%" y="501" width="0.0367%" height="15" fill="rgb(218,26,35)" fg:x="1134557748" fg:w="1586370"/><text x="26.5263%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,779,395 samples, 0.20%)</title><rect x="26.2371%" y="629" width="0.2033%" height="15" fill="rgb(220,200,19)" fg:x="1132866727" fg:w="8779395"/><text x="26.4871%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,088,374 samples, 0.16%)</title><rect x="26.2763%" y="613" width="0.1642%" height="15" fill="rgb(239,95,49)" fg:x="1134557748" fg:w="7088374"/><text x="26.5263%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,088,374 samples, 0.16%)</title><rect x="26.2763%" y="597" width="0.1642%" height="15" fill="rgb(235,85,53)" fg:x="1134557748" fg:w="7088374"/><text x="26.5263%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (7,088,374 samples, 0.16%)</title><rect x="26.2763%" y="581" width="0.1642%" height="15" fill="rgb(233,133,31)" fg:x="1134557748" fg:w="7088374"/><text x="26.5263%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7,088,374 samples, 0.16%)</title><rect x="26.2763%" y="565" width="0.1642%" height="15" fill="rgb(218,25,20)" fg:x="1134557748" fg:w="7088374"/><text x="26.5263%" y="575.50"></text></g><g><title>&lt;unicode_segmentation::grapheme::Graphemes as core::iter::traits::iterator::Iterator&gt;::next (7,088,374 samples, 0.16%)</title><rect x="26.2763%" y="549" width="0.1642%" height="15" fill="rgb(252,210,38)" fg:x="1134557748" fg:w="7088374"/><text x="26.5263%" y="559.50"></text></g><g><title>unicode_segmentation::grapheme::GraphemeCursor::next_boundary (7,088,374 samples, 0.16%)</title><rect x="26.2763%" y="533" width="0.1642%" height="15" fill="rgb(242,134,21)" fg:x="1134557748" fg:w="7088374"/><text x="26.5263%" y="543.50"></text></g><g><title>unicode_segmentation::tables::derived_property::InCB_Extend (5,502,004 samples, 0.13%)</title><rect x="26.3130%" y="517" width="0.1274%" height="15" fill="rgb(213,28,48)" fg:x="1136144118" fg:w="5502004"/><text x="26.5630%" y="527.50"></text></g><g><title>unicode_segmentation::tables::util::bsearch_range_table (5,502,004 samples, 0.13%)</title><rect x="26.3130%" y="501" width="0.1274%" height="15" fill="rgb(250,196,2)" fg:x="1136144118" fg:w="5502004"/><text x="26.5630%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (5,502,004 samples, 0.13%)</title><rect x="26.3130%" y="485" width="0.1274%" height="15" fill="rgb(227,5,17)" fg:x="1136144118" fg:w="5502004"/><text x="26.5630%" y="495.50"></text></g><g><title>unicode_segmentation::tables::util::bsearch_range_table::_{{closure}} (1,814,906 samples, 0.04%)</title><rect x="26.3984%" y="469" width="0.0420%" height="15" fill="rgb(221,226,24)" fg:x="1139831216" fg:w="1814906"/><text x="26.6484%" y="479.50"></text></g><g><title>&lt;str as unicode_width::UnicodeWidthStr&gt;::width (2,994,490 samples, 0.07%)</title><rect x="26.4405%" y="629" width="0.0694%" height="15" fill="rgb(211,5,48)" fg:x="1141646122" fg:w="2994490"/><text x="26.6905%" y="639.50"></text></g><g><title>unicode_width::tables::str_width (2,994,490 samples, 0.07%)</title><rect x="26.4405%" y="613" width="0.0694%" height="15" fill="rgb(219,150,6)" fg:x="1141646122" fg:w="2994490"/><text x="26.6905%" y="623.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (2,994,490 samples, 0.07%)</title><rect x="26.4405%" y="597" width="0.0694%" height="15" fill="rgb(251,46,16)" fg:x="1141646122" fg:w="2994490"/><text x="26.6905%" y="607.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (2,994,490 samples, 0.07%)</title><rect x="26.4405%" y="581" width="0.0694%" height="15" fill="rgb(220,204,40)" fg:x="1141646122" fg:w="2994490"/><text x="26.6905%" y="591.50"></text></g><g><title>core::str::validations::next_code_point_reverse (2,994,490 samples, 0.07%)</title><rect x="26.4405%" y="565" width="0.0694%" height="15" fill="rgb(211,85,2)" fg:x="1141646122" fg:w="2994490"/><text x="26.6905%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (2,994,490 samples, 0.07%)</title><rect x="26.4405%" y="549" width="0.0694%" height="15" fill="rgb(229,17,7)" fg:x="1141646122" fg:w="2994490"/><text x="26.6905%" y="559.50"></text></g><g><title>core::num::&lt;impl u16&gt;::saturating_add (1,414,491 samples, 0.03%)</title><rect x="26.5098%" y="629" width="0.0328%" height="15" fill="rgb(239,72,28)" fg:x="1144640612" fg:w="1414491"/><text x="26.7598%" y="639.50"></text></g><g><title>&lt;ratatui::text::line::Line as ratatui::widgets::WidgetRef&gt;::render_ref (31,102,758 samples, 0.72%)</title><rect x="25.8760%" y="677" width="0.7203%" height="15" fill="rgb(230,47,54)" fg:x="1117272125" fg:w="31102758"/><text x="26.1260%" y="687.50"></text></g><g><title>ratatui::text::line::render_spans (18,869,662 samples, 0.44%)</title><rect x="26.1593%" y="661" width="0.4370%" height="15" fill="rgb(214,50,8)" fg:x="1129505221" fg:w="18869662"/><text x="26.4093%" y="671.50"></text></g><g><title>&lt;ratatui::text::span::Span as ratatui::widgets::WidgetRef&gt;::render_ref (15,508,156 samples, 0.36%)</title><rect x="26.2371%" y="645" width="0.3592%" height="15" fill="rgb(216,198,43)" fg:x="1132866727" fg:w="15508156"/><text x="26.4871%" y="655.50"></text></g><g><title>ratatui::buffer::cell::Cell::set_symbol (2,319,780 samples, 0.05%)</title><rect x="26.5426%" y="629" width="0.0537%" height="15" fill="rgb(234,20,35)" fg:x="1146055103" fg:w="2319780"/><text x="26.7926%" y="639.50"></text></g><g><title>compact_str::CompactString::new (2,319,780 samples, 0.05%)</title><rect x="26.5426%" y="613" width="0.0537%" height="15" fill="rgb(254,45,19)" fg:x="1146055103" fg:w="2319780"/><text x="26.7926%" y="623.50"></text></g><g><title>compact_str::CompactString::try_new (2,319,780 samples, 0.05%)</title><rect x="26.5426%" y="597" width="0.0537%" height="15" fill="rgb(219,14,44)" fg:x="1146055103" fg:w="2319780"/><text x="26.7926%" y="607.50"></text></g><g><title>compact_str::repr::Repr::new (2,319,780 samples, 0.05%)</title><rect x="26.5426%" y="581" width="0.0537%" height="15" fill="rgb(217,220,26)" fg:x="1146055103" fg:w="2319780"/><text x="26.7926%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (5,892,547 samples, 0.14%)</title><rect x="26.5963%" y="677" width="0.1365%" height="15" fill="rgb(213,158,28)" fg:x="1148374883" fg:w="5892547"/><text x="26.8463%" y="687.50"></text></g><g><title>&lt;u16 as core::iter::traits::accum::Sum&gt;::sum (5,892,547 samples, 0.14%)</title><rect x="26.5963%" y="661" width="0.1365%" height="15" fill="rgb(252,51,52)" fg:x="1148374883" fg:w="5892547"/><text x="26.8463%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5,892,547 samples, 0.14%)</title><rect x="26.5963%" y="645" width="0.1365%" height="15" fill="rgb(246,89,16)" fg:x="1148374883" fg:w="5892547"/><text x="26.8463%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5,892,547 samples, 0.14%)</title><rect x="26.5963%" y="629" width="0.1365%" height="15" fill="rgb(216,158,49)" fg:x="1148374883" fg:w="5892547"/><text x="26.8463%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (5,892,547 samples, 0.14%)</title><rect x="26.5963%" y="613" width="0.1365%" height="15" fill="rgb(236,107,19)" fg:x="1148374883" fg:w="5892547"/><text x="26.8463%" y="623.50"></text></g><g><title>ratatui::widgets::block::Block::render_center_titles::_{{closure}} (5,892,547 samples, 0.14%)</title><rect x="26.5963%" y="597" width="0.1365%" height="15" fill="rgb(228,185,30)" fg:x="1148374883" fg:w="5892547"/><text x="26.8463%" y="607.50"></text></g><g><title>ratatui::text::line::Line::width (5,892,547 samples, 0.14%)</title><rect x="26.5963%" y="581" width="0.1365%" height="15" fill="rgb(246,134,8)" fg:x="1148374883" fg:w="5892547"/><text x="26.8463%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (5,892,547 samples, 0.14%)</title><rect x="26.5963%" y="565" width="0.1365%" height="15" fill="rgb(214,143,50)" fg:x="1148374883" fg:w="5892547"/><text x="26.8463%" y="575.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (5,892,547 samples, 0.14%)</title><rect x="26.5963%" y="549" width="0.1365%" height="15" fill="rgb(228,75,8)" fg:x="1148374883" fg:w="5892547"/><text x="26.8463%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5,892,547 samples, 0.14%)</title><rect x="26.5963%" y="533" width="0.1365%" height="15" fill="rgb(207,175,4)" fg:x="1148374883" fg:w="5892547"/><text x="26.8463%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5,892,547 samples, 0.14%)</title><rect x="26.5963%" y="517" width="0.1365%" height="15" fill="rgb(205,108,24)" fg:x="1148374883" fg:w="5892547"/><text x="26.8463%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (5,892,547 samples, 0.14%)</title><rect x="26.5963%" y="501" width="0.1365%" height="15" fill="rgb(244,120,49)" fg:x="1148374883" fg:w="5892547"/><text x="26.8463%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (5,892,547 samples, 0.14%)</title><rect x="26.5963%" y="485" width="0.1365%" height="15" fill="rgb(223,47,38)" fg:x="1148374883" fg:w="5892547"/><text x="26.8463%" y="495.50"></text></g><g><title>ratatui::text::span::Span::width (5,892,547 samples, 0.14%)</title><rect x="26.5963%" y="469" width="0.1365%" height="15" fill="rgb(229,179,11)" fg:x="1148374883" fg:w="5892547"/><text x="26.8463%" y="479.50"></text></g><g><title>&lt;str as unicode_width::UnicodeWidthStr&gt;::width (5,892,547 samples, 0.14%)</title><rect x="26.5963%" y="453" width="0.1365%" height="15" fill="rgb(231,122,1)" fg:x="1148374883" fg:w="5892547"/><text x="26.8463%" y="463.50"></text></g><g><title>unicode_width::tables::str_width (5,892,547 samples, 0.14%)</title><rect x="26.5963%" y="437" width="0.1365%" height="15" fill="rgb(245,119,9)" fg:x="1148374883" fg:w="5892547"/><text x="26.8463%" y="447.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (5,892,547 samples, 0.14%)</title><rect x="26.5963%" y="421" width="0.1365%" height="15" fill="rgb(241,163,25)" fg:x="1148374883" fg:w="5892547"/><text x="26.8463%" y="431.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (5,892,547 samples, 0.14%)</title><rect x="26.5963%" y="405" width="0.1365%" height="15" fill="rgb(217,214,3)" fg:x="1148374883" fg:w="5892547"/><text x="26.8463%" y="415.50"></text></g><g><title>core::str::validations::next_code_point_reverse (5,892,547 samples, 0.14%)</title><rect x="26.5963%" y="389" width="0.1365%" height="15" fill="rgb(240,86,28)" fg:x="1148374883" fg:w="5892547"/><text x="26.8463%" y="399.50"></text></g><g><title>&lt;core::option::Option&lt;W&gt; as ratatui::widgets::WidgetRef&gt;::render_ref (284,289,444 samples, 6.58%)</title><rect x="20.1989%" y="725" width="6.5841%" height="15" fill="rgb(215,47,9)" fg:x="872146731" fg:w="284289444"/><text x="20.4489%" y="735.50">&lt;core::op..</text></g><g><title>ratatui::widgets::block::Block::render_title_position (39,164,050 samples, 0.91%)</title><rect x="25.8760%" y="709" width="0.9070%" height="15" fill="rgb(252,25,45)" fg:x="1117272125" fg:w="39164050"/><text x="26.1260%" y="719.50"></text></g><g><title>ratatui::widgets::block::Block::render_center_titles (39,164,050 samples, 0.91%)</title><rect x="25.8760%" y="693" width="0.9070%" height="15" fill="rgb(251,164,9)" fg:x="1117272125" fg:w="39164050"/><text x="26.1260%" y="703.50"></text></g><g><title>ratatui::buffer::buffer::Buffer::set_style (2,168,745 samples, 0.05%)</title><rect x="26.7328%" y="677" width="0.0502%" height="15" fill="rgb(233,194,0)" fg:x="1154267430" fg:w="2168745"/><text x="26.9828%" y="687.50"></text></g><g><title>ratatui::buffer::cell::Cell::set_style (2,168,745 samples, 0.05%)</title><rect x="26.7328%" y="661" width="0.0502%" height="15" fill="rgb(249,111,24)" fg:x="1154267430" fg:w="2168745"/><text x="26.9828%" y="671.50"></text></g><g><title>ratatui::style::_::&lt;impl ratatui::style::Modifier&gt;::insert (2,168,745 samples, 0.05%)</title><rect x="26.7328%" y="645" width="0.0502%" height="15" fill="rgb(250,223,3)" fg:x="1154267430" fg:w="2168745"/><text x="26.9828%" y="655.50"></text></g><g><title>ratatui::style::_::InternalBitFlags::insert (2,168,745 samples, 0.05%)</title><rect x="26.7328%" y="629" width="0.0502%" height="15" fill="rgb(236,178,37)" fg:x="1154267430" fg:w="2168745"/><text x="26.9828%" y="639.50"></text></g><g><title>ratatui::style::_::InternalBitFlags::bits (2,168,745 samples, 0.05%)</title><rect x="26.7328%" y="613" width="0.0502%" height="15" fill="rgb(241,158,50)" fg:x="1154267430" fg:w="2168745"/><text x="26.9828%" y="623.50"></text></g><g><title>&lt;core::option::Option&lt;ratatui::widgets::block::Block&gt; as ratatui::widgets::block::BlockExt&gt;::inner_if_some (2,954,959 samples, 0.07%)</title><rect x="26.7830%" y="725" width="0.0684%" height="15" fill="rgb(213,121,41)" fg:x="1156436175" fg:w="2954959"/><text x="27.0330%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (2,954,959 samples, 0.07%)</title><rect x="26.7830%" y="709" width="0.0684%" height="15" fill="rgb(240,92,3)" fg:x="1156436175" fg:w="2954959"/><text x="27.0330%" y="719.50"></text></g><g><title>&lt;core::option::Option&lt;ratatui::widgets::block::Block&gt; as ratatui::widgets::block::BlockExt&gt;::inner_if_some::_{{closure}} (2,954,959 samples, 0.07%)</title><rect x="26.7830%" y="693" width="0.0684%" height="15" fill="rgb(205,123,3)" fg:x="1156436175" fg:w="2954959"/><text x="27.0330%" y="703.50"></text></g><g><title>ratatui::widgets::block::Block::inner (2,954,959 samples, 0.07%)</title><rect x="26.7830%" y="677" width="0.0684%" height="15" fill="rgb(205,97,47)" fg:x="1156436175" fg:w="2954959"/><text x="27.0330%" y="687.50"></text></g><g><title>core::cmp::Ord::min (1,323,369 samples, 0.03%)</title><rect x="26.8208%" y="661" width="0.0306%" height="15" fill="rgb(247,152,14)" fg:x="1158067765" fg:w="1323369"/><text x="27.0708%" y="671.50"></text></g><g><title>core::cmp::min_by (1,323,369 samples, 0.03%)</title><rect x="26.8208%" y="645" width="0.0306%" height="15" fill="rgb(248,195,53)" fg:x="1158067765" fg:w="1323369"/><text x="27.0708%" y="655.50"></text></g><g><title>&lt;ratatui::buffer::buffer::Buffer as core::ops::index::IndexMut&lt;P&gt;&gt;::index_mut (5,725,485 samples, 0.13%)</title><rect x="26.9581%" y="709" width="0.1326%" height="15" fill="rgb(226,201,16)" fg:x="1163997642" fg:w="5725485"/><text x="27.2081%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (5,725,485 samples, 0.13%)</title><rect x="26.9581%" y="693" width="0.1326%" height="15" fill="rgb(205,98,0)" fg:x="1163997642" fg:w="5725485"/><text x="27.2081%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (5,725,485 samples, 0.13%)</title><rect x="26.9581%" y="677" width="0.1326%" height="15" fill="rgb(214,191,48)" fg:x="1163997642" fg:w="5725485"/><text x="27.2081%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (5,725,485 samples, 0.13%)</title><rect x="26.9581%" y="661" width="0.1326%" height="15" fill="rgb(237,112,39)" fg:x="1163997642" fg:w="5725485"/><text x="27.2081%" y="671.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2,718,887 samples, 0.06%)</title><rect x="27.0907%" y="709" width="0.0630%" height="15" fill="rgb(247,203,27)" fg:x="1169723127" fg:w="2718887"/><text x="27.3407%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2,718,887 samples, 0.06%)</title><rect x="27.0907%" y="693" width="0.0630%" height="15" fill="rgb(235,124,28)" fg:x="1169723127" fg:w="2718887"/><text x="27.3407%" y="703.50"></text></g><g><title>ratatui::style::_::InternalBitFlags::bits (283,613,316 samples, 6.57%)</title><rect x="27.1537%" y="661" width="6.5685%" height="15" fill="rgb(208,207,46)" fg:x="1172442014" fg:w="283613316"/><text x="27.4037%" y="671.50">ratatui::..</text></g><g><title>ratatui::style::_::&lt;impl ratatui::style::Modifier&gt;::insert (303,963,088 samples, 7.04%)</title><rect x="27.1537%" y="693" width="7.0398%" height="15" fill="rgb(234,176,4)" fg:x="1172442014" fg:w="303963088"/><text x="27.4037%" y="703.50">ratatui::..</text></g><g><title>ratatui::style::_::InternalBitFlags::insert (303,963,088 samples, 7.04%)</title><rect x="27.1537%" y="677" width="7.0398%" height="15" fill="rgb(230,133,28)" fg:x="1172442014" fg:w="303963088"/><text x="27.4037%" y="687.50">ratatui::..</text></g><g><title>ratatui::style::_::InternalBitFlags::union (20,349,772 samples, 0.47%)</title><rect x="33.7222%" y="661" width="0.4713%" height="15" fill="rgb(211,137,40)" fg:x="1456055330" fg:w="20349772"/><text x="33.9722%" y="671.50"></text></g><g><title>ratatui::buffer::buffer::Buffer::set_style (332,724,532 samples, 7.71%)</title><rect x="26.8514%" y="725" width="7.7059%" height="15" fill="rgb(254,35,13)" fg:x="1159391134" fg:w="332724532"/><text x="27.1014%" y="735.50">ratatui::bu..</text></g><g><title>ratatui::buffer::cell::Cell::set_style (319,673,652 samples, 7.40%)</title><rect x="27.1537%" y="709" width="7.4036%" height="15" fill="rgb(225,49,51)" fg:x="1172442014" fg:w="319673652"/><text x="27.4037%" y="719.50">ratatui::b..</text></g><g><title>ratatui::style::_::&lt;impl ratatui::style::Modifier&gt;::remove (15,710,564 samples, 0.36%)</title><rect x="34.1935%" y="693" width="0.3639%" height="15" fill="rgb(251,10,15)" fg:x="1476405102" fg:w="15710564"/><text x="34.4435%" y="703.50"></text></g><g><title>ratatui::style::_::InternalBitFlags::remove (15,710,564 samples, 0.36%)</title><rect x="34.1935%" y="677" width="0.3639%" height="15" fill="rgb(228,207,15)" fg:x="1476405102" fg:w="15710564"/><text x="34.4435%" y="687.50"></text></g><g><title>ratatui::style::_::InternalBitFlags::difference (4,845,771 samples, 0.11%)</title><rect x="34.4451%" y="661" width="0.1122%" height="15" fill="rgb(241,99,19)" fg:x="1487269895" fg:w="4845771"/><text x="34.6951%" y="671.50"></text></g><g><title>&lt;ratatui::buffer::buffer::Buffer as core::ops::index::IndexMut&lt;P&gt;&gt;::index_mut (6,907,980 samples, 0.16%)</title><rect x="34.7360%" y="693" width="0.1600%" height="15" fill="rgb(207,104,49)" fg:x="1499832862" fg:w="6907980"/><text x="34.9860%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (6,907,980 samples, 0.16%)</title><rect x="34.7360%" y="677" width="0.1600%" height="15" fill="rgb(234,99,18)" fg:x="1499832862" fg:w="6907980"/><text x="34.9860%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (6,907,980 samples, 0.16%)</title><rect x="34.7360%" y="661" width="0.1600%" height="15" fill="rgb(213,191,49)" fg:x="1499832862" fg:w="6907980"/><text x="34.9860%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (6,907,980 samples, 0.16%)</title><rect x="34.7360%" y="645" width="0.1600%" height="15" fill="rgb(210,226,19)" fg:x="1499832862" fg:w="6907980"/><text x="34.9860%" y="655.50"></text></g><g><title>ratatui::style::_::InternalBitFlags::bits (90,338,067 samples, 2.09%)</title><rect x="34.8960%" y="645" width="2.0922%" height="15" fill="rgb(229,97,18)" fg:x="1506740842" fg:w="90338067"/><text x="35.1460%" y="655.50">r..</text></g><g><title>ratatui::style::_::&lt;impl ratatui::style::Modifier&gt;::insert (97,614,563 samples, 2.26%)</title><rect x="34.8960%" y="677" width="2.2607%" height="15" fill="rgb(211,167,15)" fg:x="1506740842" fg:w="97614563"/><text x="35.1460%" y="687.50">r..</text></g><g><title>ratatui::style::_::InternalBitFlags::insert (97,614,563 samples, 2.26%)</title><rect x="34.8960%" y="661" width="2.2607%" height="15" fill="rgb(210,169,34)" fg:x="1506740842" fg:w="97614563"/><text x="35.1460%" y="671.50">r..</text></g><g><title>ratatui::style::_::InternalBitFlags::union (7,276,496 samples, 0.17%)</title><rect x="36.9883%" y="645" width="0.1685%" height="15" fill="rgb(241,121,31)" fg:x="1597078909" fg:w="7276496"/><text x="37.2383%" y="655.50"></text></g><g><title>ratatui::buffer::buffer::Buffer::set_style (134,668,020 samples, 3.12%)</title><rect x="34.5573%" y="709" width="3.1189%" height="15" fill="rgb(232,40,11)" fg:x="1492115666" fg:w="134668020"/><text x="34.8073%" y="719.50">rat..</text></g><g><title>ratatui::buffer::cell::Cell::set_style (120,042,844 samples, 2.78%)</title><rect x="34.8960%" y="693" width="2.7802%" height="15" fill="rgb(205,86,26)" fg:x="1506740842" fg:w="120042844"/><text x="35.1460%" y="703.50">ra..</text></g><g><title>ratatui::style::_::&lt;impl ratatui::style::Modifier&gt;::remove (22,428,281 samples, 0.52%)</title><rect x="37.1568%" y="677" width="0.5194%" height="15" fill="rgb(231,126,28)" fg:x="1604355405" fg:w="22428281"/><text x="37.4068%" y="687.50"></text></g><g><title>ratatui::style::_::InternalBitFlags::remove (22,428,281 samples, 0.52%)</title><rect x="37.1568%" y="661" width="0.5194%" height="15" fill="rgb(219,221,18)" fg:x="1604355405" fg:w="22428281"/><text x="37.4068%" y="671.50"></text></g><g><title>ratatui::style::_::InternalBitFlags::difference (2,314,475 samples, 0.05%)</title><rect x="37.6226%" y="645" width="0.0536%" height="15" fill="rgb(211,40,0)" fg:x="1624469211" fg:w="2314475"/><text x="37.8726%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,432,296 samples, 0.03%)</title><rect x="37.7136%" y="629" width="0.0332%" height="15" fill="rgb(239,85,43)" fg:x="1628398617" fg:w="1432296"/><text x="37.9636%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1,432,296 samples, 0.03%)</title><rect x="37.7136%" y="613" width="0.0332%" height="15" fill="rgb(231,55,21)" fg:x="1628398617" fg:w="1432296"/><text x="37.9636%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,432,296 samples, 0.03%)</title><rect x="37.7136%" y="597" width="0.0332%" height="15" fill="rgb(225,184,43)" fg:x="1628398617" fg:w="1432296"/><text x="37.9636%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,432,296 samples, 0.03%)</title><rect x="37.7136%" y="581" width="0.0332%" height="15" fill="rgb(251,158,41)" fg:x="1628398617" fg:w="1432296"/><text x="37.9636%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1,432,296 samples, 0.03%)</title><rect x="37.7136%" y="565" width="0.0332%" height="15" fill="rgb(234,159,37)" fg:x="1628398617" fg:w="1432296"/><text x="37.9636%" y="575.50"></text></g><g><title>ratatui::text::line::Line::styled_graphemes::_{{closure}} (1,432,296 samples, 0.03%)</title><rect x="37.7136%" y="549" width="0.0332%" height="15" fill="rgb(216,204,22)" fg:x="1628398617" fg:w="1432296"/><text x="37.9636%" y="559.50"></text></g><g><title>ratatui::text::span::Span::styled_graphemes (1,432,296 samples, 0.03%)</title><rect x="37.7136%" y="533" width="0.0332%" height="15" fill="rgb(214,17,3)" fg:x="1628398617" fg:w="1432296"/><text x="37.9636%" y="543.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (8,267,184 samples, 0.19%)</title><rect x="37.7136%" y="677" width="0.1915%" height="15" fill="rgb(212,111,17)" fg:x="1628398617" fg:w="8267184"/><text x="37.9636%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,267,184 samples, 0.19%)</title><rect x="37.7136%" y="661" width="0.1915%" height="15" fill="rgb(221,157,24)" fg:x="1628398617" fg:w="8267184"/><text x="37.9636%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,267,184 samples, 0.19%)</title><rect x="37.7136%" y="645" width="0.1915%" height="15" fill="rgb(252,16,13)" fg:x="1628398617" fg:w="8267184"/><text x="37.9636%" y="655.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (6,834,888 samples, 0.16%)</title><rect x="37.7468%" y="629" width="0.1583%" height="15" fill="rgb(221,62,2)" fg:x="1629830913" fg:w="6834888"/><text x="37.9968%" y="639.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6,834,888 samples, 0.16%)</title><rect x="37.7468%" y="613" width="0.1583%" height="15" fill="rgb(247,87,22)" fg:x="1629830913" fg:w="6834888"/><text x="37.9968%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,834,888 samples, 0.16%)</title><rect x="37.7468%" y="597" width="0.1583%" height="15" fill="rgb(215,73,9)" fg:x="1629830913" fg:w="6834888"/><text x="37.9968%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,834,888 samples, 0.16%)</title><rect x="37.7468%" y="581" width="0.1583%" height="15" fill="rgb(207,175,33)" fg:x="1629830913" fg:w="6834888"/><text x="37.9968%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (6,834,888 samples, 0.16%)</title><rect x="37.7468%" y="565" width="0.1583%" height="15" fill="rgb(243,129,54)" fg:x="1629830913" fg:w="6834888"/><text x="37.9968%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6,834,888 samples, 0.16%)</title><rect x="37.7468%" y="549" width="0.1583%" height="15" fill="rgb(227,119,45)" fg:x="1629830913" fg:w="6834888"/><text x="37.9968%" y="559.50"></text></g><g><title>&lt;unicode_segmentation::grapheme::Graphemes as core::iter::traits::iterator::Iterator&gt;::next (6,834,888 samples, 0.16%)</title><rect x="37.7468%" y="533" width="0.1583%" height="15" fill="rgb(205,109,36)" fg:x="1629830913" fg:w="6834888"/><text x="37.9968%" y="543.50"></text></g><g><title>unicode_segmentation::grapheme::GraphemeCursor::next_boundary (4,457,118 samples, 0.10%)</title><rect x="37.8019%" y="517" width="0.1032%" height="15" fill="rgb(205,6,39)" fg:x="1632208683" fg:w="4457118"/><text x="38.0519%" y="527.50"></text></g><g><title>unicode_segmentation::tables::derived_property::InCB_Extend (4,457,118 samples, 0.10%)</title><rect x="37.8019%" y="501" width="0.1032%" height="15" fill="rgb(221,32,16)" fg:x="1632208683" fg:w="4457118"/><text x="38.0519%" y="511.50"></text></g><g><title>unicode_segmentation::tables::util::bsearch_range_table (4,457,118 samples, 0.10%)</title><rect x="37.8019%" y="485" width="0.1032%" height="15" fill="rgb(228,144,50)" fg:x="1632208683" fg:w="4457118"/><text x="38.0519%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (4,457,118 samples, 0.10%)</title><rect x="37.8019%" y="469" width="0.1032%" height="15" fill="rgb(229,201,53)" fg:x="1632208683" fg:w="4457118"/><text x="38.0519%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,217,221 samples, 0.14%)</title><rect x="37.9051%" y="677" width="0.1440%" height="15" fill="rgb(249,153,27)" fg:x="1636665801" fg:w="6217221"/><text x="38.1551%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6,217,221 samples, 0.14%)</title><rect x="37.9051%" y="661" width="0.1440%" height="15" fill="rgb(227,106,25)" fg:x="1636665801" fg:w="6217221"/><text x="38.1551%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6,217,221 samples, 0.14%)</title><rect x="37.9051%" y="645" width="0.1440%" height="15" fill="rgb(230,65,29)" fg:x="1636665801" fg:w="6217221"/><text x="38.1551%" y="655.50"></text></g><g><title>ratatui::widgets::paragraph::Paragraph::render_paragraph::_{{closure}} (6,217,221 samples, 0.14%)</title><rect x="37.9051%" y="629" width="0.1440%" height="15" fill="rgb(221,57,46)" fg:x="1636665801" fg:w="6217221"/><text x="38.1551%" y="639.50"></text></g><g><title>ratatui::text::line::Line::styled_graphemes (6,217,221 samples, 0.14%)</title><rect x="37.9051%" y="613" width="0.1440%" height="15" fill="rgb(229,161,17)" fg:x="1636665801" fg:w="6217221"/><text x="38.1551%" y="623.50"></text></g><g><title>ratatui::style::Style::patch (3,860,128 samples, 0.09%)</title><rect x="37.9597%" y="597" width="0.0894%" height="15" fill="rgb(222,213,11)" fg:x="1639022894" fg:w="3860128"/><text x="38.2097%" y="607.50"></text></g><g><title>__rdl_realloc (1,679,973 samples, 0.04%)</title><rect x="38.0491%" y="549" width="0.0389%" height="15" fill="rgb(235,35,13)" fg:x="1642883022" fg:w="1679973"/><text x="38.2991%" y="559.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1,679,973 samples, 0.04%)</title><rect x="38.0491%" y="533" width="0.0389%" height="15" fill="rgb(233,158,34)" fg:x="1642883022" fg:w="1679973"/><text x="38.2991%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3,214,737 samples, 0.07%)</title><rect x="38.0491%" y="597" width="0.0745%" height="15" fill="rgb(215,151,48)" fg:x="1642883022" fg:w="3214737"/><text x="38.2991%" y="607.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3,214,737 samples, 0.07%)</title><rect x="38.0491%" y="581" width="0.0745%" height="15" fill="rgb(229,84,14)" fg:x="1642883022" fg:w="3214737"/><text x="38.2991%" y="591.50"></text></g><g><title>alloc::alloc::realloc (3,214,737 samples, 0.07%)</title><rect x="38.0491%" y="565" width="0.0745%" height="15" fill="rgb(229,68,14)" fg:x="1642883022" fg:w="3214737"/><text x="38.2991%" y="575.50"></text></g><g><title>realloc (1,534,764 samples, 0.04%)</title><rect x="38.0880%" y="549" width="0.0355%" height="15" fill="rgb(243,106,26)" fg:x="1644562995" fg:w="1534764"/><text x="38.3380%" y="559.50"></text></g><g><title>__rust_alloc (2,259,787 samples, 0.05%)</title><rect x="38.1235%" y="597" width="0.0523%" height="15" fill="rgb(206,45,38)" fg:x="1646097759" fg:w="2259787"/><text x="38.3735%" y="607.50"></text></g><g><title>&lt;ratatui::widgets::reflow::LineTruncator&lt;O,I&gt; as ratatui::widgets::reflow::LineComposer&gt;::next_line (32,127,513 samples, 0.74%)</title><rect x="37.6762%" y="693" width="0.7441%" height="15" fill="rgb(226,6,15)" fg:x="1626783686" fg:w="32127513"/><text x="37.9262%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16,028,177 samples, 0.37%)</title><rect x="38.0491%" y="677" width="0.3712%" height="15" fill="rgb(232,22,54)" fg:x="1642883022" fg:w="16028177"/><text x="38.2991%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (16,028,177 samples, 0.37%)</title><rect x="38.0491%" y="661" width="0.3712%" height="15" fill="rgb(229,222,32)" fg:x="1642883022" fg:w="16028177"/><text x="38.2991%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (16,028,177 samples, 0.37%)</title><rect x="38.0491%" y="645" width="0.3712%" height="15" fill="rgb(228,62,29)" fg:x="1642883022" fg:w="16028177"/><text x="38.2991%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (16,028,177 samples, 0.37%)</title><rect x="38.0491%" y="629" width="0.3712%" height="15" fill="rgb(251,103,34)" fg:x="1642883022" fg:w="16028177"/><text x="38.2991%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (16,028,177 samples, 0.37%)</title><rect x="38.0491%" y="613" width="0.3712%" height="15" fill="rgb(233,12,30)" fg:x="1642883022" fg:w="16028177"/><text x="38.2991%" y="623.50"></text></g><g><title>malloc (10,553,653 samples, 0.24%)</title><rect x="38.1759%" y="597" width="0.2444%" height="15" fill="rgb(238,52,0)" fg:x="1648357546" fg:w="10553653"/><text x="38.4259%" y="607.50"></text></g><g><title>[libc.so.6] (8,901,631 samples, 0.21%)</title><rect x="38.2141%" y="581" width="0.2062%" height="15" fill="rgb(223,98,5)" fg:x="1650009568" fg:w="8901631"/><text x="38.4641%" y="591.50"></text></g><g><title>[libc.so.6] (3,719,450 samples, 0.09%)</title><rect x="38.3342%" y="565" width="0.0861%" height="15" fill="rgb(228,75,37)" fg:x="1655191749" fg:w="3719450"/><text x="38.5842%" y="575.50"></text></g><g><title>&lt;ratatui::widgets::paragraph::Paragraph as ratatui::widgets::Widget&gt;::render (793,707,917 samples, 18.38%)</title><rect x="20.1989%" y="757" width="18.3822%" height="15" fill="rgb(205,115,49)" fg:x="872146731" fg:w="793707917"/><text x="20.4489%" y="767.50">&lt;ratatui::widgets::paragraph:..</text></g><g><title>&lt;ratatui::widgets::paragraph::Paragraph as ratatui::widgets::WidgetRef&gt;::render_ref (793,707,917 samples, 18.38%)</title><rect x="20.1989%" y="741" width="18.3822%" height="15" fill="rgb(250,154,43)" fg:x="872146731" fg:w="793707917"/><text x="20.4489%" y="751.50">&lt;ratatui::widgets::paragraph:..</text></g><g><title>ratatui::widgets::paragraph::Paragraph::render_paragraph (173,738,982 samples, 4.02%)</title><rect x="34.5573%" y="725" width="4.0238%" height="15" fill="rgb(226,43,29)" fg:x="1492115666" fg:w="173738982"/><text x="34.8073%" y="735.50">rata..</text></g><g><title>ratatui::widgets::paragraph::Paragraph::render_text (39,070,962 samples, 0.90%)</title><rect x="37.6762%" y="709" width="0.9049%" height="15" fill="rgb(249,228,39)" fg:x="1626783686" fg:w="39070962"/><text x="37.9262%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;ratatui::widgets::reflow::LineTruncator&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;ratatui::text::line::Line&gt;,ratatui::widgets::paragraph::Paragraph::render_paragraph::{{closure}}&gt;,core::iter::adapters::flatten::FlatMap&lt;core::slice::iter::Iter&lt;ratatui::text::span::Span&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;unicode_segmentation::grapheme::Graphemes,ratatui::text::span::Span::styled_graphemes&lt;ratatui::style::Style&gt;::{{closure}}&gt;,ratatui::text::span::Span::styled_graphemes&lt;ratatui::style::Style&gt;::{{closure}}&gt;,ratatui::text::line::Line::styled_graphemes&lt;ratatui::style::Style&gt;::{{closure}}&gt;&gt;&gt; (6,943,449 samples, 0.16%)</title><rect x="38.4203%" y="693" width="0.1608%" height="15" fill="rgb(216,79,43)" fg:x="1658911199" fg:w="6943449"/><text x="38.6703%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ratatui::text::grapheme::StyledGrapheme&gt;&gt; (6,943,449 samples, 0.16%)</title><rect x="38.4203%" y="677" width="0.1608%" height="15" fill="rgb(228,95,12)" fg:x="1658911199" fg:w="6943449"/><text x="38.6703%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;ratatui::text::grapheme::StyledGrapheme&gt;&gt; (6,943,449 samples, 0.16%)</title><rect x="38.4203%" y="661" width="0.1608%" height="15" fill="rgb(249,221,15)" fg:x="1658911199" fg:w="6943449"/><text x="38.6703%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,943,449 samples, 0.16%)</title><rect x="38.4203%" y="645" width="0.1608%" height="15" fill="rgb(233,34,13)" fg:x="1658911199" fg:w="6943449"/><text x="38.6703%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,484,626 samples, 0.13%)</title><rect x="38.4541%" y="629" width="0.1270%" height="15" fill="rgb(214,103,39)" fg:x="1660370022" fg:w="5484626"/><text x="38.7041%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,484,626 samples, 0.13%)</title><rect x="38.4541%" y="613" width="0.1270%" height="15" fill="rgb(251,126,39)" fg:x="1660370022" fg:w="5484626"/><text x="38.7041%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (5,484,626 samples, 0.13%)</title><rect x="38.4541%" y="597" width="0.1270%" height="15" fill="rgb(214,216,36)" fg:x="1660370022" fg:w="5484626"/><text x="38.7041%" y="607.50"></text></g><g><title>cfree (5,484,626 samples, 0.13%)</title><rect x="38.4541%" y="581" width="0.1270%" height="15" fill="rgb(220,221,8)" fg:x="1660370022" fg:w="5484626"/><text x="38.7041%" y="591.50"></text></g><g><title>[libc.so.6] (3,150,863 samples, 0.07%)</title><rect x="38.5081%" y="565" width="0.0730%" height="15" fill="rgb(240,216,3)" fg:x="1662703785" fg:w="3150863"/><text x="38.7581%" y="575.50"></text></g><g><title>[libc.so.6] (3,150,863 samples, 0.07%)</title><rect x="38.5081%" y="549" width="0.0730%" height="15" fill="rgb(232,218,17)" fg:x="1662703785" fg:w="3150863"/><text x="38.7581%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (6,462,708 samples, 0.15%)</title><rect x="38.5811%" y="757" width="0.1497%" height="15" fill="rgb(229,163,45)" fg:x="1665854648" fg:w="6462708"/><text x="38.8311%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,462,708 samples, 0.15%)</title><rect x="38.5811%" y="741" width="0.1497%" height="15" fill="rgb(231,110,42)" fg:x="1665854648" fg:w="6462708"/><text x="38.8311%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,462,708 samples, 0.15%)</title><rect x="38.5811%" y="725" width="0.1497%" height="15" fill="rgb(208,170,48)" fg:x="1665854648" fg:w="6462708"/><text x="38.8311%" y="735.50"></text></g><g><title>alloc::alloc::alloc (6,462,708 samples, 0.15%)</title><rect x="38.5811%" y="709" width="0.1497%" height="15" fill="rgb(239,116,25)" fg:x="1665854648" fg:w="6462708"/><text x="38.8311%" y="719.50"></text></g><g><title>malloc (6,462,708 samples, 0.15%)</title><rect x="38.5811%" y="693" width="0.1497%" height="15" fill="rgb(219,200,50)" fg:x="1665854648" fg:w="6462708"/><text x="38.8311%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;ratatui::widgets::block::Block&gt;&gt; (1,438,700 samples, 0.03%)</title><rect x="38.7308%" y="741" width="0.0333%" height="15" fill="rgb(245,200,0)" fg:x="1672317356" fg:w="1438700"/><text x="38.9808%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;ratatui::widgets::block::Block&gt; (1,438,700 samples, 0.03%)</title><rect x="38.7308%" y="725" width="0.0333%" height="15" fill="rgb(245,119,33)" fg:x="1672317356" fg:w="1438700"/><text x="38.9808%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(core::option::Option&lt;ratatui::widgets::block::title::Position&gt;,ratatui::text::line::Line)&gt;&gt; (1,438,700 samples, 0.03%)</title><rect x="38.7308%" y="709" width="0.0333%" height="15" fill="rgb(231,125,12)" fg:x="1672317356" fg:w="1438700"/><text x="38.9808%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(core::option::Option&lt;ratatui::widgets::block::title::Position&gt;,ratatui::text::line::Line)&gt;&gt; (1,438,700 samples, 0.03%)</title><rect x="38.7308%" y="693" width="0.0333%" height="15" fill="rgb(216,96,41)" fg:x="1672317356" fg:w="1438700"/><text x="38.9808%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,438,700 samples, 0.03%)</title><rect x="38.7308%" y="677" width="0.0333%" height="15" fill="rgb(248,43,45)" fg:x="1672317356" fg:w="1438700"/><text x="38.9808%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,438,700 samples, 0.03%)</title><rect x="38.7308%" y="661" width="0.0333%" height="15" fill="rgb(217,222,7)" fg:x="1672317356" fg:w="1438700"/><text x="38.9808%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,438,700 samples, 0.03%)</title><rect x="38.7308%" y="645" width="0.0333%" height="15" fill="rgb(233,28,6)" fg:x="1672317356" fg:w="1438700"/><text x="38.9808%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (1,438,700 samples, 0.03%)</title><rect x="38.7308%" y="629" width="0.0333%" height="15" fill="rgb(231,218,15)" fg:x="1672317356" fg:w="1438700"/><text x="38.9808%" y="639.50"></text></g><g><title>cfree (1,438,700 samples, 0.03%)</title><rect x="38.7308%" y="613" width="0.0333%" height="15" fill="rgb(226,171,48)" fg:x="1672317356" fg:w="1438700"/><text x="38.9808%" y="623.50"></text></g><g><title>[libc.so.6] (1,438,700 samples, 0.03%)</title><rect x="38.7308%" y="597" width="0.0333%" height="15" fill="rgb(235,201,9)" fg:x="1672317356" fg:w="1438700"/><text x="38.9808%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;ratatui::widgets::paragraph::Paragraph&gt; (5,294,313 samples, 0.12%)</title><rect x="38.7308%" y="757" width="0.1226%" height="15" fill="rgb(217,80,15)" fg:x="1672317356" fg:w="5294313"/><text x="38.9808%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;ratatui::text::text::Text&gt; (3,855,613 samples, 0.09%)</title><rect x="38.7641%" y="741" width="0.0893%" height="15" fill="rgb(219,152,8)" fg:x="1673756056" fg:w="3855613"/><text x="39.0141%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ratatui::text::line::Line&gt;&gt; (3,855,613 samples, 0.09%)</title><rect x="38.7641%" y="725" width="0.0893%" height="15" fill="rgb(243,107,38)" fg:x="1673756056" fg:w="3855613"/><text x="39.0141%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,855,613 samples, 0.09%)</title><rect x="38.7641%" y="709" width="0.0893%" height="15" fill="rgb(231,17,5)" fg:x="1673756056" fg:w="3855613"/><text x="39.0141%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[ratatui::text::line::Line]&gt; (3,855,613 samples, 0.09%)</title><rect x="38.7641%" y="693" width="0.0893%" height="15" fill="rgb(209,25,54)" fg:x="1673756056" fg:w="3855613"/><text x="39.0141%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;ratatui::text::line::Line&gt; (3,855,613 samples, 0.09%)</title><rect x="38.7641%" y="677" width="0.0893%" height="15" fill="rgb(219,0,2)" fg:x="1673756056" fg:w="3855613"/><text x="39.0141%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ratatui::text::span::Span&gt;&gt; (3,855,613 samples, 0.09%)</title><rect x="38.7641%" y="661" width="0.0893%" height="15" fill="rgb(246,9,5)" fg:x="1673756056" fg:w="3855613"/><text x="39.0141%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;ratatui::text::span::Span&gt;&gt; (3,855,613 samples, 0.09%)</title><rect x="38.7641%" y="645" width="0.0893%" height="15" fill="rgb(226,159,4)" fg:x="1673756056" fg:w="3855613"/><text x="39.0141%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,855,613 samples, 0.09%)</title><rect x="38.7641%" y="629" width="0.0893%" height="15" fill="rgb(219,175,34)" fg:x="1673756056" fg:w="3855613"/><text x="39.0141%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,855,613 samples, 0.09%)</title><rect x="38.7641%" y="613" width="0.0893%" height="15" fill="rgb(236,10,46)" fg:x="1673756056" fg:w="3855613"/><text x="39.0141%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,855,613 samples, 0.09%)</title><rect x="38.7641%" y="597" width="0.0893%" height="15" fill="rgb(240,211,16)" fg:x="1673756056" fg:w="3855613"/><text x="39.0141%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (3,855,613 samples, 0.09%)</title><rect x="38.7641%" y="581" width="0.0893%" height="15" fill="rgb(205,3,43)" fg:x="1673756056" fg:w="3855613"/><text x="39.0141%" y="591.50"></text></g><g><title>cfree (3,855,613 samples, 0.09%)</title><rect x="38.7641%" y="565" width="0.0893%" height="15" fill="rgb(245,7,22)" fg:x="1673756056" fg:w="3855613"/><text x="39.0141%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (9,185,607 samples, 0.21%)</title><rect x="38.8973%" y="741" width="0.2127%" height="15" fill="rgb(239,132,32)" fg:x="1679507050" fg:w="9185607"/><text x="39.1473%" y="751.50"></text></g><g><title>&lt;&amp;mut T as core::fmt::Debug&gt;::fmt (12,897,723 samples, 0.30%)</title><rect x="39.1485%" y="661" width="0.2987%" height="15" fill="rgb(228,202,34)" fg:x="1690354671" fg:w="12897723"/><text x="39.3985%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,913,558 samples, 0.04%)</title><rect x="44.5977%" y="613" width="0.0443%" height="15" fill="rgb(254,200,22)" fg:x="1925639934" fg:w="1913558"/><text x="44.8477%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (10,430,044 samples, 0.24%)</title><rect x="44.5977%" y="629" width="0.2416%" height="15" fill="rgb(219,10,39)" fg:x="1925639934" fg:w="10430044"/><text x="44.8477%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (8,516,486 samples, 0.20%)</title><rect x="44.6420%" y="613" width="0.1972%" height="15" fill="rgb(226,210,39)" fg:x="1927553492" fg:w="8516486"/><text x="44.8920%" y="623.50"></text></g><g><title>realloc (8,516,486 samples, 0.20%)</title><rect x="44.6420%" y="597" width="0.1972%" height="15" fill="rgb(208,219,16)" fg:x="1927553492" fg:w="8516486"/><text x="44.8920%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6,281,187 samples, 0.15%)</title><rect x="45.0051%" y="565" width="0.1455%" height="15" fill="rgb(216,158,51)" fg:x="1943230391" fg:w="6281187"/><text x="45.2551%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6,281,187 samples, 0.15%)</title><rect x="45.0051%" y="549" width="0.1455%" height="15" fill="rgb(233,14,44)" fg:x="1943230391" fg:w="6281187"/><text x="45.2551%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (6,281,187 samples, 0.15%)</title><rect x="45.0051%" y="533" width="0.1455%" height="15" fill="rgb(237,97,39)" fg:x="1943230391" fg:w="6281187"/><text x="45.2551%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::needs_to_grow (6,281,187 samples, 0.15%)</title><rect x="45.0051%" y="517" width="0.1455%" height="15" fill="rgb(218,198,43)" fg:x="1943230391" fg:w="6281187"/><text x="45.2551%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::capacity (4,196,127 samples, 0.10%)</title><rect x="45.0534%" y="501" width="0.0972%" height="15" fill="rgb(231,104,20)" fg:x="1945315451" fg:w="4196127"/><text x="45.3034%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (141,843,454 samples, 3.29%)</title><rect x="43.3040%" y="645" width="3.2851%" height="15" fill="rgb(254,36,13)" fg:x="1869781002" fg:w="141843454"/><text x="43.5540%" y="655.50">&lt;al..</text></g><g><title>alloc::string::String::push_str (75,554,478 samples, 1.75%)</title><rect x="44.8393%" y="629" width="1.7498%" height="15" fill="rgb(248,14,50)" fg:x="1936069978" fg:w="75554478"/><text x="45.0893%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (75,554,478 samples, 1.75%)</title><rect x="44.8393%" y="613" width="1.7498%" height="15" fill="rgb(217,107,29)" fg:x="1936069978" fg:w="75554478"/><text x="45.0893%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (75,554,478 samples, 1.75%)</title><rect x="44.8393%" y="597" width="1.7498%" height="15" fill="rgb(251,169,33)" fg:x="1936069978" fg:w="75554478"/><text x="45.0893%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (75,554,478 samples, 1.75%)</title><rect x="44.8393%" y="581" width="1.7498%" height="15" fill="rgb(217,108,32)" fg:x="1936069978" fg:w="75554478"/><text x="45.0893%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (62,112,878 samples, 1.44%)</title><rect x="45.1506%" y="565" width="1.4385%" height="15" fill="rgb(219,66,42)" fg:x="1949511578" fg:w="62112878"/><text x="45.4006%" y="575.50"></text></g><g><title>[libc.so.6] (57,214,176 samples, 1.33%)</title><rect x="45.2640%" y="549" width="1.3251%" height="15" fill="rgb(206,180,7)" fg:x="1954410280" fg:w="57214176"/><text x="45.5140%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (20,390,260 samples, 0.47%)</title><rect x="46.5891%" y="645" width="0.4722%" height="15" fill="rgb(208,226,31)" fg:x="2011624456" fg:w="20390260"/><text x="46.8391%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,014,629 samples, 0.07%)</title><rect x="46.9915%" y="629" width="0.0698%" height="15" fill="rgb(218,26,49)" fg:x="2029000087" fg:w="3014629"/><text x="47.2415%" y="639.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,358,995 samples, 0.03%)</title><rect x="47.0299%" y="613" width="0.0315%" height="15" fill="rgb(233,197,48)" fg:x="2030655721" fg:w="1358995"/><text x="47.2799%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (5,550,675 samples, 0.13%)</title><rect x="47.9503%" y="565" width="0.1286%" height="15" fill="rgb(252,181,51)" fg:x="2070397569" fg:w="5550675"/><text x="48.2003%" y="575.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,770,643 samples, 0.04%)</title><rect x="48.0378%" y="549" width="0.0410%" height="15" fill="rgb(253,90,19)" fg:x="2074177601" fg:w="1770643"/><text x="48.2878%" y="559.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (17,723,866 samples, 0.41%)</title><rect x="47.7178%" y="597" width="0.4105%" height="15" fill="rgb(215,171,30)" fg:x="2060359805" fg:w="17723866"/><text x="47.9678%" y="607.50"></text></g><g><title>core::str::validations::next_code_point_reverse (17,723,866 samples, 0.41%)</title><rect x="47.7178%" y="581" width="0.4105%" height="15" fill="rgb(214,222,9)" fg:x="2060359805" fg:w="17723866"/><text x="47.9678%" y="591.50"></text></g><g><title>core::str::validations::utf8_acc_cont_byte (2,135,427 samples, 0.05%)</title><rect x="48.0789%" y="565" width="0.0495%" height="15" fill="rgb(223,3,22)" fg:x="2075948244" fg:w="2135427"/><text x="48.3289%" y="575.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;i8&gt; for isize&gt;::from (1,787,403 samples, 0.04%)</title><rect x="48.1283%" y="581" width="0.0414%" height="15" fill="rgb(225,196,46)" fg:x="2078083671" fg:w="1787403"/><text x="48.3783%" y="591.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add_signed (3,097,943 samples, 0.07%)</title><rect x="48.1697%" y="581" width="0.0717%" height="15" fill="rgb(209,110,37)" fg:x="2079871074" fg:w="3097943"/><text x="48.4197%" y="591.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (3,097,943 samples, 0.07%)</title><rect x="48.1697%" y="565" width="0.0717%" height="15" fill="rgb(249,89,12)" fg:x="2079871074" fg:w="3097943"/><text x="48.4197%" y="575.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (110,823,839 samples, 2.57%)</title><rect x="47.0614%" y="613" width="2.5667%" height="15" fill="rgb(226,27,33)" fg:x="2032014716" fg:w="110823839"/><text x="47.3114%" y="623.50">co..</text></g><g><title>unicode_width::tables::str_width::_{{closure}} (64,754,884 samples, 1.50%)</title><rect x="48.1283%" y="597" width="1.4997%" height="15" fill="rgb(213,82,22)" fg:x="2078083671" fg:w="64754884"/><text x="48.3783%" y="607.50"></text></g><g><title>unicode_width::tables::width_in_str (59,869,538 samples, 1.39%)</title><rect x="48.2415%" y="581" width="1.3866%" height="15" fill="rgb(248,140,0)" fg:x="2082969017" fg:w="59869538"/><text x="48.4915%" y="591.50"></text></g><g><title>unicode_width::tables::lookup_width (13,035,419 samples, 0.30%)</title><rect x="49.3261%" y="565" width="0.3019%" height="15" fill="rgb(228,106,3)" fg:x="2129803136" fg:w="13035419"/><text x="49.5761%" y="575.50"></text></g><g><title>&lt;str as unicode_width::UnicodeWidthStr&gt;::width (112,278,199 samples, 2.60%)</title><rect x="47.0614%" y="645" width="2.6004%" height="15" fill="rgb(209,23,37)" fg:x="2032014716" fg:w="112278199"/><text x="47.3114%" y="655.50">&lt;s..</text></g><g><title>unicode_width::tables::str_width (112,278,199 samples, 2.60%)</title><rect x="47.0614%" y="629" width="2.6004%" height="15" fill="rgb(241,93,50)" fg:x="2032014716" fg:w="112278199"/><text x="47.3114%" y="639.50">un..</text></g><g><title>core::str::&lt;impl str&gt;::chars (1,454,360 samples, 0.03%)</title><rect x="49.6280%" y="613" width="0.0337%" height="15" fill="rgb(253,46,43)" fg:x="2142838555" fg:w="1454360"/><text x="49.8780%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1,454,360 samples, 0.03%)</title><rect x="49.6280%" y="597" width="0.0337%" height="15" fill="rgb(226,206,43)" fg:x="2142838555" fg:w="1454360"/><text x="49.8780%" y="607.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1,454,360 samples, 0.03%)</title><rect x="49.6280%" y="581" width="0.0337%" height="15" fill="rgb(217,54,7)" fg:x="2142838555" fg:w="1454360"/><text x="49.8780%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1,454,360 samples, 0.03%)</title><rect x="49.6280%" y="565" width="0.0337%" height="15" fill="rgb(223,5,52)" fg:x="2142838555" fg:w="1454360"/><text x="49.8780%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4,976,475 samples, 0.12%)</title><rect x="49.6617%" y="645" width="0.1153%" height="15" fill="rgb(206,52,46)" fg:x="2144292915" fg:w="4976475"/><text x="49.9117%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3,196,137 samples, 0.07%)</title><rect x="49.7029%" y="629" width="0.0740%" height="15" fill="rgb(253,136,11)" fg:x="2146073253" fg:w="3196137"/><text x="49.9529%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (3,196,137 samples, 0.07%)</title><rect x="49.7029%" y="613" width="0.0740%" height="15" fill="rgb(208,106,33)" fg:x="2146073253" fg:w="3196137"/><text x="49.9529%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3,196,137 samples, 0.07%)</title><rect x="49.7029%" y="597" width="0.0740%" height="15" fill="rgb(206,54,4)" fg:x="2146073253" fg:w="3196137"/><text x="49.9529%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,196,137 samples, 0.07%)</title><rect x="49.7029%" y="581" width="0.0740%" height="15" fill="rgb(213,3,15)" fg:x="2146073253" fg:w="3196137"/><text x="49.9529%" y="591.50"></text></g><g><title>malloc (3,196,137 samples, 0.07%)</title><rect x="49.7029%" y="565" width="0.0740%" height="15" fill="rgb(252,211,39)" fg:x="2146073253" fg:w="3196137"/><text x="49.9529%" y="575.50"></text></g><g><title>core::cmp::PartialEq::ne (96,875,491 samples, 2.24%)</title><rect x="49.7770%" y="645" width="2.2436%" height="15" fill="rgb(223,6,36)" fg:x="2149269390" fg:w="96875491"/><text x="50.0270%" y="655.50">c..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (96,875,491 samples, 2.24%)</title><rect x="49.7770%" y="629" width="2.2436%" height="15" fill="rgb(252,169,45)" fg:x="2149269390" fg:w="96875491"/><text x="50.0270%" y="639.50">&lt;..</text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (W,V,U,T)&gt;::eq (88,558,523 samples, 2.05%)</title><rect x="49.9696%" y="613" width="2.0510%" height="15" fill="rgb(212,48,26)" fg:x="2157586358" fg:w="88558523"/><text x="50.2196%" y="623.50">c..</text></g><g><title>&lt;ratatui::style::color::Color as core::cmp::PartialEq&gt;::eq (41,056,915 samples, 0.95%)</title><rect x="51.0697%" y="597" width="0.9509%" height="15" fill="rgb(251,102,48)" fg:x="2205087966" fg:w="41056915"/><text x="51.3197%" y="607.50"></text></g><g><title>core::cmp::max (20,544,953 samples, 0.48%)</title><rect x="52.0206%" y="645" width="0.4758%" height="15" fill="rgb(243,208,16)" fg:x="2246144881" fg:w="20544953"/><text x="52.2706%" y="655.50"></text></g><g><title>core::cmp::Ord::max (20,544,953 samples, 0.48%)</title><rect x="52.0206%" y="629" width="0.4758%" height="15" fill="rgb(219,96,24)" fg:x="2246144881" fg:w="20544953"/><text x="52.2706%" y="639.50"></text></g><g><title>core::cmp::max_by (20,544,953 samples, 0.48%)</title><rect x="52.0206%" y="613" width="0.4758%" height="15" fill="rgb(219,33,29)" fg:x="2246144881" fg:w="20544953"/><text x="52.2706%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,787,403 samples, 0.04%)</title><rect x="52.6309%" y="405" width="0.0414%" height="15" fill="rgb(223,176,5)" fg:x="2272494739" fg:w="1787403"/><text x="52.8809%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,787,403 samples, 0.04%)</title><rect x="52.6309%" y="389" width="0.0414%" height="15" fill="rgb(228,140,14)" fg:x="2272494739" fg:w="1787403"/><text x="52.8809%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,787,403 samples, 0.04%)</title><rect x="52.6309%" y="373" width="0.0414%" height="15" fill="rgb(217,179,31)" fg:x="2272494739" fg:w="1787403"/><text x="52.8809%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::needs_to_grow (1,787,403 samples, 0.04%)</title><rect x="52.6309%" y="357" width="0.0414%" height="15" fill="rgb(230,9,30)" fg:x="2272494739" fg:w="1787403"/><text x="52.8809%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1,787,403 samples, 0.04%)</title><rect x="52.6309%" y="341" width="0.0414%" height="15" fill="rgb(230,136,20)" fg:x="2272494739" fg:w="1787403"/><text x="52.8809%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_str (6,797,251 samples, 0.16%)</title><rect x="52.5906%" y="501" width="0.1574%" height="15" fill="rgb(215,210,22)" fg:x="2270755324" fg:w="6797251"/><text x="52.8406%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6,797,251 samples, 0.16%)</title><rect x="52.5906%" y="485" width="0.1574%" height="15" fill="rgb(218,43,5)" fg:x="2270755324" fg:w="6797251"/><text x="52.8406%" y="495.50"></text></g><g><title>alloc::string::String::push_str (5,057,836 samples, 0.12%)</title><rect x="52.6309%" y="469" width="0.1171%" height="15" fill="rgb(216,11,5)" fg:x="2272494739" fg:w="5057836"/><text x="52.8809%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5,057,836 samples, 0.12%)</title><rect x="52.6309%" y="453" width="0.1171%" height="15" fill="rgb(209,82,29)" fg:x="2272494739" fg:w="5057836"/><text x="52.8809%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5,057,836 samples, 0.12%)</title><rect x="52.6309%" y="437" width="0.1171%" height="15" fill="rgb(244,115,12)" fg:x="2272494739" fg:w="5057836"/><text x="52.8809%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5,057,836 samples, 0.12%)</title><rect x="52.6309%" y="421" width="0.1171%" height="15" fill="rgb(222,82,18)" fg:x="2272494739" fg:w="5057836"/><text x="52.8809%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,270,433 samples, 0.08%)</title><rect x="52.6723%" y="405" width="0.0757%" height="15" fill="rgb(249,227,8)" fg:x="2274282142" fg:w="3270433"/><text x="52.9223%" y="415.50"></text></g><g><title>[libc.so.6] (3,270,433 samples, 0.08%)</title><rect x="52.6723%" y="389" width="0.0757%" height="15" fill="rgb(253,141,45)" fg:x="2274282142" fg:w="3270433"/><text x="52.9223%" y="399.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (17,867,019 samples, 0.41%)</title><rect x="52.5906%" y="565" width="0.4138%" height="15" fill="rgb(234,184,4)" fg:x="2270755324" fg:w="17867019"/><text x="52.8406%" y="575.50"></text></g><g><title>core::fmt::builders::DebugStruct::field_with (17,867,019 samples, 0.41%)</title><rect x="52.5906%" y="549" width="0.4138%" height="15" fill="rgb(218,194,23)" fg:x="2270755324" fg:w="17867019"/><text x="52.8406%" y="559.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (17,867,019 samples, 0.41%)</title><rect x="52.5906%" y="533" width="0.4138%" height="15" fill="rgb(235,66,41)" fg:x="2270755324" fg:w="17867019"/><text x="52.8406%" y="543.50"></text></g><g><title>core::fmt::builders::DebugStruct::field_with::_{{closure}} (17,867,019 samples, 0.41%)</title><rect x="52.5906%" y="517" width="0.4138%" height="15" fill="rgb(245,217,1)" fg:x="2270755324" fg:w="17867019"/><text x="52.8406%" y="527.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::_{{closure}} (11,069,768 samples, 0.26%)</title><rect x="52.7480%" y="501" width="0.2564%" height="15" fill="rgb(229,91,1)" fg:x="2277552575" fg:w="11069768"/><text x="52.9980%" y="511.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u16&gt;::fmt (6,850,694 samples, 0.16%)</title><rect x="52.8457%" y="485" width="0.1587%" height="15" fill="rgb(207,101,30)" fg:x="2281771649" fg:w="6850694"/><text x="53.0957%" y="495.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u16&gt;::_fmt (6,850,694 samples, 0.16%)</title><rect x="52.8457%" y="469" width="0.1587%" height="15" fill="rgb(223,82,49)" fg:x="2281771649" fg:w="6850694"/><text x="53.0957%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4,110,533 samples, 0.10%)</title><rect x="52.9092%" y="453" width="0.0952%" height="15" fill="rgb(218,167,17)" fg:x="2284511810" fg:w="4110533"/><text x="53.1592%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (21,731,823 samples, 0.50%)</title><rect x="52.5906%" y="613" width="0.5033%" height="15" fill="rgb(208,103,14)" fg:x="2270755324" fg:w="21731823"/><text x="52.8406%" y="623.50"></text></g><g><title>&lt;ratatui::layout::rect::Rect as core::fmt::Debug&gt;::fmt (21,731,823 samples, 0.50%)</title><rect x="52.5906%" y="597" width="0.5033%" height="15" fill="rgb(238,20,8)" fg:x="2270755324" fg:w="21731823"/><text x="52.8406%" y="607.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field4_finish (21,731,823 samples, 0.50%)</title><rect x="52.5906%" y="581" width="0.5033%" height="15" fill="rgb(218,80,54)" fg:x="2270755324" fg:w="21731823"/><text x="52.8406%" y="591.50"></text></g><g><title>core::fmt::builders::debug_struct_new (3,864,804 samples, 0.09%)</title><rect x="53.0044%" y="565" width="0.0895%" height="15" fill="rgb(240,144,17)" fg:x="2288622343" fg:w="3864804"/><text x="53.2544%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_str (3,864,804 samples, 0.09%)</title><rect x="53.0044%" y="549" width="0.0895%" height="15" fill="rgb(245,27,50)" fg:x="2288622343" fg:w="3864804"/><text x="53.2544%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3,864,804 samples, 0.09%)</title><rect x="53.0044%" y="533" width="0.0895%" height="15" fill="rgb(251,51,7)" fg:x="2288622343" fg:w="3864804"/><text x="53.2544%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (3,864,804 samples, 0.09%)</title><rect x="53.0044%" y="517" width="0.0895%" height="15" fill="rgb(245,217,29)" fg:x="2288622343" fg:w="3864804"/><text x="53.2544%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,864,804 samples, 0.09%)</title><rect x="53.0044%" y="501" width="0.0895%" height="15" fill="rgb(221,176,29)" fg:x="2288622343" fg:w="3864804"/><text x="53.2544%" y="511.50"></text></g><g><title>realloc (3,864,804 samples, 0.09%)</title><rect x="53.0044%" y="485" width="0.0895%" height="15" fill="rgb(212,180,24)" fg:x="2288622343" fg:w="3864804"/><text x="53.2544%" y="495.50"></text></g><g><title>[libc.so.6] (3,864,804 samples, 0.09%)</title><rect x="53.0044%" y="469" width="0.0895%" height="15" fill="rgb(254,24,2)" fg:x="2288622343" fg:w="3864804"/><text x="53.2544%" y="479.50"></text></g><g><title>[libc.so.6] (1,777,787 samples, 0.04%)</title><rect x="53.0527%" y="453" width="0.0412%" height="15" fill="rgb(230,100,2)" fg:x="2290709360" fg:w="1777787"/><text x="53.3027%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (5,414,519 samples, 0.13%)</title><rect x="53.1532%" y="597" width="0.1254%" height="15" fill="rgb(219,142,25)" fg:x="2295049365" fg:w="5414519"/><text x="53.4032%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (5,414,519 samples, 0.13%)</title><rect x="53.1532%" y="581" width="0.1254%" height="15" fill="rgb(240,73,43)" fg:x="2295049365" fg:w="5414519"/><text x="53.4032%" y="591.50"></text></g><g><title>realloc (5,414,519 samples, 0.13%)</title><rect x="53.1532%" y="565" width="0.1254%" height="15" fill="rgb(214,114,15)" fg:x="2295049365" fg:w="5414519"/><text x="53.4032%" y="575.50"></text></g><g><title>[libc.so.6] (2,042,871 samples, 0.05%)</title><rect x="53.2313%" y="549" width="0.0473%" height="15" fill="rgb(207,130,4)" fg:x="2298421013" fg:w="2042871"/><text x="53.4813%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (14,066,727 samples, 0.33%)</title><rect x="53.0939%" y="613" width="0.3258%" height="15" fill="rgb(221,25,40)" fg:x="2292487147" fg:w="14066727"/><text x="53.3439%" y="623.50"></text></g><g><title>alloc::string::String::push_str (6,089,990 samples, 0.14%)</title><rect x="53.2786%" y="597" width="0.1410%" height="15" fill="rgb(241,184,7)" fg:x="2300463884" fg:w="6089990"/><text x="53.5286%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6,089,990 samples, 0.14%)</title><rect x="53.2786%" y="581" width="0.1410%" height="15" fill="rgb(235,159,4)" fg:x="2300463884" fg:w="6089990"/><text x="53.5286%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6,089,990 samples, 0.14%)</title><rect x="53.2786%" y="565" width="0.1410%" height="15" fill="rgb(214,87,48)" fg:x="2300463884" fg:w="6089990"/><text x="53.5286%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6,089,990 samples, 0.14%)</title><rect x="53.2786%" y="549" width="0.1410%" height="15" fill="rgb(246,198,24)" fg:x="2300463884" fg:w="6089990"/><text x="53.5286%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,822,872 samples, 0.09%)</title><rect x="53.3311%" y="533" width="0.0885%" height="15" fill="rgb(209,66,40)" fg:x="2302731002" fg:w="3822872"/><text x="53.5811%" y="543.50"></text></g><g><title>[libc.so.6] (3,822,872 samples, 0.09%)</title><rect x="53.3311%" y="517" width="0.0885%" height="15" fill="rgb(233,147,39)" fg:x="2302731002" fg:w="3822872"/><text x="53.5811%" y="527.50"></text></g><g><title>&lt;ratatui::style::Modifier as core::fmt::Debug&gt;::fmt (2,841,904 samples, 0.07%)</title><rect x="53.4197%" y="613" width="0.0658%" height="15" fill="rgb(231,145,52)" fg:x="2306553874" fg:w="2841904"/><text x="53.6697%" y="623.50"></text></g><g><title>ratatui::style::_::&lt;impl ratatui::style::Modifier&gt;::is_empty (2,841,904 samples, 0.07%)</title><rect x="53.4197%" y="597" width="0.0658%" height="15" fill="rgb(206,20,26)" fg:x="2306553874" fg:w="2841904"/><text x="53.6697%" y="607.50"></text></g><g><title>ratatui::style::_::InternalBitFlags::is_empty (2,841,904 samples, 0.07%)</title><rect x="53.4197%" y="581" width="0.0658%" height="15" fill="rgb(238,220,4)" fg:x="2306553874" fg:w="2841904"/><text x="53.6697%" y="591.50"></text></g><g><title>&lt;ratatui::style::color::Color as core::fmt::Debug&gt;::fmt (6,472,948 samples, 0.15%)</title><rect x="53.4855%" y="613" width="0.1499%" height="15" fill="rgb(252,195,42)" fg:x="2309395778" fg:w="6472948"/><text x="53.7355%" y="623.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (9,007,706 samples, 0.21%)</title><rect x="53.6354%" y="613" width="0.2086%" height="15" fill="rgb(209,10,6)" fg:x="2315868726" fg:w="9007706"/><text x="53.8854%" y="623.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (9,007,706 samples, 0.21%)</title><rect x="53.6354%" y="597" width="0.2086%" height="15" fill="rgb(229,3,52)" fg:x="2315868726" fg:w="9007706"/><text x="53.8854%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5,854,860 samples, 0.14%)</title><rect x="53.7084%" y="581" width="0.1356%" height="15" fill="rgb(253,49,37)" fg:x="2319021572" fg:w="5854860"/><text x="53.9584%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (60,142,473 samples, 1.39%)</title><rect x="52.4964%" y="645" width="1.3929%" height="15" fill="rgb(240,103,49)" fg:x="2266689834" fg:w="60142473"/><text x="52.7464%" y="655.50"></text></g><g><title>core::fmt::write (60,142,473 samples, 1.39%)</title><rect x="52.4964%" y="629" width="1.3929%" height="15" fill="rgb(250,182,30)" fg:x="2266689834" fg:w="60142473"/><text x="52.7464%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1,955,875 samples, 0.05%)</title><rect x="53.8440%" y="613" width="0.0453%" height="15" fill="rgb(248,8,30)" fg:x="2324876432" fg:w="1955875"/><text x="54.0940%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_str (48,390,774 samples, 1.12%)</title><rect x="53.8893%" y="645" width="1.1207%" height="15" fill="rgb(237,120,30)" fg:x="2326832307" fg:w="48390774"/><text x="54.1393%" y="655.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_sub (18,317,508 samples, 0.42%)</title><rect x="55.0100%" y="645" width="0.4242%" height="15" fill="rgb(221,146,34)" fg:x="2375223081" fg:w="18317508"/><text x="55.2600%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,usize,ratatui::style::color::Color,ratatui::style::color::Color,ratatui::style::color::Color,ratatui::style::Modifier)&gt;&gt; (5,058,936 samples, 0.12%)</title><rect x="55.4343%" y="645" width="0.1172%" height="15" fill="rgb(242,55,13)" fg:x="2393540589" fg:w="5058936"/><text x="55.6843%" y="655.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,058,936 samples, 0.12%)</title><rect x="55.4343%" y="629" width="0.1172%" height="15" fill="rgb(242,112,31)" fg:x="2393540589" fg:w="5058936"/><text x="55.6843%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(usize,usize,ratatui::style::color::Color,ratatui::style::color::Color,ratatui::style::color::Color,ratatui::style::Modifier),alloc::alloc::Global&gt;&gt; (5,058,936 samples, 0.12%)</title><rect x="55.4343%" y="613" width="0.1172%" height="15" fill="rgb(249,192,27)" fg:x="2393540589" fg:w="5058936"/><text x="55.6843%" y="623.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,058,936 samples, 0.12%)</title><rect x="55.4343%" y="597" width="0.1172%" height="15" fill="rgb(208,204,44)" fg:x="2393540589" fg:w="5058936"/><text x="55.6843%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(usize,usize,ratatui::style::color::Color,ratatui::style::color::Color,ratatui::style::color::Color,ratatui::style::Modifier)&gt;&gt; (5,058,936 samples, 0.12%)</title><rect x="55.4343%" y="581" width="0.1172%" height="15" fill="rgb(208,93,54)" fg:x="2393540589" fg:w="5058936"/><text x="55.6843%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,058,936 samples, 0.12%)</title><rect x="55.4343%" y="565" width="0.1172%" height="15" fill="rgb(242,1,31)" fg:x="2393540589" fg:w="5058936"/><text x="55.6843%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,058,936 samples, 0.12%)</title><rect x="55.4343%" y="549" width="0.1172%" height="15" fill="rgb(241,83,25)" fg:x="2393540589" fg:w="5058936"/><text x="55.6843%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,058,936 samples, 0.12%)</title><rect x="55.4343%" y="533" width="0.1172%" height="15" fill="rgb(205,169,50)" fg:x="2393540589" fg:w="5058936"/><text x="55.6843%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (5,058,936 samples, 0.12%)</title><rect x="55.4343%" y="517" width="0.1172%" height="15" fill="rgb(239,186,37)" fg:x="2393540589" fg:w="5058936"/><text x="55.6843%" y="527.50"></text></g><g><title>cfree (5,058,936 samples, 0.12%)</title><rect x="55.4343%" y="501" width="0.1172%" height="15" fill="rgb(205,221,10)" fg:x="2393540589" fg:w="5058936"/><text x="55.6843%" y="511.50"></text></g><g><title>[libc.so.6] (1,653,556 samples, 0.04%)</title><rect x="55.5131%" y="485" width="0.0383%" height="15" fill="rgb(218,196,15)" fg:x="2396945969" fg:w="1653556"/><text x="55.7631%" y="495.50"></text></g><g><title>compact_str::repr::Repr::last_byte (69,133,136 samples, 1.60%)</title><rect x="56.0387%" y="581" width="1.6011%" height="15" fill="rgb(218,196,35)" fg:x="2419636963" fg:w="69133136"/><text x="56.2887%" y="591.50"></text></g><g><title>core::cmp::min (42,615,616 samples, 0.99%)</title><rect x="57.6398%" y="581" width="0.9870%" height="15" fill="rgb(233,63,24)" fg:x="2488770099" fg:w="42615616"/><text x="57.8898%" y="591.50"></text></g><g><title>core::cmp::Ord::min (42,615,616 samples, 0.99%)</title><rect x="57.6398%" y="565" width="0.9870%" height="15" fill="rgb(225,8,4)" fg:x="2488770099" fg:w="42615616"/><text x="57.8898%" y="575.50"></text></g><g><title>core::cmp::min_by (42,615,616 samples, 0.99%)</title><rect x="57.6398%" y="549" width="0.9870%" height="15" fill="rgb(234,105,35)" fg:x="2488770099" fg:w="42615616"/><text x="57.8898%" y="559.50"></text></g><g><title>alloc::fmt::format (855,353,217 samples, 19.81%)</title><rect x="39.1100%" y="741" width="19.8099%" height="15" fill="rgb(236,21,32)" fg:x="1688692657" fg:w="855353217"/><text x="39.3600%" y="751.50">alloc::fmt::format</text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (855,353,217 samples, 19.81%)</title><rect x="39.1100%" y="725" width="19.8099%" height="15" fill="rgb(228,109,6)" fg:x="1688692657" fg:w="855353217"/><text x="39.3600%" y="735.50">core::option::Option&lt;T&gt;::map_or..</text></g><g><title>alloc::fmt::format::_{{closure}} (855,353,217 samples, 19.81%)</title><rect x="39.1100%" y="709" width="19.8099%" height="15" fill="rgb(229,215,31)" fg:x="1688692657" fg:w="855353217"/><text x="39.3600%" y="719.50">alloc::fmt::format::_{{closure}}</text></g><g><title>alloc::fmt::format::format_inner (855,353,217 samples, 19.81%)</title><rect x="39.1100%" y="693" width="19.8099%" height="15" fill="rgb(221,52,54)" fg:x="1688692657" fg:w="855353217"/><text x="39.3600%" y="703.50">alloc::fmt::format::format_inner</text></g><g><title>core::fmt::write (855,353,217 samples, 19.81%)</title><rect x="39.1100%" y="677" width="19.8099%" height="15" fill="rgb(252,129,43)" fg:x="1688692657" fg:w="855353217"/><text x="39.3600%" y="687.50">core::fmt::write</text></g><g><title>&lt;ratatui::buffer::buffer::Buffer as core::fmt::Debug&gt;::fmt (840,793,480 samples, 19.47%)</title><rect x="39.4472%" y="661" width="19.4727%" height="15" fill="rgb(248,183,27)" fg:x="1703252394" fg:w="840793480"/><text x="39.6972%" y="671.50">&lt;ratatui::buffer::buffer::Buffe..</text></g><g><title>ratatui::buffer::cell::Cell::symbol (145,446,349 samples, 3.37%)</title><rect x="55.5514%" y="645" width="3.3685%" height="15" fill="rgb(250,0,22)" fg:x="2398599525" fg:w="145446349"/><text x="55.8014%" y="655.50">rat..</text></g><g><title>compact_str::CompactString::as_str (145,446,349 samples, 3.37%)</title><rect x="55.5514%" y="629" width="3.3685%" height="15" fill="rgb(213,166,10)" fg:x="2398599525" fg:w="145446349"/><text x="55.8014%" y="639.50">com..</text></g><g><title>compact_str::repr::Repr::as_str (145,446,349 samples, 3.37%)</title><rect x="55.5514%" y="613" width="3.3685%" height="15" fill="rgb(207,163,36)" fg:x="2398599525" fg:w="145446349"/><text x="55.8014%" y="623.50">com..</text></g><g><title>compact_str::repr::Repr::as_slice (145,446,349 samples, 3.37%)</title><rect x="55.5514%" y="597" width="3.3685%" height="15" fill="rgb(208,122,22)" fg:x="2398599525" fg:w="145446349"/><text x="55.8014%" y="607.50">com..</text></g><g><title>core::num::&lt;impl u8&gt;::wrapping_sub (12,660,159 samples, 0.29%)</title><rect x="58.6268%" y="581" width="0.2932%" height="15" fill="rgb(207,104,49)" fg:x="2531385715" fg:w="12660159"/><text x="58.8768%" y="591.50"></text></g><g><title>alloc::string::String::as_bytes (1,495,389 samples, 0.03%)</title><rect x="58.9200%" y="741" width="0.0346%" height="15" fill="rgb(248,211,50)" fg:x="2544045874" fg:w="1495389"/><text x="59.1700%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1,495,389 samples, 0.03%)</title><rect x="58.9200%" y="725" width="0.0346%" height="15" fill="rgb(217,13,45)" fg:x="2544045874" fg:w="1495389"/><text x="59.1700%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1,495,389 samples, 0.03%)</title><rect x="58.9200%" y="709" width="0.0346%" height="15" fill="rgb(211,216,49)" fg:x="2544045874" fg:w="1495389"/><text x="59.1700%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1,495,389 samples, 0.03%)</title><rect x="58.9200%" y="693" width="0.0346%" height="15" fill="rgb(221,58,53)" fg:x="2544045874" fg:w="1495389"/><text x="59.1700%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (1,495,389 samples, 0.03%)</title><rect x="58.9200%" y="677" width="0.0346%" height="15" fill="rgb(220,112,41)" fg:x="2544045874" fg:w="1495389"/><text x="59.1700%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (1,495,389 samples, 0.03%)</title><rect x="58.9200%" y="661" width="0.0346%" height="15" fill="rgb(236,38,28)" fg:x="2544045874" fg:w="1495389"/><text x="59.1700%" y="671.50"></text></g><g><title>__rust_dealloc (4,292,917 samples, 0.10%)</title><rect x="58.9948%" y="629" width="0.0994%" height="15" fill="rgb(227,195,22)" fg:x="2547277347" fg:w="4292917"/><text x="59.2448%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (12,623,258 samples, 0.29%)</title><rect x="58.9546%" y="741" width="0.2924%" height="15" fill="rgb(214,55,33)" fg:x="2545541263" fg:w="12623258"/><text x="59.2046%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (12,623,258 samples, 0.29%)</title><rect x="58.9546%" y="725" width="0.2924%" height="15" fill="rgb(248,80,13)" fg:x="2545541263" fg:w="12623258"/><text x="59.2046%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (12,623,258 samples, 0.29%)</title><rect x="58.9546%" y="709" width="0.2924%" height="15" fill="rgb(238,52,6)" fg:x="2545541263" fg:w="12623258"/><text x="59.2046%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,623,258 samples, 0.29%)</title><rect x="58.9546%" y="693" width="0.2924%" height="15" fill="rgb(224,198,47)" fg:x="2545541263" fg:w="12623258"/><text x="59.2046%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (10,887,174 samples, 0.25%)</title><rect x="58.9948%" y="677" width="0.2521%" height="15" fill="rgb(233,171,20)" fg:x="2547277347" fg:w="10887174"/><text x="59.2448%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10,887,174 samples, 0.25%)</title><rect x="58.9948%" y="661" width="0.2521%" height="15" fill="rgb(241,30,25)" fg:x="2547277347" fg:w="10887174"/><text x="59.2448%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (10,887,174 samples, 0.25%)</title><rect x="58.9948%" y="645" width="0.2521%" height="15" fill="rgb(207,171,38)" fg:x="2547277347" fg:w="10887174"/><text x="59.2448%" y="655.50"></text></g><g><title>cfree (6,594,257 samples, 0.15%)</title><rect x="59.0942%" y="629" width="0.1527%" height="15" fill="rgb(234,70,1)" fg:x="2551570264" fg:w="6594257"/><text x="59.3442%" y="639.50"></text></g><g><title>[libc.so.6] (1,853,509 samples, 0.04%)</title><rect x="59.2040%" y="613" width="0.0429%" height="15" fill="rgb(232,178,18)" fg:x="2556311012" fg:w="1853509"/><text x="59.4540%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::File&gt; (1,719,201 samples, 0.04%)</title><rect x="59.2470%" y="741" width="0.0398%" height="15" fill="rgb(241,78,40)" fg:x="2558164521" fg:w="1719201"/><text x="59.4970%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::pal::unix::fs::File&gt; (1,719,201 samples, 0.04%)</title><rect x="59.2470%" y="725" width="0.0398%" height="15" fill="rgb(222,35,25)" fg:x="2558164521" fg:w="1719201"/><text x="59.4970%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::pal::unix::fd::FileDesc&gt; (1,719,201 samples, 0.04%)</title><rect x="59.2470%" y="709" width="0.0398%" height="15" fill="rgb(207,92,16)" fg:x="2558164521" fg:w="1719201"/><text x="59.4970%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (1,719,201 samples, 0.04%)</title><rect x="59.2470%" y="693" width="0.0398%" height="15" fill="rgb(216,59,51)" fg:x="2558164521" fg:w="1719201"/><text x="59.4970%" y="703.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (1,719,201 samples, 0.04%)</title><rect x="59.2470%" y="677" width="0.0398%" height="15" fill="rgb(213,80,28)" fg:x="2558164521" fg:w="1719201"/><text x="59.4970%" y="687.50"></text></g><g><title>__close (1,719,201 samples, 0.04%)</title><rect x="59.2470%" y="661" width="0.0398%" height="15" fill="rgb(220,93,7)" fg:x="2558164521" fg:w="1719201"/><text x="59.4970%" y="671.50"></text></g><g><title>std::fs::File::create (6,975,440 samples, 0.16%)</title><rect x="59.2868%" y="741" width="0.1616%" height="15" fill="rgb(225,24,44)" fg:x="2559883722" fg:w="6975440"/><text x="59.5368%" y="751.50"></text></g><g><title>std::fs::OpenOptions::open (6,975,440 samples, 0.16%)</title><rect x="59.2868%" y="725" width="0.1616%" height="15" fill="rgb(243,74,40)" fg:x="2559883722" fg:w="6975440"/><text x="59.5368%" y="735.50"></text></g><g><title>std::fs::OpenOptions::_open (6,975,440 samples, 0.16%)</title><rect x="59.2868%" y="709" width="0.1616%" height="15" fill="rgb(228,39,7)" fg:x="2559883722" fg:w="6975440"/><text x="59.5368%" y="719.50"></text></g><g><title>std::sys::pal::unix::fs::File::open (6,975,440 samples, 0.16%)</title><rect x="59.2868%" y="693" width="0.1616%" height="15" fill="rgb(227,79,8)" fg:x="2559883722" fg:w="6975440"/><text x="59.5368%" y="703.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_path_with_cstr (6,975,440 samples, 0.16%)</title><rect x="59.2868%" y="677" width="0.1616%" height="15" fill="rgb(236,58,11)" fg:x="2559883722" fg:w="6975440"/><text x="59.5368%" y="687.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr (6,975,440 samples, 0.16%)</title><rect x="59.2868%" y="661" width="0.1616%" height="15" fill="rgb(249,63,35)" fg:x="2559883722" fg:w="6975440"/><text x="59.5368%" y="671.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr_stack (6,975,440 samples, 0.16%)</title><rect x="59.2868%" y="645" width="0.1616%" height="15" fill="rgb(252,114,16)" fg:x="2559883722" fg:w="6975440"/><text x="59.5368%" y="655.50"></text></g><g><title>std::sys::pal::unix::fs::File::open::_{{closure}} (6,975,440 samples, 0.16%)</title><rect x="59.2868%" y="629" width="0.1616%" height="15" fill="rgb(254,151,24)" fg:x="2559883722" fg:w="6975440"/><text x="59.5368%" y="639.50"></text></g><g><title>std::sys::pal::unix::fs::File::open_c (6,975,440 samples, 0.16%)</title><rect x="59.2868%" y="613" width="0.1616%" height="15" fill="rgb(253,54,39)" fg:x="2559883722" fg:w="6975440"/><text x="59.5368%" y="623.50"></text></g><g><title>std::sys::pal::unix::cvt_r (5,242,029 samples, 0.12%)</title><rect x="59.3269%" y="597" width="0.1214%" height="15" fill="rgb(243,25,45)" fg:x="2561617133" fg:w="5242029"/><text x="59.5769%" y="607.50"></text></g><g><title>std::sys::pal::unix::fs::File::open_c::_{{closure}} (5,242,029 samples, 0.12%)</title><rect x="59.3269%" y="581" width="0.1214%" height="15" fill="rgb(234,134,9)" fg:x="2561617133" fg:w="5242029"/><text x="59.5769%" y="591.50"></text></g><g><title>open64 (5,242,029 samples, 0.12%)</title><rect x="59.3269%" y="565" width="0.1214%" height="15" fill="rgb(227,166,31)" fg:x="2561617133" fg:w="5242029"/><text x="59.5769%" y="575.50"></text></g><g><title>emi_web::tui::frame_to_file (892,284,198 samples, 20.67%)</title><rect x="38.8534%" y="757" width="20.6653%" height="15" fill="rgb(245,143,41)" fg:x="1677611669" fg:w="892284198"/><text x="39.1034%" y="767.50">emi_web::tui::frame_to_file</text></g><g><title>std::io::Write::write_all (3,036,705 samples, 0.07%)</title><rect x="59.4483%" y="741" width="0.0703%" height="15" fill="rgb(238,181,32)" fg:x="2566859162" fg:w="3036705"/><text x="59.6983%" y="751.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (3,036,705 samples, 0.07%)</title><rect x="59.4483%" y="725" width="0.0703%" height="15" fill="rgb(224,113,18)" fg:x="2566859162" fg:w="3036705"/><text x="59.6983%" y="735.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (3,036,705 samples, 0.07%)</title><rect x="59.4483%" y="709" width="0.0703%" height="15" fill="rgb(240,229,28)" fg:x="2566859162" fg:w="3036705"/><text x="59.6983%" y="719.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (3,036,705 samples, 0.07%)</title><rect x="59.4483%" y="693" width="0.0703%" height="15" fill="rgb(250,185,3)" fg:x="2566859162" fg:w="3036705"/><text x="59.6983%" y="703.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (3,036,705 samples, 0.07%)</title><rect x="59.4483%" y="677" width="0.0703%" height="15" fill="rgb(212,59,25)" fg:x="2566859162" fg:w="3036705"/><text x="59.6983%" y="687.50"></text></g><g><title>write (1,308,191 samples, 0.03%)</title><rect x="59.4884%" y="661" width="0.0303%" height="15" fill="rgb(221,87,20)" fg:x="2568587676" fg:w="1308191"/><text x="59.7384%" y="671.50"></text></g><g><title>ratatui::widgets::block::Block::bordered (3,586,584 samples, 0.08%)</title><rect x="59.5187%" y="757" width="0.0831%" height="15" fill="rgb(213,74,28)" fg:x="2569895867" fg:w="3586584"/><text x="59.7687%" y="767.50"></text></g><g><title>ratatui::widgets::block::Block::title (7,781,808 samples, 0.18%)</title><rect x="59.6017%" y="757" width="0.1802%" height="15" fill="rgb(224,132,34)" fg:x="2573482451" fg:w="7781808"/><text x="59.8517%" y="767.50"></text></g><g><title>[libc.so.6] (7,781,808 samples, 0.18%)</title><rect x="59.6017%" y="741" width="0.1802%" height="15" fill="rgb(222,101,24)" fg:x="2573482451" fg:w="7781808"/><text x="59.8517%" y="751.50"></text></g><g><title>ratatui::terminal::terminal::Terminal&lt;B&gt;::draw::_{{closure}} (1,732,903,642 samples, 40.13%)</title><rect x="19.6888%" y="837" width="40.1340%" height="15" fill="rgb(254,142,4)" fg:x="850121157" fg:w="1732903642"/><text x="19.9388%" y="847.50">ratatui::terminal::terminal::Terminal&lt;B&gt;::draw::_{{closure}}</text></g><g><title>emi_web::tui::App::run::_{{closure}} (1,732,903,642 samples, 40.13%)</title><rect x="19.6888%" y="821" width="40.1340%" height="15" fill="rgb(230,229,49)" fg:x="850121157" fg:w="1732903642"/><text x="19.9388%" y="831.50">emi_web::tui::App::run::_{{closure}}</text></g><g><title>emi_web::tui::App::draw (1,732,903,642 samples, 40.13%)</title><rect x="19.6888%" y="805" width="40.1340%" height="15" fill="rgb(238,70,47)" fg:x="850121157" fg:w="1732903642"/><text x="19.9388%" y="815.50">emi_web::tui::App::draw</text></g><g><title>ratatui::terminal::frame::Frame::render_widget (1,732,903,642 samples, 40.13%)</title><rect x="19.6888%" y="789" width="40.1340%" height="15" fill="rgb(231,160,17)" fg:x="850121157" fg:w="1732903642"/><text x="19.9388%" y="799.50">ratatui::terminal::frame::Frame::render_widget</text></g><g><title>&lt;&amp;emi_web::tui::App as ratatui::widgets::Widget&gt;::render (1,732,903,642 samples, 40.13%)</title><rect x="19.6888%" y="773" width="40.1340%" height="15" fill="rgb(218,68,53)" fg:x="850121157" fg:w="1732903642"/><text x="19.9388%" y="783.50">&lt;&amp;emi_web::tui::App as ratatui::widgets::Widget&gt;::render</text></g><g><title>ratatui::widgets::paragraph::Paragraph::block (1,760,540 samples, 0.04%)</title><rect x="59.7819%" y="757" width="0.0408%" height="15" fill="rgb(236,111,10)" fg:x="2581264259" fg:w="1760540"/><text x="60.0319%" y="767.50"></text></g><g><title>[libc.so.6] (1,760,540 samples, 0.04%)</title><rect x="59.7819%" y="741" width="0.0408%" height="15" fill="rgb(224,34,41)" fg:x="2581264259" fg:w="1760540"/><text x="60.0319%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2,144,539 samples, 0.05%)</title><rect x="59.9043%" y="821" width="0.0497%" height="15" fill="rgb(241,118,19)" fg:x="2586547825" fg:w="2144539"/><text x="60.1543%" y="831.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (2,144,539 samples, 0.05%)</title><rect x="59.9043%" y="805" width="0.0497%" height="15" fill="rgb(238,129,25)" fg:x="2586547825" fg:w="2144539"/><text x="60.1543%" y="815.50"></text></g><g><title>[emi_web] (1,738,806 samples, 0.04%)</title><rect x="59.9540%" y="821" width="0.0403%" height="15" fill="rgb(238,22,31)" fg:x="2588692364" fg:w="1738806"/><text x="60.2040%" y="831.50"></text></g><g><title>ratatui::buffer::buffer::Buffer::diff (1,738,806 samples, 0.04%)</title><rect x="59.9540%" y="805" width="0.0403%" height="15" fill="rgb(222,174,48)" fg:x="2588692364" fg:w="1738806"/><text x="60.2040%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (1,738,806 samples, 0.04%)</title><rect x="59.9540%" y="789" width="0.0403%" height="15" fill="rgb(206,152,40)" fg:x="2588692364" fg:w="1738806"/><text x="60.2040%" y="799.50"></text></g><g><title>core::cmp::PartialEq::ne (1,738,806 samples, 0.04%)</title><rect x="59.9540%" y="773" width="0.0403%" height="15" fill="rgb(218,99,54)" fg:x="2588692364" fg:w="1738806"/><text x="60.2040%" y="783.50"></text></g><g><title>&lt;ratatui::buffer::cell::Cell as core::cmp::PartialEq&gt;::eq (1,738,806 samples, 0.04%)</title><rect x="59.9540%" y="757" width="0.0403%" height="15" fill="rgb(220,174,26)" fg:x="2588692364" fg:w="1738806"/><text x="60.2040%" y="767.50"></text></g><g><title>&lt;compact_str::CompactString as core::cmp::PartialEq&lt;T&gt;&gt;::eq (1,738,806 samples, 0.04%)</title><rect x="59.9540%" y="741" width="0.0403%" height="15" fill="rgb(245,116,9)" fg:x="2588692364" fg:w="1738806"/><text x="60.2040%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,738,806 samples, 0.04%)</title><rect x="59.9540%" y="725" width="0.0403%" height="15" fill="rgb(209,72,35)" fg:x="2588692364" fg:w="1738806"/><text x="60.2040%" y="735.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,738,806 samples, 0.04%)</title><rect x="59.9540%" y="709" width="0.0403%" height="15" fill="rgb(226,126,21)" fg:x="2588692364" fg:w="1738806"/><text x="60.2040%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,738,806 samples, 0.04%)</title><rect x="59.9540%" y="693" width="0.0403%" height="15" fill="rgb(227,192,1)" fg:x="2588692364" fg:w="1738806"/><text x="60.2040%" y="703.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1,738,806 samples, 0.04%)</title><rect x="59.9540%" y="677" width="0.0403%" height="15" fill="rgb(237,180,29)" fg:x="2588692364" fg:w="1738806"/><text x="60.2040%" y="687.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,738,806 samples, 0.04%)</title><rect x="59.9540%" y="661" width="0.0403%" height="15" fill="rgb(230,197,35)" fg:x="2588692364" fg:w="1738806"/><text x="60.2040%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,211,240 samples, 0.19%)</title><rect x="63.4910%" y="805" width="0.1902%" height="15" fill="rgb(246,193,31)" fg:x="2741414332" fg:w="8211240"/><text x="63.7410%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,211,240 samples, 0.19%)</title><rect x="63.4910%" y="789" width="0.1902%" height="15" fill="rgb(241,36,4)" fg:x="2741414332" fg:w="8211240"/><text x="63.7410%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (8,211,240 samples, 0.19%)</title><rect x="63.4910%" y="773" width="0.1902%" height="15" fill="rgb(241,130,17)" fg:x="2741414332" fg:w="8211240"/><text x="63.7410%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (33,742,364 samples, 0.78%)</title><rect x="66.5112%" y="725" width="0.7815%" height="15" fill="rgb(206,137,32)" fg:x="2871818745" fg:w="33742364"/><text x="66.7612%" y="735.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4,283,245 samples, 0.10%)</title><rect x="67.1934%" y="709" width="0.0992%" height="15" fill="rgb(237,228,51)" fg:x="2901277864" fg:w="4283245"/><text x="67.4434%" y="719.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (72,120,730 samples, 1.67%)</title><rect x="65.7014%" y="757" width="1.6703%" height="15" fill="rgb(243,6,42)" fg:x="2836855787" fg:w="72120730"/><text x="65.9514%" y="767.50"></text></g><g><title>core::str::validations::next_code_point_reverse (72,120,730 samples, 1.67%)</title><rect x="65.7014%" y="741" width="1.6703%" height="15" fill="rgb(251,74,28)" fg:x="2836855787" fg:w="72120730"/><text x="65.9514%" y="751.50"></text></g><g><title>core::str::validations::utf8_acc_cont_byte (3,415,408 samples, 0.08%)</title><rect x="67.2926%" y="725" width="0.0791%" height="15" fill="rgb(218,20,49)" fg:x="2905561109" fg:w="3415408"/><text x="67.5426%" y="735.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;i8&gt; for isize&gt;::from (1,798,838 samples, 0.04%)</title><rect x="67.3717%" y="741" width="0.0417%" height="15" fill="rgb(238,28,14)" fg:x="2908976517" fg:w="1798838"/><text x="67.6217%" y="751.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add_signed (9,963,562 samples, 0.23%)</title><rect x="67.4134%" y="741" width="0.2308%" height="15" fill="rgb(229,40,46)" fg:x="2910775355" fg:w="9963562"/><text x="67.6634%" y="751.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (9,963,562 samples, 0.23%)</title><rect x="67.4134%" y="725" width="0.2308%" height="15" fill="rgb(244,195,20)" fg:x="2910775355" fg:w="9963562"/><text x="67.6634%" y="735.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (330,294,194 samples, 7.65%)</title><rect x="63.6812%" y="773" width="7.6496%" height="15" fill="rgb(253,56,35)" fg:x="2749625572" fg:w="330294194"/><text x="63.9312%" y="783.50">core::iter..</text></g><g><title>unicode_width::tables::str_width::_{{closure}} (170,943,249 samples, 3.96%)</title><rect x="67.3717%" y="757" width="3.9590%" height="15" fill="rgb(210,149,44)" fg:x="2908976517" fg:w="170943249"/><text x="67.6217%" y="767.50">unic..</text></g><g><title>unicode_width::tables::width_in_str (159,180,849 samples, 3.69%)</title><rect x="67.6442%" y="741" width="3.6866%" height="15" fill="rgb(240,135,12)" fg:x="2920738917" fg:w="159180849"/><text x="67.8942%" y="751.50">unic..</text></g><g><title>unicode_width::tables::lookup_width (48,587,594 samples, 1.13%)</title><rect x="70.2055%" y="725" width="1.1253%" height="15" fill="rgb(251,24,50)" fg:x="3031332172" fg:w="48587594"/><text x="70.4555%" y="735.50"></text></g><g><title>&lt;str as unicode_width::UnicodeWidthStr&gt;::width (346,916,440 samples, 8.03%)</title><rect x="63.6812%" y="805" width="8.0346%" height="15" fill="rgb(243,200,47)" fg:x="2749625572" fg:w="346916440"/><text x="63.9312%" y="815.50">&lt;str as uni..</text></g><g><title>unicode_width::tables::str_width (346,916,440 samples, 8.03%)</title><rect x="63.6812%" y="789" width="8.0346%" height="15" fill="rgb(224,166,26)" fg:x="2749625572" fg:w="346916440"/><text x="63.9312%" y="799.50">unicode_wid..</text></g><g><title>core::str::&lt;impl str&gt;::chars (16,622,246 samples, 0.38%)</title><rect x="71.3308%" y="773" width="0.3850%" height="15" fill="rgb(233,0,47)" fg:x="3079919766" fg:w="16622246"/><text x="71.5808%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (16,622,246 samples, 0.38%)</title><rect x="71.3308%" y="757" width="0.3850%" height="15" fill="rgb(253,80,5)" fg:x="3079919766" fg:w="16622246"/><text x="71.5808%" y="767.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (16,622,246 samples, 0.38%)</title><rect x="71.3308%" y="741" width="0.3850%" height="15" fill="rgb(214,133,25)" fg:x="3079919766" fg:w="16622246"/><text x="71.5808%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (16,622,246 samples, 0.38%)</title><rect x="71.3308%" y="725" width="0.3850%" height="15" fill="rgb(209,27,14)" fg:x="3079919766" fg:w="16622246"/><text x="71.5808%" y="735.50"></text></g><g><title>compact_str::repr::Repr::last_byte (55,645,694 samples, 1.29%)</title><rect x="71.9630%" y="677" width="1.2888%" height="15" fill="rgb(219,102,51)" fg:x="3107219757" fg:w="55645694"/><text x="72.2130%" y="687.50"></text></g><g><title>core::cmp::min (11,113,125 samples, 0.26%)</title><rect x="73.2518%" y="677" width="0.2574%" height="15" fill="rgb(237,18,16)" fg:x="3162865451" fg:w="11113125"/><text x="73.5018%" y="687.50"></text></g><g><title>core::cmp::Ord::min (11,113,125 samples, 0.26%)</title><rect x="73.2518%" y="661" width="0.2574%" height="15" fill="rgb(241,85,17)" fg:x="3162865451" fg:w="11113125"/><text x="73.5018%" y="671.50"></text></g><g><title>core::cmp::min_by (11,113,125 samples, 0.26%)</title><rect x="73.2518%" y="645" width="0.2574%" height="15" fill="rgb(236,90,42)" fg:x="3162865451" fg:w="11113125"/><text x="73.5018%" y="655.50"></text></g><g><title>&lt;compact_str::CompactString as core::convert::AsRef&lt;str&gt;&gt;::as_ref (90,041,176 samples, 2.09%)</title><rect x="71.7661%" y="741" width="2.0853%" height="15" fill="rgb(249,57,21)" fg:x="3098714853" fg:w="90041176"/><text x="72.0161%" y="751.50">&lt;..</text></g><g><title>compact_str::CompactString::as_str (90,041,176 samples, 2.09%)</title><rect x="71.7661%" y="725" width="2.0853%" height="15" fill="rgb(243,12,36)" fg:x="3098714853" fg:w="90041176"/><text x="72.0161%" y="735.50">c..</text></g><g><title>compact_str::repr::Repr::as_str (90,041,176 samples, 2.09%)</title><rect x="71.7661%" y="709" width="2.0853%" height="15" fill="rgb(253,128,47)" fg:x="3098714853" fg:w="90041176"/><text x="72.0161%" y="719.50">c..</text></g><g><title>compact_str::repr::Repr::as_slice (90,041,176 samples, 2.09%)</title><rect x="71.7661%" y="693" width="2.0853%" height="15" fill="rgb(207,33,20)" fg:x="3098714853" fg:w="90041176"/><text x="72.0161%" y="703.50">c..</text></g><g><title>core::num::&lt;impl u8&gt;::wrapping_sub (14,777,453 samples, 0.34%)</title><rect x="73.5092%" y="677" width="0.3422%" height="15" fill="rgb(233,215,35)" fg:x="3173978576" fg:w="14777453"/><text x="73.7592%" y="687.50"></text></g><g><title>compact_str::repr::Repr::last_byte (1,821,347 samples, 0.04%)</title><rect x="74.1844%" y="693" width="0.0422%" height="15" fill="rgb(249,188,52)" fg:x="3203134181" fg:w="1821347"/><text x="74.4344%" y="703.50"></text></g><g><title>core::cmp::min (23,338,923 samples, 0.54%)</title><rect x="74.2266%" y="693" width="0.5405%" height="15" fill="rgb(225,12,32)" fg:x="3204955528" fg:w="23338923"/><text x="74.4766%" y="703.50"></text></g><g><title>core::cmp::Ord::min (23,338,923 samples, 0.54%)</title><rect x="74.2266%" y="677" width="0.5405%" height="15" fill="rgb(247,98,14)" fg:x="3204955528" fg:w="23338923"/><text x="74.4766%" y="687.50"></text></g><g><title>core::cmp::min_by (23,338,923 samples, 0.54%)</title><rect x="74.2266%" y="661" width="0.5405%" height="15" fill="rgb(247,219,48)" fg:x="3204955528" fg:w="23338923"/><text x="74.4766%" y="671.50"></text></g><g><title>compact_str::CompactString::as_str (40,561,826 samples, 0.94%)</title><rect x="73.8514%" y="741" width="0.9394%" height="15" fill="rgb(253,60,48)" fg:x="3188756029" fg:w="40561826"/><text x="74.1014%" y="751.50"></text></g><g><title>compact_str::repr::Repr::as_str (40,561,826 samples, 0.94%)</title><rect x="73.8514%" y="725" width="0.9394%" height="15" fill="rgb(245,15,52)" fg:x="3188756029" fg:w="40561826"/><text x="74.1014%" y="735.50"></text></g><g><title>compact_str::repr::Repr::as_slice (40,561,826 samples, 0.94%)</title><rect x="73.8514%" y="709" width="0.9394%" height="15" fill="rgb(220,133,28)" fg:x="3188756029" fg:w="40561826"/><text x="74.1014%" y="719.50"></text></g><g><title>core::num::&lt;impl u8&gt;::wrapping_sub (1,023,404 samples, 0.02%)</title><rect x="74.7671%" y="693" width="0.0237%" height="15" fill="rgb(217,180,4)" fg:x="3228294451" fg:w="1023404"/><text x="75.0171%" y="703.50"></text></g><g><title>&lt;compact_str::CompactString as core::cmp::PartialEq&lt;T&gt;&gt;::eq (217,354,240 samples, 5.03%)</title><rect x="71.7661%" y="757" width="5.0339%" height="15" fill="rgb(251,24,1)" fg:x="3098714853" fg:w="217354240"/><text x="72.0161%" y="767.50">&lt;compa..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (86,751,238 samples, 2.01%)</title><rect x="74.7908%" y="741" width="2.0092%" height="15" fill="rgb(212,185,49)" fg:x="3229317855" fg:w="86751238"/><text x="75.0408%" y="751.50">c..</text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (86,751,238 samples, 2.01%)</title><rect x="74.7908%" y="725" width="2.0092%" height="15" fill="rgb(215,175,22)" fg:x="3229317855" fg:w="86751238"/><text x="75.0408%" y="735.50">c..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (86,751,238 samples, 2.01%)</title><rect x="74.7908%" y="709" width="2.0092%" height="15" fill="rgb(250,205,14)" fg:x="3229317855" fg:w="86751238"/><text x="75.0408%" y="719.50">c..</text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (86,751,238 samples, 2.01%)</title><rect x="74.7908%" y="693" width="2.0092%" height="15" fill="rgb(225,211,22)" fg:x="3229317855" fg:w="86751238"/><text x="75.0408%" y="703.50">c..</text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (86,751,238 samples, 2.01%)</title><rect x="74.7908%" y="677" width="2.0092%" height="15" fill="rgb(251,179,42)" fg:x="3229317855" fg:w="86751238"/><text x="75.0408%" y="687.50">&lt;..</text></g><g><title>[libc.so.6] (60,701,717 samples, 1.41%)</title><rect x="75.3941%" y="661" width="1.4058%" height="15" fill="rgb(208,216,51)" fg:x="3255367376" fg:w="60701717"/><text x="75.6441%" y="671.50"></text></g><g><title>&lt;ratatui::style::Modifier as core::cmp::PartialEq&gt;::eq (18,056,603 samples, 0.42%)</title><rect x="76.8000%" y="757" width="0.4182%" height="15" fill="rgb(235,36,11)" fg:x="3316069093" fg:w="18056603"/><text x="77.0500%" y="767.50"></text></g><g><title>&lt;ratatui::style::_::InternalBitFlags as core::cmp::PartialEq&gt;::eq (18,056,603 samples, 0.42%)</title><rect x="76.8000%" y="741" width="0.4182%" height="15" fill="rgb(213,189,28)" fg:x="3316069093" fg:w="18056603"/><text x="77.0500%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (385,266,175 samples, 8.92%)</title><rect x="71.7157%" y="805" width="8.9227%" height="15" fill="rgb(227,203,42)" fg:x="3096542012" fg:w="385266175"/><text x="71.9657%" y="815.50">core::cmp::im..</text></g><g><title>core::cmp::PartialEq::ne (385,266,175 samples, 8.92%)</title><rect x="71.7157%" y="789" width="8.9227%" height="15" fill="rgb(244,72,36)" fg:x="3096542012" fg:w="385266175"/><text x="71.9657%" y="799.50">core::cmp::Pa..</text></g><g><title>&lt;ratatui::buffer::cell::Cell as core::cmp::PartialEq&gt;::eq (385,266,175 samples, 8.92%)</title><rect x="71.7157%" y="773" width="8.9227%" height="15" fill="rgb(213,53,17)" fg:x="3096542012" fg:w="385266175"/><text x="71.9657%" y="783.50">&lt;ratatui::buf..</text></g><g><title>&lt;ratatui::style::color::Color as core::cmp::PartialEq&gt;::eq (147,682,491 samples, 3.42%)</title><rect x="77.2182%" y="757" width="3.4203%" height="15" fill="rgb(207,167,3)" fg:x="3334125696" fg:w="147682491"/><text x="77.4682%" y="767.50">&lt;ra..</text></g><g><title>core::cmp::max (31,984,074 samples, 0.74%)</title><rect x="80.6385%" y="805" width="0.7407%" height="15" fill="rgb(216,98,30)" fg:x="3481808187" fg:w="31984074"/><text x="80.8885%" y="815.50"></text></g><g><title>core::cmp::Ord::max (31,984,074 samples, 0.74%)</title><rect x="80.6385%" y="789" width="0.7407%" height="15" fill="rgb(236,123,15)" fg:x="3481808187" fg:w="31984074"/><text x="80.8885%" y="799.50"></text></g><g><title>core::cmp::max_by (31,984,074 samples, 0.74%)</title><rect x="80.6385%" y="773" width="0.7407%" height="15" fill="rgb(248,81,50)" fg:x="3481808187" fg:w="31984074"/><text x="80.8885%" y="783.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_sub (20,450,053 samples, 0.47%)</title><rect x="81.3792%" y="805" width="0.4736%" height="15" fill="rgb(214,120,4)" fg:x="3513792261" fg:w="20450053"/><text x="81.6292%" y="815.50"></text></g><g><title>compact_str::repr::Repr::last_byte (18,152,696 samples, 0.42%)</title><rect x="83.0163%" y="741" width="0.4204%" height="15" fill="rgb(208,179,34)" fg:x="3584475177" fg:w="18152696"/><text x="83.2663%" y="751.50"></text></g><g><title>core::cmp::min (82,203,438 samples, 1.90%)</title><rect x="83.4367%" y="741" width="1.9038%" height="15" fill="rgb(227,140,7)" fg:x="3602627873" fg:w="82203438"/><text x="83.6867%" y="751.50">c..</text></g><g><title>core::cmp::Ord::min (82,203,438 samples, 1.90%)</title><rect x="83.4367%" y="725" width="1.9038%" height="15" fill="rgb(214,22,6)" fg:x="3602627873" fg:w="82203438"/><text x="83.6867%" y="735.50">c..</text></g><g><title>core::cmp::min_by (82,203,438 samples, 1.90%)</title><rect x="83.4367%" y="709" width="1.9038%" height="15" fill="rgb(207,137,27)" fg:x="3602627873" fg:w="82203438"/><text x="83.6867%" y="719.50">c..</text></g><g><title>ratatui::terminal::terminal::Terminal&lt;B&gt;::flush (1,115,563,136 samples, 25.84%)</title><rect x="59.8227%" y="837" width="25.8364%" height="15" fill="rgb(210,8,46)" fg:x="2583024799" fg:w="1115563136"/><text x="60.0727%" y="847.50">ratatui::terminal::terminal::Terminal&lt;B&gt;:..</text></g><g><title>ratatui::buffer::buffer::Buffer::diff (1,108,156,765 samples, 25.66%)</title><rect x="59.9942%" y="821" width="25.6649%" height="15" fill="rgb(240,16,54)" fg:x="2590431170" fg:w="1108156765"/><text x="60.2442%" y="831.50">ratatui::buffer::buffer::Buffer::diff</text></g><g><title>ratatui::buffer::cell::Cell::symbol (164,345,621 samples, 3.81%)</title><rect x="81.8529%" y="805" width="3.8062%" height="15" fill="rgb(211,209,29)" fg:x="3534242314" fg:w="164345621"/><text x="82.1029%" y="815.50">rata..</text></g><g><title>compact_str::CompactString::as_str (164,345,621 samples, 3.81%)</title><rect x="81.8529%" y="789" width="3.8062%" height="15" fill="rgb(226,228,24)" fg:x="3534242314" fg:w="164345621"/><text x="82.1029%" y="799.50">comp..</text></g><g><title>compact_str::repr::Repr::as_str (164,345,621 samples, 3.81%)</title><rect x="81.8529%" y="773" width="3.8062%" height="15" fill="rgb(222,84,9)" fg:x="3534242314" fg:w="164345621"/><text x="82.1029%" y="783.50">comp..</text></g><g><title>compact_str::repr::Repr::as_slice (164,345,621 samples, 3.81%)</title><rect x="81.8529%" y="757" width="3.8062%" height="15" fill="rgb(234,203,30)" fg:x="3534242314" fg:w="164345621"/><text x="82.1029%" y="767.50">comp..</text></g><g><title>core::num::&lt;impl u8&gt;::wrapping_sub (13,756,624 samples, 0.32%)</title><rect x="85.3405%" y="741" width="0.3186%" height="15" fill="rgb(238,109,14)" fg:x="3684831311" fg:w="13756624"/><text x="85.5905%" y="751.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,520,850 samples, 0.08%)</title><rect x="85.6591%" y="805" width="0.0815%" height="15" fill="rgb(233,206,34)" fg:x="3698587935" fg:w="3520850"/><text x="85.9091%" y="815.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3,520,850 samples, 0.08%)</title><rect x="85.6591%" y="789" width="0.0815%" height="15" fill="rgb(220,167,47)" fg:x="3698587935" fg:w="3520850"/><text x="85.9091%" y="799.50"></text></g><g><title>ratatui::terminal::terminal::Terminal&lt;B&gt;::draw (3,093,999,699 samples, 71.66%)</title><rect x="19.6489%" y="869" width="71.6569%" height="15" fill="rgb(238,105,10)" fg:x="848401375" fg:w="3093999699"/><text x="19.8989%" y="879.50">ratatui::terminal::terminal::Terminal&lt;B&gt;::draw</text></g><g><title>ratatui::terminal::terminal::Terminal&lt;B&gt;::try_draw (3,093,999,699 samples, 71.66%)</title><rect x="19.6489%" y="853" width="71.6569%" height="15" fill="rgb(213,227,17)" fg:x="848401375" fg:w="3093999699"/><text x="19.8989%" y="863.50">ratatui::terminal::terminal::Terminal&lt;B&gt;::try_draw</text></g><g><title>ratatui::terminal::terminal::Terminal&lt;B&gt;::swap_buffers (243,813,139 samples, 5.65%)</title><rect x="85.6591%" y="837" width="5.6467%" height="15" fill="rgb(217,132,38)" fg:x="3698587935" fg:w="243813139"/><text x="85.9091%" y="847.50">ratatui..</text></g><g><title>ratatui::buffer::buffer::Buffer::reset (243,813,139 samples, 5.65%)</title><rect x="85.6591%" y="821" width="5.6467%" height="15" fill="rgb(242,146,4)" fg:x="3698587935" fg:w="243813139"/><text x="85.9091%" y="831.50">ratatui..</text></g><g><title>ratatui::buffer::cell::Cell::reset (240,292,289 samples, 5.57%)</title><rect x="85.7406%" y="805" width="5.5652%" height="15" fill="rgb(212,61,9)" fg:x="3702108785" fg:w="240292289"/><text x="85.9906%" y="815.50">ratatui..</text></g><g><title>core::ptr::drop_in_place&lt;compact_str::CompactString&gt; (186,299,935 samples, 4.31%)</title><rect x="86.9911%" y="789" width="4.3147%" height="15" fill="rgb(247,126,22)" fg:x="3756101139" fg:w="186299935"/><text x="87.2411%" y="799.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;compact_str::repr::Repr&gt; (186,299,935 samples, 4.31%)</title><rect x="86.9911%" y="773" width="4.3147%" height="15" fill="rgb(220,196,2)" fg:x="3756101139" fg:w="186299935"/><text x="87.2411%" y="783.50">core:..</text></g><g><title>&lt;compact_str::repr::Repr as core::ops::drop::Drop&gt;::drop (186,299,935 samples, 4.31%)</title><rect x="86.9911%" y="757" width="4.3147%" height="15" fill="rgb(208,46,4)" fg:x="3756101139" fg:w="186299935"/><text x="87.2411%" y="767.50">&lt;comp..</text></g><g><title>compact_str::repr::Repr::is_heap_allocated (174,584,616 samples, 4.04%)</title><rect x="87.2624%" y="741" width="4.0434%" height="15" fill="rgb(252,104,46)" fg:x="3767816458" fg:w="174584616"/><text x="87.5124%" y="751.50">comp..</text></g><g><title>__nanosleep (17,921,497 samples, 0.42%)</title><rect x="91.3418%" y="853" width="0.4151%" height="15" fill="rgb(237,152,48)" fg:x="3943956828" fg:w="17921497"/><text x="91.5918%" y="863.50"></text></g><g><title>clock_nanosleep (10,738,553 samples, 0.25%)</title><rect x="91.5082%" y="837" width="0.2487%" height="15" fill="rgb(221,59,37)" fg:x="3951139772" fg:w="10738553"/><text x="91.7582%" y="847.50"></text></g><g><title>[libc.so.6] (5,618,673 samples, 0.13%)</title><rect x="91.6268%" y="821" width="0.1301%" height="15" fill="rgb(209,202,51)" fg:x="3956259652" fg:w="5618673"/><text x="91.8768%" y="831.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3,572,849,632 samples, 82.75%)</title><rect x="9.3187%" y="1157" width="82.7470%" height="15" fill="rgb(228,81,30)" fg:x="402362027" fg:w="3572849632"/><text x="9.5687%" y="1167.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (3,572,849,632 samples, 82.75%)</title><rect x="9.3187%" y="1141" width="82.7470%" height="15" fill="rgb(227,42,39)" fg:x="402362027" fg:w="3572849632"/><text x="9.5687%" y="1151.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (3,572,606,891 samples, 82.74%)</title><rect x="9.3243%" y="1125" width="82.7414%" height="15" fill="rgb(221,26,2)" fg:x="402604768" fg:w="3572606891"/><text x="9.5743%" y="1135.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3,572,282,956 samples, 82.73%)</title><rect x="9.3318%" y="1109" width="82.7339%" height="15" fill="rgb(254,61,31)" fg:x="402928703" fg:w="3572282956"/><text x="9.5818%" y="1119.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (3,519,126,667 samples, 81.50%)</title><rect x="10.5629%" y="1093" width="81.5028%" height="15" fill="rgb(222,173,38)" fg:x="456084992" fg:w="3519126667"/><text x="10.8129%" y="1103.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (3,519,126,667 samples, 81.50%)</title><rect x="10.5629%" y="1077" width="81.5028%" height="15" fill="rgb(218,50,12)" fg:x="456084992" fg:w="3519126667"/><text x="10.8129%" y="1087.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (3,519,126,667 samples, 81.50%)</title><rect x="10.5629%" y="1061" width="81.5028%" height="15" fill="rgb(223,88,40)" fg:x="456084992" fg:w="3519126667"/><text x="10.8129%" y="1071.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (3,519,126,667 samples, 81.50%)</title><rect x="10.5629%" y="1045" width="81.5028%" height="15" fill="rgb(237,54,19)" fg:x="456084992" fg:w="3519126667"/><text x="10.8129%" y="1055.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (3,519,126,667 samples, 81.50%)</title><rect x="10.5629%" y="1029" width="81.5028%" height="15" fill="rgb(251,129,25)" fg:x="456084992" fg:w="3519126667"/><text x="10.8129%" y="1039.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,519,126,667 samples, 81.50%)</title><rect x="10.5629%" y="1013" width="81.5028%" height="15" fill="rgb(238,97,19)" fg:x="456084992" fg:w="3519126667"/><text x="10.8129%" y="1023.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (3,519,126,667 samples, 81.50%)</title><rect x="10.5629%" y="997" width="81.5028%" height="15" fill="rgb(240,169,18)" fg:x="456084992" fg:w="3519126667"/><text x="10.8129%" y="1007.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (3,519,126,667 samples, 81.50%)</title><rect x="10.5629%" y="981" width="81.5028%" height="15" fill="rgb(230,187,49)" fg:x="456084992" fg:w="3519126667"/><text x="10.8129%" y="991.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3,519,126,667 samples, 81.50%)</title><rect x="10.5629%" y="965" width="81.5028%" height="15" fill="rgb(209,44,26)" fg:x="456084992" fg:w="3519126667"/><text x="10.8129%" y="975.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (3,519,126,667 samples, 81.50%)</title><rect x="10.5629%" y="949" width="81.5028%" height="15" fill="rgb(244,0,6)" fg:x="456084992" fg:w="3519126667"/><text x="10.8129%" y="959.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (3,519,126,667 samples, 81.50%)</title><rect x="10.5629%" y="933" width="81.5028%" height="15" fill="rgb(248,18,21)" fg:x="456084992" fg:w="3519126667"/><text x="10.8129%" y="943.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>emi_web::realtime_websocket_stream::_{{closure}}::_{{closure}} (3,156,011,844 samples, 73.09%)</title><rect x="18.9726%" y="917" width="73.0931%" height="15" fill="rgb(245,180,19)" fg:x="819199815" fg:w="3156011844"/><text x="19.2226%" y="927.50">emi_web::realtime_websocket_stream::_{{closure}}::_{{closure}}</text></g><g><title>emi_web::tui::init (3,156,011,844 samples, 73.09%)</title><rect x="18.9726%" y="901" width="73.0931%" height="15" fill="rgb(252,118,36)" fg:x="819199815" fg:w="3156011844"/><text x="19.2226%" y="911.50">emi_web::tui::init</text></g><g><title>emi_web::tui::App::run (3,150,649,773 samples, 72.97%)</title><rect x="19.0968%" y="885" width="72.9689%" height="15" fill="rgb(210,224,19)" fg:x="824561886" fg:w="3150649773"/><text x="19.3468%" y="895.50">emi_web::tui::App::run</text></g><g><title>std::thread::sleep (32,810,585 samples, 0.76%)</title><rect x="91.3058%" y="869" width="0.7599%" height="15" fill="rgb(218,30,24)" fg:x="3942401074" fg:w="32810585"/><text x="91.5558%" y="879.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::sleep (13,333,334 samples, 0.31%)</title><rect x="91.7569%" y="853" width="0.3088%" height="15" fill="rgb(219,75,50)" fg:x="3961878325" fg:w="13333334"/><text x="92.0069%" y="863.50"></text></g><g><title>[libc.so.6] (3,573,155,336 samples, 82.75%)</title><rect x="9.3187%" y="1205" width="82.7541%" height="15" fill="rgb(234,72,50)" fg:x="402362027" fg:w="3573155336"/><text x="9.5687%" y="1215.50">[libc.so.6]</text></g><g><title>[libc.so.6] (3,573,155,336 samples, 82.75%)</title><rect x="9.3187%" y="1189" width="82.7541%" height="15" fill="rgb(219,100,48)" fg:x="402362027" fg:w="3573155336"/><text x="9.5687%" y="1199.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (3,573,155,336 samples, 82.75%)</title><rect x="9.3187%" y="1173" width="82.7541%" height="15" fill="rgb(253,5,41)" fg:x="402362027" fg:w="3573155336"/><text x="9.5687%" y="1183.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5,869,076 samples, 0.14%)</title><rect x="92.0728%" y="1189" width="0.1359%" height="15" fill="rgb(247,181,11)" fg:x="3975517363" fg:w="5869076"/><text x="92.3228%" y="1199.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,758,318 samples, 0.04%)</title><rect x="92.2150%" y="1189" width="0.0407%" height="15" fill="rgb(222,223,25)" fg:x="3981660643" fg:w="1758318"/><text x="92.4650%" y="1199.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (103,851,824 samples, 2.41%)</title><rect x="92.2558%" y="1189" width="2.4052%" height="15" fill="rgb(214,198,28)" fg:x="3983418961" fg:w="103851824"/><text x="92.5058%" y="1199.50">co..</text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (8,336,216 samples, 0.19%)</title><rect x="94.4679%" y="1173" width="0.1931%" height="15" fill="rgb(230,46,43)" fg:x="4078934569" fg:w="8336216"/><text x="94.7179%" y="1183.50"></text></g><g><title>core::str::validations::next_code_point_reverse (8,336,216 samples, 0.19%)</title><rect x="94.4679%" y="1157" width="0.1931%" height="15" fill="rgb(233,65,53)" fg:x="4078934569" fg:w="8336216"/><text x="94.7179%" y="1167.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (8,336,216 samples, 0.19%)</title><rect x="94.4679%" y="1141" width="0.1931%" height="15" fill="rgb(221,121,27)" fg:x="4078934569" fg:w="8336216"/><text x="94.7179%" y="1151.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (8,336,216 samples, 0.19%)</title><rect x="94.4679%" y="1125" width="0.1931%" height="15" fill="rgb(247,70,47)" fg:x="4078934569" fg:w="8336216"/><text x="94.7179%" y="1135.50"></text></g><g><title>emi_web::parse_frame::Buffer::from_string (3,256,004 samples, 0.08%)</title><rect x="94.6610%" y="1189" width="0.0754%" height="15" fill="rgb(228,85,35)" fg:x="4087270785" fg:w="3256004"/><text x="94.9110%" y="1199.50"></text></g><g><title>emi_web::parse_frame::Buffer::parse_area (3,256,004 samples, 0.08%)</title><rect x="94.6610%" y="1173" width="0.0754%" height="15" fill="rgb(209,50,18)" fg:x="4087270785" fg:w="3256004"/><text x="94.9110%" y="1183.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (3,256,004 samples, 0.08%)</title><rect x="94.6610%" y="1157" width="0.0754%" height="15" fill="rgb(250,19,35)" fg:x="4087270785" fg:w="3256004"/><text x="94.9110%" y="1167.50"></text></g><g><title>emi_web::tui::App::handle_web_key_event (2,612,943 samples, 0.06%)</title><rect x="94.7807%" y="1157" width="0.0605%" height="15" fill="rgb(253,107,29)" fg:x="4092438688" fg:w="2612943"/><text x="95.0307%" y="1167.50"></text></g><g><title>std::fs::File::create (2,612,943 samples, 0.06%)</title><rect x="94.7807%" y="1141" width="0.0605%" height="15" fill="rgb(252,179,29)" fg:x="4092438688" fg:w="2612943"/><text x="95.0307%" y="1151.50"></text></g><g><title>std::fs::OpenOptions::open (2,612,943 samples, 0.06%)</title><rect x="94.7807%" y="1125" width="0.0605%" height="15" fill="rgb(238,194,6)" fg:x="4092438688" fg:w="2612943"/><text x="95.0307%" y="1135.50"></text></g><g><title>emi_web::tui::frame_to_file (1,880,710 samples, 0.04%)</title><rect x="94.8772%" y="1045" width="0.0436%" height="15" fill="rgb(238,164,29)" fg:x="4096607385" fg:w="1880710"/><text x="95.1272%" y="1055.50"></text></g><g><title>std::fs::File::create (1,880,710 samples, 0.04%)</title><rect x="94.8772%" y="1029" width="0.0436%" height="15" fill="rgb(224,25,9)" fg:x="4096607385" fg:w="1880710"/><text x="95.1272%" y="1039.50"></text></g><g><title>std::fs::OpenOptions::open (1,880,710 samples, 0.04%)</title><rect x="94.8772%" y="1013" width="0.0436%" height="15" fill="rgb(244,153,23)" fg:x="4096607385" fg:w="1880710"/><text x="95.1272%" y="1023.50"></text></g><g><title>ratatui::terminal::terminal::Terminal&lt;B&gt;::draw::_{{closure}} (8,224,732 samples, 0.19%)</title><rect x="94.8412%" y="1125" width="0.1905%" height="15" fill="rgb(212,203,14)" fg:x="4095051631" fg:w="8224732"/><text x="95.0912%" y="1135.50"></text></g><g><title>emi_web::tui::App::run::_{{closure}} (8,224,732 samples, 0.19%)</title><rect x="94.8412%" y="1109" width="0.1905%" height="15" fill="rgb(220,164,20)" fg:x="4095051631" fg:w="8224732"/><text x="95.0912%" y="1119.50"></text></g><g><title>emi_web::tui::App::draw (8,224,732 samples, 0.19%)</title><rect x="94.8412%" y="1093" width="0.1905%" height="15" fill="rgb(222,203,48)" fg:x="4095051631" fg:w="8224732"/><text x="95.0912%" y="1103.50"></text></g><g><title>ratatui::terminal::frame::Frame::render_widget (8,224,732 samples, 0.19%)</title><rect x="94.8412%" y="1077" width="0.1905%" height="15" fill="rgb(215,159,22)" fg:x="4095051631" fg:w="8224732"/><text x="95.0912%" y="1087.50"></text></g><g><title>&lt;&amp;emi_web::tui::App as ratatui::widgets::Widget&gt;::render (8,224,732 samples, 0.19%)</title><rect x="94.8412%" y="1061" width="0.1905%" height="15" fill="rgb(216,183,47)" fg:x="4095051631" fg:w="8224732"/><text x="95.0912%" y="1071.50"></text></g><g><title>ratatui::widgets::block::Block::title (4,788,268 samples, 0.11%)</title><rect x="94.9208%" y="1045" width="0.1109%" height="15" fill="rgb(229,195,25)" fg:x="4098488095" fg:w="4788268"/><text x="95.1708%" y="1055.50"></text></g><g><title>emi_web::tui::init (14,254,681 samples, 0.33%)</title><rect x="94.7364%" y="1189" width="0.3301%" height="15" fill="rgb(224,132,51)" fg:x="4090526789" fg:w="14254681"/><text x="94.9864%" y="1199.50"></text></g><g><title>emi_web::tui::App::run (14,254,681 samples, 0.33%)</title><rect x="94.7364%" y="1173" width="0.3301%" height="15" fill="rgb(240,63,7)" fg:x="4090526789" fg:w="14254681"/><text x="94.9864%" y="1183.50"></text></g><g><title>ratatui::terminal::terminal::Terminal&lt;B&gt;::draw (9,729,839 samples, 0.23%)</title><rect x="94.8412%" y="1157" width="0.2253%" height="15" fill="rgb(249,182,41)" fg:x="4095051631" fg:w="9729839"/><text x="95.0912%" y="1167.50"></text></g><g><title>ratatui::terminal::terminal::Terminal&lt;B&gt;::try_draw (9,729,839 samples, 0.23%)</title><rect x="94.8412%" y="1141" width="0.2253%" height="15" fill="rgb(243,47,26)" fg:x="4095051631" fg:w="9729839"/><text x="95.0912%" y="1151.50"></text></g><g><title>ratatui::terminal::terminal::Terminal&lt;B&gt;::flush (1,505,107 samples, 0.03%)</title><rect x="95.0317%" y="1125" width="0.0349%" height="15" fill="rgb(233,48,2)" fg:x="4103276363" fg:w="1505107"/><text x="95.2817%" y="1135.50"></text></g><g><title>ratatui::buffer::cell::Cell::set_symbol (2,956,166 samples, 0.07%)</title><rect x="95.0665%" y="1189" width="0.0685%" height="15" fill="rgb(244,165,34)" fg:x="4104781470" fg:w="2956166"/><text x="95.3165%" y="1199.50"></text></g><g><title>compact_str::CompactString::new (1,580,599 samples, 0.04%)</title><rect x="95.0984%" y="1173" width="0.0366%" height="15" fill="rgb(207,89,7)" fg:x="4106157037" fg:w="1580599"/><text x="95.3484%" y="1183.50"></text></g><g><title>compact_str::CompactString::try_new (1,580,599 samples, 0.04%)</title><rect x="95.0984%" y="1157" width="0.0366%" height="15" fill="rgb(244,117,36)" fg:x="4106157037" fg:w="1580599"/><text x="95.3484%" y="1167.50"></text></g><g><title>compact_str::repr::Repr::new (1,580,599 samples, 0.04%)</title><rect x="95.0984%" y="1141" width="0.0366%" height="15" fill="rgb(226,144,34)" fg:x="4106157037" fg:w="1580599"/><text x="95.3484%" y="1151.50"></text></g><g><title>compact_str::repr::inline::InlineBuffer::new (1,580,599 samples, 0.04%)</title><rect x="95.0984%" y="1125" width="0.0366%" height="15" fill="rgb(213,23,19)" fg:x="4106157037" fg:w="1580599"/><text x="95.3484%" y="1135.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,580,599 samples, 0.04%)</title><rect x="95.0984%" y="1109" width="0.0366%" height="15" fill="rgb(217,75,12)" fg:x="4106157037" fg:w="1580599"/><text x="95.3484%" y="1119.50"></text></g><g><title>serde_json::ser::format_escaped_str (1,841,731 samples, 0.04%)</title><rect x="95.1350%" y="1189" width="0.0427%" height="15" fill="rgb(224,159,17)" fg:x="4107737636" fg:w="1841731"/><text x="95.3850%" y="1199.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (433,831 samples, 0.01%)</title><rect x="95.1776%" y="1189" width="0.0100%" height="15" fill="rgb(217,118,1)" fg:x="4109579367" fg:w="433831"/><text x="95.4276%" y="1199.50"></text></g><g><title>tungstenite::protocol::WebSocketContext::read (1,416,550 samples, 0.03%)</title><rect x="95.1877%" y="1189" width="0.0328%" height="15" fill="rgb(232,180,48)" fg:x="4110013198" fg:w="1416550"/><text x="95.4377%" y="1199.50"></text></g><g><title>[unknown] (140,309,006 samples, 3.25%)</title><rect x="92.0728%" y="1205" width="3.2495%" height="15" fill="rgb(230,27,33)" fg:x="3975517363" fg:w="140309006"/><text x="92.3228%" y="1215.50">[un..</text></g><g><title>unicode_width::tables::lookup_width (4,396,621 samples, 0.10%)</title><rect x="95.2205%" y="1189" width="0.1018%" height="15" fill="rgb(205,31,21)" fg:x="4111429748" fg:w="4396621"/><text x="95.4705%" y="1199.50"></text></g><g><title>core::fmt::Formatter::write_str (4,852,524 samples, 0.11%)</title><rect x="95.3223%" y="1205" width="0.1124%" height="15" fill="rgb(253,59,4)" fg:x="4115826369" fg:w="4852524"/><text x="95.5723%" y="1215.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (178,973,344 samples, 4.15%)</title><rect x="95.4347%" y="1189" width="4.1450%" height="15" fill="rgb(224,201,9)" fg:x="4120678893" fg:w="178973344"/><text x="95.6847%" y="1199.50">&lt;core..</text></g><g><title>core::str::validations::next_code_point_reverse (178,973,344 samples, 4.15%)</title><rect x="95.4347%" y="1173" width="4.1450%" height="15" fill="rgb(229,206,30)" fg:x="4120678893" fg:w="178973344"/><text x="95.6847%" y="1183.50">core:..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (178,973,344 samples, 4.15%)</title><rect x="95.4347%" y="1157" width="4.1450%" height="15" fill="rgb(212,67,47)" fg:x="4120678893" fg:w="178973344"/><text x="95.6847%" y="1167.50">&lt;core..</text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (178,973,344 samples, 4.15%)</title><rect x="95.4347%" y="1141" width="4.1450%" height="15" fill="rgb(211,96,50)" fg:x="4120678893" fg:w="178973344"/><text x="95.6847%" y="1151.50">&lt;core..</text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (184,599,536 samples, 4.28%)</title><rect x="95.4347%" y="1205" width="4.2753%" height="15" fill="rgb(252,114,18)" fg:x="4120678893" fg:w="184599536"/><text x="95.6847%" y="1215.50">core:..</text></g><g><title>unicode_width::tables::str_width::_{{closure}} (5,626,192 samples, 0.13%)</title><rect x="99.5797%" y="1189" width="0.1303%" height="15" fill="rgb(223,58,37)" fg:x="4299652237" fg:w="5626192"/><text x="99.8297%" y="1199.50"></text></g><g><title>unicode_width::tables::width_in_str (5,626,192 samples, 0.13%)</title><rect x="99.5797%" y="1173" width="0.1303%" height="15" fill="rgb(237,70,4)" fg:x="4299652237" fg:w="5626192"/><text x="99.8297%" y="1183.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (1,537,888 samples, 0.04%)</title><rect x="99.7100%" y="1205" width="0.0356%" height="15" fill="rgb(244,85,46)" fg:x="4305278429" fg:w="1537888"/><text x="99.9600%" y="1215.50"></text></g><g><title>ratatui::buffer::buffer::Buffer::set_style (4,128,226 samples, 0.10%)</title><rect x="99.7456%" y="1205" width="0.0956%" height="15" fill="rgb(223,39,52)" fg:x="4306816317" fg:w="4128226"/><text x="99.9956%" y="1215.50"></text></g><g><title>ratatui::widgets::block::Block::render_title_position (1,767,647 samples, 0.04%)</title><rect x="99.8412%" y="1205" width="0.0409%" height="15" fill="rgb(218,200,14)" fg:x="4310944543" fg:w="1767647"/><text x="100.0912%" y="1215.50"></text></g><g><title>ratatui::widgets::block::Block::render_center_titles (1,767,647 samples, 0.04%)</title><rect x="99.8412%" y="1189" width="0.0409%" height="15" fill="rgb(208,171,16)" fg:x="4310944543" fg:w="1767647"/><text x="100.0912%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;&amp;ratatui::text::line::Line&gt;&gt; (1,767,647 samples, 0.04%)</title><rect x="99.8412%" y="1173" width="0.0409%" height="15" fill="rgb(234,200,18)" fg:x="4310944543" fg:w="1767647"/><text x="100.0912%" y="1183.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,767,647 samples, 0.04%)</title><rect x="99.8412%" y="1157" width="0.0409%" height="15" fill="rgb(228,45,11)" fg:x="4310944543" fg:w="1767647"/><text x="100.0912%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;&amp;ratatui::text::line::Line,alloc::alloc::Global&gt;&gt; (1,767,647 samples, 0.04%)</title><rect x="99.8412%" y="1141" width="0.0409%" height="15" fill="rgb(237,182,11)" fg:x="4310944543" fg:w="1767647"/><text x="100.0912%" y="1151.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,767,647 samples, 0.04%)</title><rect x="99.8412%" y="1125" width="0.0409%" height="15" fill="rgb(241,175,49)" fg:x="4310944543" fg:w="1767647"/><text x="100.0912%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;ratatui::text::line::Line&gt;&gt; (1,767,647 samples, 0.04%)</title><rect x="99.8412%" y="1109" width="0.0409%" height="15" fill="rgb(247,38,35)" fg:x="4310944543" fg:w="1767647"/><text x="100.0912%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,767,647 samples, 0.04%)</title><rect x="99.8412%" y="1093" width="0.0409%" height="15" fill="rgb(228,39,49)" fg:x="4310944543" fg:w="1767647"/><text x="100.0912%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,767,647 samples, 0.04%)</title><rect x="99.8412%" y="1077" width="0.0409%" height="15" fill="rgb(226,101,26)" fg:x="4310944543" fg:w="1767647"/><text x="100.0912%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,767,647 samples, 0.04%)</title><rect x="99.8412%" y="1061" width="0.0409%" height="15" fill="rgb(206,141,19)" fg:x="4310944543" fg:w="1767647"/><text x="100.0912%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (1,767,647 samples, 0.04%)</title><rect x="99.8412%" y="1045" width="0.0409%" height="15" fill="rgb(211,200,13)" fg:x="4310944543" fg:w="1767647"/><text x="100.0912%" y="1055.50"></text></g><g><title>regex::regex::string::Regex::new (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="1205" width="0.0497%" height="15" fill="rgb(241,121,6)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="1215.50"></text></g><g><title>regex::builders::string::RegexBuilder::build (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="1189" width="0.0497%" height="15" fill="rgb(234,221,29)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="1199.50"></text></g><g><title>regex::builders::Builder::build_one_string (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="1173" width="0.0497%" height="15" fill="rgb(229,136,5)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="1183.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="1157" width="0.0497%" height="15" fill="rgb(238,36,11)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="1167.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="1141" width="0.0497%" height="15" fill="rgb(251,55,41)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="1151.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="1125" width="0.0497%" height="15" fill="rgb(242,34,40)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="1135.50"></text></g><g><title>regex_automata::meta::strategy::new (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="1109" width="0.0497%" height="15" fill="rgb(215,42,17)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="1119.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="1093" width="0.0497%" height="15" fill="rgb(207,44,46)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="1103.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="1077" width="0.0497%" height="15" fill="rgb(211,206,28)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="1087.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="1061" width="0.0497%" height="15" fill="rgb(237,167,16)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="1071.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="1045" width="0.0497%" height="15" fill="rgb(233,66,6)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="1029" width="0.0497%" height="15" fill="rgb(246,123,29)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="1013" width="0.0497%" height="15" fill="rgb(209,62,40)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="997" width="0.0497%" height="15" fill="rgb(218,4,25)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="1007.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::_{{closure}} (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="981" width="0.0497%" height="15" fill="rgb(253,91,49)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="991.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="965" width="0.0497%" height="15" fill="rgb(228,155,29)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="975.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="949" width="0.0497%" height="15" fill="rgb(243,57,37)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="959.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="933" width="0.0497%" height="15" fill="rgb(244,167,17)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="917" width="0.0497%" height="15" fill="rgb(207,181,38)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="901" width="0.0497%" height="15" fill="rgb(211,8,23)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="885" width="0.0497%" height="15" fill="rgb(235,11,44)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="895.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::_{{closure}} (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="869" width="0.0497%" height="15" fill="rgb(248,18,52)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="879.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="853" width="0.0497%" height="15" fill="rgb(208,4,7)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="863.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="837" width="0.0497%" height="15" fill="rgb(240,17,39)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="847.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="821" width="0.0497%" height="15" fill="rgb(207,170,3)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="831.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="805" width="0.0497%" height="15" fill="rgb(236,100,52)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="815.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class_reverse_with_suffix (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="789" width="0.0497%" height="15" fill="rgb(246,78,51)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="799.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8SuffixMap::hash (2,147,232 samples, 0.05%)</title><rect x="99.8822%" y="773" width="0.0497%" height="15" fill="rgb(211,17,15)" fg:x="4312712190" fg:w="2147232"/><text x="100.1322%" y="783.50"></text></g><g><title>std::thread::sleep (1,758,318 samples, 0.04%)</title><rect x="99.9319%" y="1205" width="0.0407%" height="15" fill="rgb(209,59,46)" fg:x="4314859422" fg:w="1758318"/><text x="100.1819%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (1,088,243 samples, 0.03%)</title><rect x="99.9726%" y="1205" width="0.0252%" height="15" fill="rgb(210,92,25)" fg:x="4316617740" fg:w="1088243"/><text x="100.2226%" y="1215.50"></text></g><g><title>tokio::runtime::coop::budget (1,088,243 samples, 0.03%)</title><rect x="99.9726%" y="1189" width="0.0252%" height="15" fill="rgb(238,174,52)" fg:x="4316617740" fg:w="1088243"/><text x="100.2226%" y="1199.50"></text></g><g><title>tokio::runtime::coop::with_budget (1,088,243 samples, 0.03%)</title><rect x="99.9726%" y="1173" width="0.0252%" height="15" fill="rgb(230,73,7)" fg:x="4316617740" fg:w="1088243"/><text x="100.2226%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (1,088,243 samples, 0.03%)</title><rect x="99.9726%" y="1157" width="0.0252%" height="15" fill="rgb(243,124,40)" fg:x="4316617740" fg:w="1088243"/><text x="100.2226%" y="1167.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (1,088,243 samples, 0.03%)</title><rect x="99.9726%" y="1141" width="0.0252%" height="15" fill="rgb(244,170,11)" fg:x="4316617740" fg:w="1088243"/><text x="100.2226%" y="1151.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (1,088,243 samples, 0.03%)</title><rect x="99.9726%" y="1125" width="0.0252%" height="15" fill="rgb(207,114,54)" fg:x="4316617740" fg:w="1088243"/><text x="100.2226%" y="1135.50"></text></g><g><title>all (4,317,799,159 samples, 100%)</title><rect x="0.0000%" y="1237" width="100.0000%" height="15" fill="rgb(205,42,20)" fg:x="0" fg:w="4317799159"/><text x="0.2500%" y="1247.50"></text></g><g><title>tokio-runtime-w (4,312,256,733 samples, 99.87%)</title><rect x="0.1284%" y="1221" width="99.8716%" height="15" fill="rgb(230,30,28)" fg:x="5542426" fg:w="4312256733"/><text x="0.3784%" y="1231.50">tokio-runtime-w</text></g></svg></svg>